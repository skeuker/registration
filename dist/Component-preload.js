/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "capetown/gov/registration/Component-preload",
	"modules": {
		"capetown/gov/registration/Component.js": "/*global history */\n/**\n * capetown.gov.registration\n * @namespace\n */\nsap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"capetown/gov/registration/model/models\",\n\t\"capetown/gov/registration/util/ErrorHandler\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\"\n], function(UIComponent, Device, models, ErrorHandler, JSONModel, History) {\n\t\"use strict\";\n\n\t/**\n\t * Component\n\t * @description Registration component\n\t * @module Component\n\t */\n\treturn UIComponent.extend(\"capetown.gov.registration.Component\", {\n\n\t\t//component metadata\n\t\tmetadata: {\n\t\t\tmanifest: \"json\" //component to use the manifest.json descriptor file\n\t\t},\n\n\t\t//user context of logged on person\n\t\toUserInfo: null,\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\n\t\t\t//instantiate an error handler\n\t\t\tthis.oErrorHandler = new ErrorHandler(this);\n\n\t\t\t//preload error fragment to prevent issues later due to connection issues\n\t\t\tsap.ui.xmlfragment(\"capetown.gov.registration.fragment.Error\").destroy();\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t//get OData model reference for duplicate check lists\n\t\t\tthis._oODataModel = this.getModel(\"Registration\");\n\n\t\t\t//get application configuration\n\t\t\tthis.getConfiguration();\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\n\t\t},\n\n\t\t//register global script error event handler\n\t\tonWindowError: function(sErrorMessage, sFile, iLine) {\n\n\t\t\t//get script error message text\n\t\t\tvar sMessage = this.getModel(\"i18n\").getResourceBundle().getText(\"messageScriptErrorOccured\");\n\n\t\t\t//construct error message details\n\t\t\tvar sMessageDetails = [\n\t\t\t\t\"Error: \" + sErrorMessage,\n\t\t\t\t\"Location: \" + sFile,\n\t\t\t\t\"Line: \" + iLine\n\t\t\t].join(\" - \");\n\n\t\t\t//replace message details when no further error details were reported\n\t\t\tif (sErrorMessage === undefined || sErrorMessage === \"\") {\n\t\t\t\tsMessageDetails = this.getModel(\"i18n\").getResourceBundle().getText(\"messageScriptErrorOccuredNoDetails\");\n\t\t\t}\n\n\t\t\t//skip jquery 'top' popover error message as it occurs once in a while but cannot be reproduced\n\t\t\tif (/Cannot read property 'top' of undefined/.test(sMessageDetails) || \n\t\t\t\t/Error: Unable to get property 'top' of undefined/.test(sMessageDetails) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t//skip 'Error: adding element with duplicate id '__link', occurs once in a while without impact on application \n\t\t\tif(/Error: adding element with duplicate id '__link\\d*[-]__popover/.test(sMessageDetails)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//show browser script error dialog\n\t\t\tthis.showErrorDialog(sMessage, sMessageDetails, \"Browser script exception occured\");\n\n\t\t},\n\n\t\t//show error dialog\n\t\tshowErrorDialog: function(sMessage, sMessageDetails, sTitle) {\n\n\t\t\t//only one error dialog at a time\n\t\t\tif (this.bErrorDialogOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//create Error model for rendering in dialog\n\t\t\tvar oError = new sap.ui.model.json.JSONModel({\n\t\t\t\tmessage: sMessage,\n\t\t\t\tmessageDetails: sMessageDetails\n\t\t\t});\n\n\t\t\t//construct confirmation dialog content\n\t\t\tvar oErrorDialogContent = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.Error\", this);\n\n\t\t\t//construct dialog instance\t\t\t\n\t\t\tthis.oErrorDialog = new sap.m.Dialog({\n\t\t\t\ticon: \"sap-icon://message-error\",\n\t\t\t\ttype: sap.m.DialogType.Message,\n\t\t\t\tstate: sap.ui.core.ValueState.Error,\n\t\t\t\ttitle: sTitle,\n\t\t\t\tcontentWidth: \"450px\",\n\t\t\t\tdraggable: true,\n\t\t\t\tcontent: oErrorDialogContent,\n\n\t\t\t\t//buttons\n\t\t\t\tbuttons: [\n\n\t\t\t\t\t//e-mail this error text\n\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\t\ttype: sap.m.ButtonType.Transparent,\n\t\t\t\t\t\ttext: \"e-Mail\",\n\t\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t\t//trigger email send\n\t\t\t\t\t\t\tsap.m.URLHelper.triggerEmail(\"eservices@capetown.gov.za\", \"Registration script error\", sMessageDetails);\n\n\t\t\t\t\t\t\t//close script error dialog dialog\n\t\t\t\t\t\t\tthis.oErrorDialog.close();\n\n\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t}),\n\n\t\t\t\t\t//exit from user action\n\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\t\tid: \"buttonErrorDialogExit\",\n\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\ttext: \"Exit\",\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t\t//close error dialog\n\t\t\t\t\t\t\tthis.oErrorDialog.close();\n\n\t\t\t\t\t\t\t//navigate back to previous or home\n\t\t\t\t\t\t\tthis.navigateBack(\"Home\");\n\n\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t}),\n\n\t\t\t\t\t//close this error dialog\n\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\t\tid: \"buttonErrorDialogClose\",\n\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\ttext: \"Close\",\n\t\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t\t//close error dialog\n\t\t\t\t\t\t\tthis.oErrorDialog.close();\n\n\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t})\n\n\t\t\t\t],\n\n\t\t\t\t//event handler for dialog destroy\n\t\t\t\tafterClose: function() {\n\n\t\t\t\t\t//destroy error dialog UI control\n\t\t\t\t\tthis.oErrorDialog.destroy();\n\n\t\t\t\t\t//error dialog no longer open\n\t\t\t\t\tthis.bErrorDialogOpen = false;\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t\t//set error model to dialog\n\t\t\tthis.oErrorDialog.setModel(oError, \"Error\");\n\n\t\t\t//keep track that error dialog open\n\t\t\tthis.bErrorDialogOpen = true;\n\n\t\t\t//open dialog\n\t\t\tthis.oErrorDialog.open();\n\n\t\t},\n\n\t\t//set error message text details to visible\n\t\ttoggleErrorDetails: function() {\n\n\t\t\t//get current visibility of error details\n\t\t\tvar bVisible = sap.ui.getCore().byId(\"felemErrorMessageDetails\").getVisible();\n\n\t\t\t//set error message details text area to visible\n\t\t\tswitch (bVisible) {\n\t\t\t\tcase true:\n\t\t\t\t\tsap.ui.getCore().byId(\"felemErrorMessageDetails\").setVisible(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase false:\n\t\t\t\t\tsap.ui.getCore().byId(\"felemErrorMessageDetails\").setVisible(true);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ErrorHandler is destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\n\t\t\t//distroy the error handler\n\t\t\tthis.oErrorHandler.destroy();\n\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\n\t\t},\n\n\t\t//get content density class\n\t\tgetContentDensityClass: function() {\n\n\t\t\t//get content density class\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//feedback to caller\n\t\t\treturn this._sContentDensityClass;\n\n\t\t},\n\n\t\t//get configuration\n\t\tgetConfiguration: function() {\n\n\t\t\t//set models: OData model\n\t\t\tif (!this._oODataModel) {\n\t\t\t\tthis._oODataModel = this.getModel(\"Registration\");\n\t\t\t\tsap.ui.getCore().setModel(this._oODataModel, \"Registration\");\n\t\t\t}\n\n\t\t\t//set to use batch request for read\n\t\t\tthis._oODataModel.setUseBatch(true);\n\n\t\t\t//set deferred groupId for read of configuration\n\t\t\tvar aDeferredGroups = this._oODataModel.getDeferredGroups();\n\t\t\tif (aDeferredGroups.indexOf(\"Configuration\") < 0) {\n\t\t\t\taDeferredGroups.push(\"Configuration\");\n\t\t\t\tthis._oODataModel.setDeferredGroups(aDeferredGroups);\n\t\t\t}\n\n\t\t\t//get service types\n\t\t\tthis._oODataModel.read(\"/BankAccountPurposeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/RelationshipTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/LegalEntityTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/AddressCategorySet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/BankAccountTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/CertificateTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/ParameterTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/ServiceTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/ContactTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/EntityStatusSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/IndustrySet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/AddressTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/IDTypeSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/CountrySet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/RegionSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/ActionSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/TitleSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/RoleSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\t\t\tthis._oODataModel.read(\"/BankSet\", {\n\t\t\t\tgroupId: \"Configuration\"\n\t\t\t});\n\n\t\t\t//submit batch request\t\t\t\n\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t//changes in organisation group ID\n\t\t\t\tgroupId: \"Configuration\",\n\n\t\t\t\t//success event handler: nothing at this stage\n\t\t\t\tsuccess: function(oData, response) {\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t},\n\n\t\t//bind component to its master data\n\t\tbindMasterData: function() {\n\n\t\t\t//create and bind person list for duplicate check\n\t\t\tthis.oPersonList = new sap.m.List({});\n\t\t\tthis.oPersonList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oPersonList.bindItems({\n\t\t\t\tpath: \"Registration>/PersonSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oPersonList.getBinding(\"items\").refresh();\n\n\t\t\t//create and bind organisation list for duplicate check\n\t\t\tthis.oOrganisationList = new sap.m.List({});\n\t\t\tthis.oOrganisationList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oOrganisationList.bindItems({\n\t\t\t\tpath: \"Registration>/OrganisationSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oOrganisationList.getBinding(\"items\").refresh();\n\n\t\t\t//create and bind supplier list for duplicate check\n\t\t\tthis.oSupplierList = new sap.m.List({});\n\t\t\tthis.oSupplierList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oSupplierList.bindItems({\n\t\t\t\tpath: \"Registration>/SupplierSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oSupplierList.getBinding(\"items\").refresh();\n\n\t\t\t//create and bind service list for duplicate check\n\t\t\tthis.oServiceList = new sap.m.List({});\n\t\t\tthis.oServiceList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oServiceList.bindItems({\n\t\t\t\tpath: \"Registration>/ServiceSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oServiceList.getBinding(\"items\").refresh();\n\n\t\t\t//create and bind responsiblity list for duplicate check\n\t\t\tthis.oResponsibilityList = new sap.m.List({});\n\t\t\tthis.oResponsibilityList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oResponsibilityList.bindItems({\n\t\t\t\tpath: \"Registration>/ResponsibilitySet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oResponsibilityList.getBinding(\"items\").refresh();\n\t\t\t\n\t\t\t//create and bind list of notifications (for entity notifications)\n\t\t\tthis.oNotificationList = new sap.m.List({});\n\t\t\tthis.oNotificationList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oNotificationList.bindItems({\n\t\t\t\tpath: \"Registration>/NotificatnSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oNotificationList.getBinding(\"items\").refresh();\n\t\t\t\n\t\t\t//create and bind list of messages (for entity notifications)\n\t\t\tthis.oMessageList = new sap.m.List({});\n\t\t\tthis.oMessageList.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.oMessageList.bindItems({\n\t\t\t\tpath: \"Registration>/MessageSet\",\n\t\t\t\ttemplate: new sap.m.ObjectListItem({})\n\t\t\t});\n\t\t\tthis.oMessageList.getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t/**\n\t\t * Navigate back in history or to specified route\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t * @public\n\t\t */\n\t\tnavigateBack: function(sRoute) {\n\n\t\t\t//get previous hash\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t//navigate to previous hash where available\n\t\t\tif (sPreviousHash !== undefined) {\n\n\t\t\t\t//Use browser history to go navigate back\n\t\t\t\thistory.go(-1);\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise navigate along route and write history\n\t\t\t\tthis.getRouter().navTo(sRoute, {}, true);\n\n\t\t\t}\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\treturn {\n\t\tinit: function() {\n\n\t\t\t// create\n\t\t\tvar oMockServer = new MockServer({\n\t\t\t\trootUri: \"/sap/opu/odata/sap/ZREGISTRATION_SRV/\" //ensure to have ending forward slash, else OData requests will not be intercepted\n\t\t\t});\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters();\n\n\t\t\t// configure\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\trespondImmediately: true,\n\t\t\t\tautoRespondAfter: oUriParameters.get(\"serverDelay\") || 1000\n\t\t\t});\n\n\t\t\t// simulate\n\t\t\tvar sPath = jQuery.sap.getModulePath(\"capetown.gov.registration.localService\");\n\t\t\toMockServer.simulate(sPath + \"/metadata.xml\", sPath + \"/mockdata\");\n\n\t\t\tvar aRequests = oMockServer.getRequests();\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"getUserInfoFromPortal(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for getUserInfoFromPortal\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\t\"d\": {\n\t\t\t\t\t\t\t\"getUserInfoFromPortal\": {\n\t\t\t\t\t\t\t\t\"PersonID\": \"Stefan Keuker\",\n\t\t\t\t\t\t\t\t\"PersonCount\": \"1\",\n\t\t\t\t\t\t\t\t\"OrganisationCount\": \"2\",\n\t\t\t\t\t\t\t\t\"NotificationCount\": \"4\",\n\t\t\t\t\t\t\t\t\"ServiceCount\": \"3\",\n\t\t\t\t\t\t\t\t\"DraftCount\": \"4\",\n\t\t\t\t\t\t\t\t\"IsInitialLogon\": false,\n\t\t\t\t\t\t\t\t\"SupplierCount\": \"2\",\n\t\t\t\t\t\t\t\t\"RatingValue\": 4,\n\t\t\t\t\t\t\t\t\"CobrowseUserID\": \"stefan.keuker\",\n\t\t\t\t\t\t\t\t\"DoSynchWithERP\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"getUserInfoFromERP(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for getUserInfoFromERP\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\t\"d\": {\n\t\t\t\t\t\t\t\"getUserInfoFromERP\": {\n\t\t\t\t\t\t\t\t\"PersonID\": \"Stefan Keuker\",\n\t\t\t\t\t\t\t\t\"PersonCount\": \"1\",\n\t\t\t\t\t\t\t\t\"OrganisationCount\": \"2\",\n\t\t\t\t\t\t\t\t\"NotificationCount\": \"4\",\n\t\t\t\t\t\t\t\t\"ServiceCount\": \"3\",\n\t\t\t\t\t\t\t\t\"DraftCount\": \"4\",\n\t\t\t\t\t\t\t\t\"IsInitialLogon\": false,\n\t\t\t\t\t\t\t\t\"SupplierCount\": \"2\",\n\t\t\t\t\t\t\t\t\"RatingValue\": 4,\n\t\t\t\t\t\t\t\t\"CobrowseUserID\": \"stefan.keuker\",\n\t\t\t\t\t\t\t\t\"DoSynchWithERP\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"validatePerson(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for validatePerson\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tmessage: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"validateOrganisation(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for validateOrganisation\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tmessage: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"validateSupplier(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for validateSupplier\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tmessage: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"validateService(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for validateService\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tmessage: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"validateDeclaration(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for validateDeclaration\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tresult: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"refreshDataFromERP(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for refreshDataFromERP\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\tmessage: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\taRequests.push({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tpath: new RegExp(\"synchronizeWithERP(.*)\"),\n\t\t\t\tresponse: function(oXhr, sUrlParams) {\n\t\t\t\t\tjQuery.sap.log.debug(\"Incoming request for synchronizeWithERP\");\n\t\t\t\t\tvar today = new Date();\n\t\t\t\t\ttoday.setHours(0); // or today.toUTCString(0) due to timezone differences\n\t\t\t\t\ttoday.setMinutes(0);\n\t\t\t\t\ttoday.setSeconds(0);\n\t\t\t\t\toXhr.respondJSON(200, {}, JSON.stringify({\n\t\t\t\t\t\td: {\n\t\t\t\t\t\t\t\"synchronizeWithERP\": {\n\t\t\t\t\t\t\t\t\"PersonID\": \"Stefan Keuker\",\n\t\t\t\t\t\t\t\t\"PersonCount\": \"1\",\n\t\t\t\t\t\t\t\t\"OrganisationCount\": \"2\",\n\t\t\t\t\t\t\t\t\"NotificationCount\": \"4\",\n\t\t\t\t\t\t\t\t\"ServiceCount\": \"3\",\n\t\t\t\t\t\t\t\t\"DraftCount\": \"4\",\n\t\t\t\t\t\t\t\t\"IsInitialLogon\": false,\n\t\t\t\t\t\t\t\t\"SupplierCount\": \"2\",\n\t\t\t\t\t\t\t\t\"RatingValue\": 4,\n\t\t\t\t\t\t\t\t\"CobrowseUserID\": \"stefan.keuker\",\n\t\t\t\t\t\t\t\t\"DoSynchWithERP\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t//set array of requests to be handled by mock server\n\t\t\toMockServer.setRequests(aRequests);\n\n\t\t\t// start\n\t\t\toMockServer.start();\n\n\t\t}\n\n\t};\n\n});",
		"capetown/gov/registration/view/supplier/SupplierCreateForOrganisation.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierCreateForOrganisation\"\n\tbusy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressSupplierCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard id=\"wizSupplierCreate\" complete=\"onPressSupplierWizardSubmitButton\" finishButtonText=\"{viewModel>/wizFinishButtonText}\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"false\">\n\t\t\t\t<WizardStep id=\"wizstepSupplierAttributes\" icon=\"sap-icon://initiative\" title=\"Supplier details\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationAttributes\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBEEClassification\" icon=\"sap-icon://survey\" title=\"B-BBEE\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAddresses\" icon=\"sap-icon://addresses\" title=\"Addresses\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierContacts\" icon=\"sap-icon://contacts\" title=\"Contacts\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationContacts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBankAccounts\" icon=\"sap-icon://wallet\" title=\"Bank accounts\" validated=\"false\" activate=\"setBanksModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierCertificates\" icon=\"sap-icon://badge\" title=\"Certificates\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDocuments\" icon=\"sap-icon://documents\" title=\"Documents\" validated=\"false\"\n\t\t\t\t\tactivate=\"setSupplierDocumentTypesModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDeclarations\" icon=\"sap-icon://signature\" title=\"Declarations\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/service/ServiceSUSOrganisationCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.service.ServiceSUSOrganisationCreate\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage id=\"pageServiceWizardContent\" title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressServiceCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndService\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard complete=\"onPressServiceWizardSubmitButton\" finishButtonText=\"Submit\" id=\"wizServiceCreate\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"true\">\n\t\t\t\t<WizardStep id=\"wizstepPersonDataAccuracyDeclaration\" icon=\"sap-icon://employee-approvals\" title=\"Confirm your details\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepSupplierOrganisationSelect\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierOrganisationSelect\" icon=\"sap-icon://building\" title=\"Select organisation\" validated=\"false\"\n\t\t\t\t\tsubsequentSteps=\"wizstepServiceSupplierSelect, wizstepServiceResponsibilities\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationListNoDelete\" type=\"XML\"/>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepServiceSupplierSelect\" icon=\"sap-icon://supplier\" title=\"Select supplier\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepServiceResponsibilities\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierListNoDelete\" type=\"XML\"/>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepServiceResponsibilities\" icon=\"sap-icon://task\" title=\"Responsibilities\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.service.ServiceResponsibilities\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierPersonCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierPersonCreate\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressSupplierCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard id=\"wizSupplierCreate\" complete=\"onPressSupplierWizardSubmitButton\" finishButtonText=\"Submit\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"false\">\n\t\t\t\t<WizardStep id=\"wizstepPersonDataAccuracyDeclaration\" icon=\"sap-icon://employee-approvals\" title=\"Confirm details\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAttributes\" icon=\"sap-icon://initiative\" title=\"Supplier details\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonAttributesTabBar\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAddresses\" icon=\"sap-icon://addresses\" title=\"Addresses\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierContacts\" icon=\"sap-icon://contacts\" title=\"Contacts\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonContacts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBankAccounts\" icon=\"sap-icon://wallet\" title=\"Bank accounts\" validated=\"false\" activate=\"setBanksModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierCertificates\" icon=\"sap-icon://badge\" title=\"Certificates\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDocuments\" icon=\"sap-icon://documents\" title=\"Documents\" validated=\"false\"\n\t\t\t\t\tactivate=\"setSupplierDocumentTypesModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDeclarations\" icon=\"sap-icon://signature\" title=\"Declarations\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/NotificationList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.NotificationList\">\n\t<semantic:FullscreenPage title=\"{i18n>titleNotificationList}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.NotificationList\" type=\"XML\"/>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierPerson.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:semantic=\"sap.m.semantic\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" busy=\"{viewModel>/busy}\" busyIndicatorDelay=\"{viewModel>/delay}\"\n\tcontrollerName=\"capetown.gov.registration.controller.supplier.SupplierPerson\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:customFooterContent>\n\t\t\t<Text text=\"{ path: 'Registration>LastUpdateTimeStamp', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t<Text text=\"{= (${Registration>LastSubmitReferenceID}) ? 'Last submission reference: ' + ${Registration>LastSubmitReferenceID} : '' }\"\n\t\t\t\tclass=\"sapUiSmallMarginEnd cctLastSubmissionReference\"/>\n\t\t\t<MenuButton text=\"Support\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t<menu>\n\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshSupplier\" text=\"Refresh my data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Menu>\n\t\t\t\t</menu>\n\t\t\t</MenuButton>\n\t\t\t<ToolbarSeparator class=\"sapUiLargeMarginEnd\"/>\n\t\t\t<Button text=\"Check\" id=\"btnCheckEntity\" press=\"onPressSupplierCheckInputButton\" enabled=\"{viewModel>/btnCheckEntityEnabled}\"/>\n\t\t\t<Button text=\"Delete\" id=\"btnDeleteEntity\" press=\"onPressSupplierDeleteButton\" enabled=\"{viewModel>/btnDeleteEntityEnabled}\"/>\n\t\t\t<Button text=\"Save\" id=\"btnSaveEntity\" press=\"onPressSupplierSaveButton\" type=\"{viewModel>/btnSaveEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSaveEntityEnabled}\"/>\n\t\t\t<Button text=\"{viewModel>/btnSubmitEntityText}\" id=\"btnSubmitEntity\" press=\"onPressSupplierSubmitButton\"\n\t\t\t\ttype=\"{viewModel>/btnSubmitEntityType}\" enabled=\"{viewModel>/btnSubmitEntityEnabled}\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<ObjectHeader responsive=\"true\" fullScreenOptimized=\"false\" intro=\"\"\n\t\t\t\ttitle=\"{= ${ path: 'Registration>PersonID', formatter: '.formatPersonID' } + ' (Sole Proprietor)'}\" showTitleSelector=\"false\"\n\t\t\t\ttitleActive=\"true\" titlePress=\"onPressSupplierObjectHeaderTitle\" showMarkers=\"false\" markFlagged=\"false\" markFavorite=\"false\"\n\t\t\t\tnumberState=\"Success\" backgroundDesign=\"Translucent\" condensed=\"true\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"ID number\" text=\"{Registration>toPerson/IDNumber}\"/>\n\t\t\t\t</attributes>\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus id=\"statusSupplier\" title=\"Status\" text=\"{ path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID' }\"\n\t\t\t\t\t\tstate=\"{viewModel>/statusEntityState}\" icon=\"{viewModel>/statusEntityIcon}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<headerContainer>\n\t\t\t\t\t<IconTabBar id=\"itabSupplier\" expandable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Details\" key=\"Attributes\" icon=\"sap-icon://person-placeholder\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Addresses\" key=\"Addresses\" icon=\"sap-icon://addresses\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"B-BBEE\" key=\"B-BBEE\" icon=\"sap-icon://survey\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Contacts\" key=\"Contacts\" icon=\"sap-icon://contacts\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonContacts\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Accounts\" key=\"Accounts\" icon=\"sap-icon://wallet\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Certificates\" key=\"Certificates\" icon=\"sap-icon://badge\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Documents\" key=\"Documents\" icon=\"sap-icon://documents\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonDocuments\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Declarations\" key=\"Declarations\" icon=\"sap-icon://signature\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</headerContainer>\n\t\t\t</ObjectHeader>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierOrganisation.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" xmlns:ui=\"sap.ca.ui\"\n\theight=\"100%\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierOrganisation\" displayBlock=\"true\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:customFooterContent>\n\t\t\t<Text text=\"{ path: 'Registration>LastUpdateTimeStamp', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t<Text text=\"{= (${Registration>LastSubmitReferenceID}) ? 'Last submission reference: ' + ${Registration>LastSubmitReferenceID} : '' }\"\n\t\t\t\tclass=\"sapUiSmallMarginEnd cctLastSubmissionReference\"/>\n\t\t\t<MenuButton text=\"Support\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t<menu>\n\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshSupplier\" text=\"Refresh my data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Menu>\n\t\t\t\t</menu>\n\t\t\t</MenuButton>\n\t\t\t<ToolbarSeparator class=\"sapUiLargeMarginEnd\"/>\n\t\t\t<Button text=\"Check\" id=\"btnCheckEntity\" press=\"onPressSupplierCheckInputButton\" enabled=\"{viewModel>/btnCheckEntityEnabled}\"/>\n\t\t\t<Button text=\"Delete\" id=\"btnDeleteEntity\" press=\"onPressSupplierDeleteButton\" enabled=\"{viewModel>/btnDeleteEntityEnabled}\"/>\n\t\t\t<Button text=\"Save\" id=\"btnSaveEntity\" press=\"onPressSupplierSaveButton\" type=\"{viewModel>/btnSaveEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSaveEntityEnabled}\"/>\n\t\t\t<Button text=\"{viewModel>/btnSubmitEntityText}\" id=\"btnSubmitEntity\" press=\"onPressSupplierSubmitButton\"\n\t\t\t\ttype=\"{viewModel>/btnSubmitEntityType}\" enabled=\"{viewModel>/btnSubmitEntityEnabled}\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<ObjectHeader responsive=\"true\" fullScreenOptimized=\"false\"\n\t\t\t\ttitle=\"{= ${ path: 'Registration>OrganisationID', formatter: '.formatOrganisationID' } + ' (' + ${path: 'Registration>toOrganisation/LegalEntityType', formatter: '.formatLegalEntityType'} + ')' }\"\n\t\t\t\ttitleActive=\"true\" titlePress=\"onPressSupplierObjectHeaderTitle\" showTitleSelector=\"false\" titleSelectorPress=\"onPress\" showMarkers=\"false\"\n\t\t\t\tmarkFlagged=\"false\" markFavorite=\"false\" numberState=\"Success\" backgroundDesign=\"Translucent\" condensed=\"true\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"Company registration number\" text=\"{Registration>toOrganisation/CompanyRegNbr}\"/>\n\t\t\t\t</attributes>\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus title=\"Status\" text=\"{ path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID' }\"\n\t\t\t\t\t\tstate=\"{viewModel>/statusEntityState}\" icon=\"{viewModel>/statusEntityIcon}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<headerContainer>\n\t\t\t\t\t<IconTabBar id=\"itabSupplier\" expandable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Details\" key=\"Attributes\" icon=\"sap-icon://building\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Addresses\" key=\"Addresses\" icon=\"sap-icon://addresses\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"B-BBEE\" key=\"B-BBEE\" icon=\"sap-icon://survey\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Contacts\" key=\"Contacts\" icon=\"sap-icon://contacts\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationContacts\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Accounts\" key=\"Accounts\" icon=\"sap-icon://wallet\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Certificates\" key=\"Certificates\" icon=\"sap-icon://badge\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Documents\" key=\"Documents\" icon=\"sap-icon://documents\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationDocuments\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Declarations\" key=\"Declarations\" icon=\"sap-icon://signature\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</headerContainer>\n\t\t\t</ObjectHeader>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierCreateForPerson.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierCreateForPerson\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressSupplierCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard id=\"wizSupplierCreate\" complete=\"onPressSupplierWizardSubmitButton\" finishButtonText=\"{viewModel>/wizFinishButtonText}\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"false\">\n\t\t\t\t<WizardStep id=\"wizstepSupplierAttributes\" icon=\"sap-icon://initiative\" title=\"Supplier details\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonAttributes\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBEEClassification\" icon=\"sap-icon://survey\" title=\"B-BBEE\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAddresses\" icon=\"sap-icon://addresses\" title=\"Addresses\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierContacts\" icon=\"sap-icon://contacts\" title=\"Contacts\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonContacts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBankAccounts\" icon=\"sap-icon://wallet\" title=\"Bank accounts\" validated=\"false\" activate=\"setBanksModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierCertificates\" icon=\"sap-icon://badge\" title=\"Certificates\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDocuments\" icon=\"sap-icon://documents\" title=\"Documents\" validated=\"false\"\n\t\t\t\t\tactivate=\"setSupplierDocumentTypesModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDeclarations\" icon=\"sap-icon://signature\" title=\"Declarations\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/NotFound.view.xml": "<mvc:View controllerName=\"capetown.gov.registration.controller.Base\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\n\t<MessagePage description=\"\" icon=\"{sap-icon://document}\" id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\"\n\t\ttext=\"{i18n>textNotFoundPage}\" title=\"{i18n>titleNotFoundPage}\"></MessagePage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierList\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{i18n>titleSupplierList}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierList\" type=\"XML\"/>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/supplier/SupplierOrganisationCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.supplier.SupplierOrganisationCreate\"\n\tbusy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressSupplierCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndSupplier\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard id=\"wizSupplierCreate\" complete=\"onPressSupplierWizardSubmitButton\" finishButtonText=\"Submit\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"false\">\n\t\t\t\t<WizardStep id=\"wizstepSupplierOrganisationSelect\" icon=\"sap-icon://building\" title=\"Select organisation\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationList\" type=\"XML\"/>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAttributes\" icon=\"sap-icon://initiative\" title=\"Supplier details\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationAttributesTabBar\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierAddresses\" icon=\"sap-icon://addresses\" title=\"Addresses\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAddresses\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierContacts\" icon=\"sap-icon://contacts\" title=\"Contacts\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationContacts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierBankAccounts\" icon=\"sap-icon://wallet\" title=\"Bank accounts\" validated=\"false\" activate=\"setBanksModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBankAccounts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierCertificates\" icon=\"sap-icon://badge\" title=\"Certificates\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierCertificates\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDocuments\" icon=\"sap-icon://documents\" title=\"Documents\" validated=\"false\"\n\t\t\t\t\tactivate=\"setSupplierDocumentTypesModel\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDeclarations\" icon=\"sap-icon://signature\" title=\"Declarations\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDeclarations\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/service/ServiceSUSPersonCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.service.ServiceSUSPersonCreate\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage id=\"pageServiceWizardContent\" title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressServiceCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndService\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard complete=\"onPressServiceWizardSubmitButton\" finishButtonText=\"Submit\" id=\"wizServiceCreate\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"true\">\n\t\t\t\t<WizardStep id=\"wizstepPersonDataAccuracyDeclaration\" icon=\"sap-icon://employee-approvals\" title=\"Confirm your details\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepServiceSupplierSelect\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepServiceSupplierSelect\" icon=\"sap-icon://supplier\" title=\"Select supplier\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepSupplierDataAccuracyDeclaration\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierListNoDelete\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepSupplierDataAccuracyDeclaration\" icon=\"sap-icon://accept\" title=\"Confirm supplier\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDataAccuracyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/service/Service.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:semantic=\"sap.m.semantic\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" busy=\"{viewModel>/busy}\" busyIndicatorDelay=\"{viewModel>/delay}\"\n\tcontrollerName=\"capetown.gov.registration.controller.service.Service\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:customFooterContent>\n\t\t\t<Text text=\"{ path: 'Registration>LastUpdateTimeStamp', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t<Text text=\"{= (${Registration>LastSubmitReferenceID}) ? 'Last submission reference: ' + ${Registration>LastSubmitReferenceID} : '' }\"\n\t\t\t\tclass=\"sapUiSmallMarginEnd cctLastSubmissionReference\"/>\n\t\t\t<MenuButton text=\"Support\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t<menu>\n\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshService\" text=\"Refresh my data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Menu>\n\t\t\t\t</menu>\n\t\t\t</MenuButton>\n\t\t\t<ToolbarSeparator class=\"sapUiLargeMarginEnd\"/>\n\t\t\t<Button text=\"Check\" press=\"onPressServiceCheckInputButton\"/>\n\t\t\t<Button text=\"Save\" id=\"btnSaveEntity\" press=\"onPressServiceSaveButton\" type=\"{viewModel>/btnSaveEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSaveEntityEnabled}\"/>\n\t\t\t<Button text=\"Submit\" id=\"btnSubmitEntity\" press=\"onPressServiceSubmitButton\" type=\"{viewModel>/btnSubmitEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSubmitEntityEnabled}\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndService\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/></customData>\n\t\t\t</MessageStrip>\n\t\t\t<ObjectHeader responsive=\"true\" fullScreenOptimized=\"false\" intro=\"\" title=\"{viewModel>/objHeaderTitle}\" titleActive=\"false\"\n\t\t\t\ttitlePress=\"onPressServiceTitle\" showTitleSelector=\"false\" titleSelectorPress=\"\" showMarkers=\"false\" markFlagged=\"false\"\n\t\t\t\tmarkFavorite=\"false\" numberState=\"Success\" backgroundDesign=\"Translucent\" condensed=\"true\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"{viewModel>/objAttributeIDTitle}\" text=\"{viewModel>/objAttributeIDText}\"/>\n\t\t\t\t</attributes>\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus title=\"Status\" text=\"{ path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID' }\"\n\t\t\t\t\t\tstate=\"{viewModel>/statusEntityState}\" icon=\"{viewModel>/statusEntityIcon}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<headerContainer>\n\t\t\t\t\t<IconTabBar id=\"itabService\" expandable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Person\" key=\"Person\" icon=\"sap-icon://person-placeholder\" visible=\"{= ${Registration>PersonID} ? true : false }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<Link text=\"Go to Person\" press=\"onPressNavigateToPersonLink\" class=\"sapUiMediumMarginBegin\"/>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Organisation\" key=\"Organisation\" icon=\"sap-icon://building\"\n\t\t\t\t\t\t\t\tvisible=\"{= ${Registration>OrganisationID} ? true : false }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<Link text=\"Go to Organisation\" press=\"onPressNavigateToOrganisationLink\" class=\"sapUiMediumMarginBegin sapUiSmallMarginBottom\"/>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Supplier\" key=\"Supplier\" icon=\"sap-icon://supplier\" visible=\"{= ${Registration>SupplierID} ? true : false }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<Link text=\"Go to Supplier\" press=\"onPressNavigateToSupplierLink\" class=\"sapUiMediumMarginBegin sapUiSmallMarginBottom\"/>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Details\" key=\"Attributes\" icon=\"sap-icon://task\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.service.ServiceAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Roles\" key=\"Roles\" icon=\"sap-icon://task\" visible=\"{= ${Registration>OrganisationID} ? true : false }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.service.ServiceResponsibilities\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</headerContainer>\n\t\t\t</ObjectHeader>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/service/ServiceList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.service.ServiceList\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{i18n>titleServiceList}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.service.ServiceList\" type=\"XML\"/>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/person/Person.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:semantic=\"sap.m.semantic\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" busy=\"{viewModel>/busy}\" busyIndicatorDelay=\"{viewModel>/delay}\"\n\tcontrollerName=\"capetown.gov.registration.controller.person.Person\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\"\n\t\tshowSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:customFooterContent>\n\t\t\t<Text text=\"{ path: 'Registration>LastUpdateTimeStamp', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t<Text text=\"{= (${Registration>LastSubmitReferenceID}) ? 'Last submission reference: ' + ${Registration>LastSubmitReferenceID} : '' }\"\n\t\t\t\tclass=\"sapUiSmallMarginEnd cctLastSubmissionReference\"/>\n\t\t\t<MenuButton text=\"Support\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t<menu>\n\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshPerson\" text=\"Refresh my data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Menu>\n\t\t\t\t</menu>\n\t\t\t</MenuButton>\n\t\t\t<ToolbarSeparator class=\"sapUiLargeMarginEnd\"/>\n\t\t\t<Button text=\"Check\" press=\"onPressPersonCheckInputButton\"/>\n\t\t\t<Button text=\"Delete\" press=\"onPressPersonDeleteButton\" enabled=\"{viewModel>/btnDeleteEntityEnabled}\"/>\n\t\t\t<Button text=\"Save\" id=\"btnSaveEntity\" press=\"onPressPersonSaveButton\" type=\"{viewModel>/btnSaveEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSaveEntityEnabled}\"/>\n\t\t\t<Button text=\"{viewModel>/btnSubmitEntityText}\" id=\"btnSubmitEntity\" press=\"onPressPersonSubmitButton\"\n\t\t\t\ttype=\"{viewModel>/btnSubmitEntityType}\" enabled=\"{viewModel>/btnSubmitEntityEnabled}\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndPerson\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<ObjectHeader responsive=\"true\" fullScreenOptimized=\"false\" intro=\"\" title=\"{Registration>Name} {Registration>Surname}\" titleActive=\"false\"\n\t\t\t\ttitlePress=\"handleTitlePress\" showTitleSelector=\"false\" titleSelectorPress=\"onPress\" showMarkers=\"false\" markFlagged=\"false\"\n\t\t\t\tmarkFavorite=\"false\" numberState=\"Success\" backgroundDesign=\"Translucent\" condensed=\"true\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"ID number\" text=\"{Registration>IDNumber}\"/>\n\t\t\t\t</attributes>\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus title=\"Status\" text=\"{ path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID' }\"\n\t\t\t\t\t\tstate=\"{viewModel>/statusEntityState}\" icon=\"{viewModel>/statusEntityIcon}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<headerContainer>\n\t\t\t\t\t<IconTabBar id=\"itabPerson\" expandable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Details\" key=\"Attributes\" icon=\"sap-icon://person-placeholder\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"User\" key=\"User\" icon=\"sap-icon://account\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonUser\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Documents\" key=\"Documents\" icon=\"sap-icon://documents\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonDocuments\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Addresses\" key=\"Addresses\" icon=\"sap-icon://addresses\" visible=\"{viewModel>/icontabPersonAddressesVisible}\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonAddresses\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Roles\" key=\"Roles\" icon=\"sap-icon://task\" visible=\"{= ${Registration>EntityStatusID} !== '0' }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonResponsibilities\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Services\" key=\"Services\" icon=\"sap-icon://crm-service-manager\" visible=\"{= ${Registration>EntityStatusID} !== '0' }\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonServices\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</headerContainer>\n\t\t\t</ObjectHeader>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/organisation/Organisation.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" xmlns:ui=\"sap.ca.ui\"\n\theight=\"100%\" controllerName=\"capetown.gov.registration.controller.organisation.Organisation\" displayBlock=\"true\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:customFooterContent>\n\t\t\t<Text text=\"{ path: 'Registration>LastUpdateTimeStamp', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiMediumMarginEnd\"/>\n\t\t\t<Text text=\"{= (${Registration>LastSubmitReferenceID}) ? 'Last submission reference: ' + ${Registration>LastSubmitReferenceID} : '' }\"\n\t\t\t\tclass=\"sapUiSmallMarginEnd cctLastSubmissionReference\"/>\n\t\t\t<MenuButton text=\"Support\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t<menu>\n\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshOrganisation\" text=\"Refresh my data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Menu>\n\t\t\t\t</menu>\n\t\t\t</MenuButton>\n\t\t\t<ToolbarSeparator class=\"sapUiLargeMarginEnd\"/>\n\t\t\t<Button text=\"Check\" id=\"btnCheckEntity\" press=\"onPressOrganisationCheckInputButton\"/>\n\t\t\t<Button text=\"Delete\" id=\"btnDeleteEntity\" press=\"onPressOrganisationDeleteButton\" enabled=\"{viewModel>/btnDeleteEntityEnabled}\"/>\n\t\t\t<Button text=\"Save\" id=\"btnSaveEntity\" press=\"onPressOrganisationSaveButton\" type=\"{viewModel>/btnSaveEntityType}\"\n\t\t\t\tenabled=\"{viewModel>/btnSaveEntityEnabled}\"/>\n\t\t\t<Button text=\"{viewModel>/btnSubmitEntityText}\" id=\"btnSubmitEntity\" press=\"onPressOrganisationSubmitButton\"\n\t\t\t\ttype=\"{viewModel>/btnSubmitEntityType}\" enabled=\"{viewModel>/btnSubmitEntityEnabled}\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndOrganisation\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<ObjectHeader responsive=\"true\" fullScreenOptimized=\"false\" title=\"{Registration>Name}\" titleActive=\"false\" titlePress=\"handleTitlePress\"\n\t\t\t\tshowTitleSelector=\"false\" titleSelectorPress=\"onPress\" showMarkers=\"false\" markFlagged=\"false\" markFavorite=\"false\" numberState=\"Success\"\n\t\t\t\tbackgroundDesign=\"Translucent\" condensed=\"true\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"Company registration number\" text=\"{Registration>CompanyRegNbr}\"/>\n\t\t\t\t</attributes>\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus title=\"Status\" text=\"{ path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID' }\"\n\t\t\t\t\t\tstate=\"{viewModel>/statusEntityState}\" icon=\"{viewModel>/statusEntityIcon}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<headerContainer>\n\t\t\t\t\t<IconTabBar id=\"itabOrganisation\" expandable=\"false\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Details\" key=\"Attributes\" icon=\"sap-icon://building\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationAttributes\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Addresses\" key=\"Addresses\" icon=\"sap-icon://addresses\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationAddresses\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Documents\" key=\"Documents\" icon=\"sap-icon://documents\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationDocuments\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Roles\" key=\"Roles\" icon=\"sap-icon://task\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationResponsibilities\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Contacts\" key=\"Contacts\" icon=\"sap-icon://contacts\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationContacts\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t\t<IconTabFilter text=\"Services\" key=\"Services\" icon=\"sap-icon://crm-service-manager\">\n\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationServices\" type=\"XML\"/>\n\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</IconTabBar>\n\t\t\t\t</headerContainer>\n\t\t\t</ObjectHeader>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/organisation/OrganisationList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.organisation.OrganisationList\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{i18n>titleOrganisationList}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationList\" type=\"XML\"/>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/person/PersonCreate.view.xml": "<mvc:XMLView xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.person.PersonCreate\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage id=\"pagePersonWizardContent\" title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressPersonCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndPerson\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard complete=\"onPressPersonWizardSubmitButton\" finishButtonText=\"{viewModel>/wizFinishButtonText}\" id=\"wizPersonCreate\" showNextButton=\"true\"\n\t\t\t\tenableBranching=\"true\">\n\t\t\t\t<WizardStep id=\"wizstepPersonAttributes\" icon=\"sap-icon://initiative\" title=\"Person details\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepPersonUser\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonAttributesForCreate\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepPersonUser\" icon=\"sap-icon://account\" title=\"User account\" validated=\"false\"\n\t\t\t\t\tsubsequentSteps=\"wizstepPersonDocuments, wizstepPersonDataPrivacyDeclaration\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonUser\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepPersonDocuments\" icon=\"sap-icon://documents\" title=\"Documents\" validated=\"false\"\n\t\t\t\t\tnextStep=\"wizstepPersonDataPrivacyDeclaration\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep id=\"wizstepPersonDataPrivacyDeclaration\" icon=\"sap-icon://employee-approvals\" title=\"Data privacy statement\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonDataPrivacyDeclaration\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:XMLView>",
		"capetown/gov/registration/view/App.view.xml": "<mvc:View xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:sap.ui.core=\"sap.ui.core\" xmlns=\"sap.m\" controllerName=\"capetown.gov.registration.controller.App\">\n\t<App id=\"app\">\n\t\t<pages></pages>\n\t</App>\n</mvc:View>",
		"capetown/gov/registration/view/Drafts.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:semantic=\"sap.m.semantic\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" busy=\"{viewModel>/busy}\" busyIndicatorDelay=\"{viewModel>/delay}\"\n\tcontrollerName=\"capetown.gov.registration.controller.Drafts\">\n\t<semantic:FullscreenPage title=\"{viewModel>/viewTitle}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<IconTabBar id=\"itabBarDrafts\" visible=\"true\" expandable=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter key=\"itabFiltServices\" text=\"Services\" icon=\"sap-icon://task\" visible=\"true\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.service.ServiceDraftList\" type=\"XML\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"Organisations\" icon=\"sap-icon://building\" visible=\"{viewModel>/OrganisationTabVisible}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationDraftList\" type=\"XML\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"People\" icon=\"sap-icon://person-placeholder\" visible=\"{viewModel>/PeopleTabVisible}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.person.PersonDraftList\" type=\"XML\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"Supplier\" icon=\"sap-icon://supplier\" visible=\"{viewModel>/SupplierTabVisible}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierDraftList\" type=\"XML\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/organisation/OrganisationCreate.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.organisation.OrganisationCreate\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage id=\"pageOrganisationWizardContent\" title=\"{viewModel>/viewTitle}\" showNavButton=\"true\"\n\t\tnavButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:mainAction>\n\t\t\t<semantic:MainAction press=\"onPressOrganisationCreateSaveDraftButton\" text=\"Save draft\"/>\n\t\t</semantic:mainAction>\n\t\t<semantic:draftIndicator>\n\t\t\t<DraftIndicator id=\"draftIndOrganisation\" state=\"Clear\"></DraftIndicator>\n\t\t</semantic:draftIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<Wizard complete=\"onPressOrganisationWizardSubmitButton\" finishButtonText=\"{viewModel>/wizFinishButtonText}\" id=\"wizOrganisationCreate\" showNextButton=\"true\" enableBranching=\"true\">\n\t\t\t\t<WizardStep id=\"wizstepOrganisationAttributes\" icon=\"sap-icon://initiative\" title=\"Organisation details\" \n\t\t\t\t\tvalidated=\"false\" subsequentSteps=\"wizstepOrganisationAddresses, wizstepOrganisationDocs\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationAttributesForCreate\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep activate=\"onActivateWizStepOrganisationAddresses\" icon=\"sap-icon://addresses\" id=\"wizstepOrganisationAddresses\" title=\"Address\"\n\t\t\t\t\tvalidated=\"false\" nextStep=\"wizstepOrganisationDocs\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationAddresses\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep activate=\"onActivateOrganisationDocs\" icon=\"sap-icon://documents\" id=\"wizstepOrganisationDocs\" title=\"Documents\"\n\t\t\t\t\tvalidated=\"false\" nextStep=\"wizstepOrganisationContacts\" subsequentSteps=\"wizstepOrganisationContacts, wizstepOrganisationResponsibilities\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationDocuments\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep activate=\"onActivateOrganisationContacts\" icon=\"sap-icon://documents\" id=\"wizstepOrganisationContacts\" title=\"Contacts\"\n\t\t\t\t\tvalidated=\"false\" nextStep=\"wizstepOrganisationResponsibilities\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationContacts\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t\t<WizardStep activate=\"onActivateOrganisationResponsibilities\" icon=\"sap-icon://task\" id=\"wizstepOrganisationResponsibilities\"\n\t\t\t\t\ttitle=\"Responsibilities\" validated=\"false\">\n\t\t\t\t\t<content>\n\t\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.organisation.OrganisationResponsibilities\" type=\"XML\"/>\n\t\t\t\t\t</content>\n\t\t\t\t</WizardStep>\n\t\t\t</Wizard>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/person/PersonList.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" controllerName=\"capetown.gov.registration.controller.person.PersonList\" busy=\"{viewModel>/busy}\">\n\t<semantic:FullscreenPage title=\"{i18n>titlePersonList}\" showNavButton=\"true\" navButtonPress=\"onPressNavButton\" showSubHeader=\"{viewModel>/userInCobrowse}\">\n\t\t<semantic:subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</semantic:subHeader>\n\t\t<semantic:messagesIndicator>\n\t\t\t<semantic:MessagesIndicator press=\"onMessagesButtonPress\"/>\n\t\t</semantic:messagesIndicator>\n\t\t<semantic:content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\">\n\t\t\t\t<customData>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t</customData>\n\t\t\t</MessageStrip>\n\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.person.PersonList\" type=\"XML\"/>\n\t\t</semantic:content>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"capetown/gov/registration/view/Home.view.xml": "<mvc:View xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:sap.ui.core=\"sap.ui.core\" xmlns=\"sap.m\"\n\tcontrollerName=\"capetown.gov.registration.controller.Home\" busy=\"{viewModel>/busy}\">\n\t<Page id=\"pageHome\" title=\"City of Cape Town. Registration of people, organisations, services and more\" showHeader=\"true\"\n\t\tshowSubHeader=\"{viewModel>/userInCobrowse}\" enableScrolling=\"false\">\n\t\t<subHeader>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Cobrowse\" type=\"XML\"/>\n\t\t</subHeader>\n\t\t<content>\n\t\t\t<MessageStrip id=\"msMessageStrip\" showCloseButton=\"true\" showIcon=\"true\" text=\"\"/>\n\t\t\t<TileContainer allowAdd=\"true\">\n\t\t\t\t<tiles>\n\t\t\t\t\t<StandardTile title=\"My account\" info=\"Maintain personal details\" infoState=\"Information\" icon=\"sap-icon://person-placeholder\"\n\t\t\t\t\t\tactiveIcon=\"sap-icon://customer\" id=\"tileAccount\" press=\"onPersonTilePress\" busy=\"{viewModel>/myAccountTileBusy}\"/>\n\t\t\t\t\t<StandardTile title=\"My services\" type=\"Create\" info=\"Activate services\" infoState=\"Information\" icon=\"sap-icon://list\"\n\t\t\t\t\t\tnumber=\"{viewModel>/serviceListTileNumber}\" busy=\"{viewModel>/serviceListTileBusy}\" id=\"tileServicesList\" press=\"onServiceListTilePress\"/>\n\t\t\t\t\t<StandardTile title=\"My people\" type=\"Create\" info=\"Maintain people\" infoState=\"Information\" icon=\"sap-icon://list\"\n\t\t\t\t\t\tnumber=\"{viewModel>/personListTileNumber}\" busy=\"{viewModel>/personListTileBusy}\" id=\"tilePeopleList\" press=\"onPersonListTilePress\"\n\t\t\t\t\t\tvisible=\"{= ${viewModel>/personListTileNumber} > 0 }\"/>\n\t\t\t\t\t<StandardTile title=\"My organisations\" type=\"Create\" info=\"Maintain organisations\" infoState=\"Information\" icon=\"sap-icon://list\"\n\t\t\t\t\t\tactiveIcon=\"sap-icon://list\" number=\"{viewModel>/organisationListTileNumber}\" busy=\"{viewModel>/organisationListTileBusy}\"\n\t\t\t\t\t\tpress=\"onOrganisationListTilePress\" visible=\"{= ${viewModel>/organisationListTileNumber} > 0 }\"/>\n\t\t\t\t\t<StandardTile title=\"My suppliers\" type=\"Create\" info=\"Maintain suppliers\" infoState=\"Information\" icon=\"sap-icon://list\"\n\t\t\t\t\t\tactiveIcon=\"sap-icon://list\" number=\"{viewModel>/supplierListTileNumber}\" busy=\"{viewModel>/supplierListTileBusy}\"\n\t\t\t\t\t\tpress=\"onSupplierListTilePress\" visible=\"{= ${viewModel>/supplierListTileNumber} > 0 }\"/>\n\t\t\t\t\t<StandardTile title=\"Drafts\" type=\"Monitor\" info=\"Not yet submitted\" infoState=\"Warning\" icon=\"sap-icon://open-folder\"\n\t\t\t\t\t\tactiveIcon=\"sap-icon://customer\" id=\"tileDrafts\" number=\"{viewModel>/draftsTileNumber}\" busy=\"{viewModel>/draftsTileBusy}\"\n\t\t\t\t\t\tpress=\"onDraftsTilePress\" visible=\"{= ${viewModel>/draftsTileNumber} > 0 }\"/>\n\t\t\t\t\t<StandardTile title=\"Notifications\" type=\"Monitor\" info=\"For my information\" infoState=\"Warning\" icon=\"sap-icon://notification-2\"\n\t\t\t\t\t\tactiveIcon=\"sap-icon://notification-2\" id=\"tileNotifications\" number=\"{viewModel>/notificationListTileNumber}\"\n\t\t\t\t\t\tbusy=\"{viewModel>/notificationListTileBusy}\" press=\"onNotificationListTilePress\" visible=\"{= ${viewModel>/notificationListTileNumber} > 0 }\"/>\n\t\t\t\t</tiles>\n\t\t\t</TileContainer>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Bar design=\"Footer\">\n\t\t\t\t<contentRight>\n\t\t\t\t\t<Button text=\"INTRO\" press=\"showIntroDialog\" class=\"sapUiLargeMarginRight\"/>\n\t\t\t\t\t<Button icon=\"sap-icon://sys-help\" press=\"showUserGuide\"/>\n\t\t\t\t\t<Button text=\"PRIVACY\" press=\"showPrivacyPolicy\"/>\n\t\t\t\t\t<Button text=\"TERMS OF USE\" press=\"showTermsOfUse\"/>\n\t\t\t\t\t<MenuButton text=\"SUPPORT\" enabled=\"{viewModel>/mbtnSupportEnabled}\">\n\t\t\t\t\t\t<menu>\n\t\t\t\t\t\t\t<Menu itemSelected=\"onPressSupportMenuItem\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportRefreshAll\" text=\"Refresh user data\" icon=\"sap-icon://pull-down\"/>\n\t\t\t\t\t\t\t\t\t<MenuItem id=\"mitemSupportShowDraftsAll\" text=\"Show all drafts\" icon=\"sap-icon://open-folder\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</menu>\n\t\t\t\t\t</MenuButton>\n\t\t\t\t</contentRight>\n\t\t\t\t<contentLeft>\n\t\t\t\t\t<Text text=\"&#169; 2019 City of Cape Town. Rate this application:\" class=\"sapUiSmallMarginBegin cctVerticalAlignMiddle\"/>\n\t\t\t\t\t<RatingIndicator id=\"ratingIndicator\" iconSize=\"16px\" class=\"sapUiTinyMarginBegin cctVerticalAlignMiddle\" change=\"gatherRatingFeedback\"\n\t\t\t\t\t\tmaxValue=\"5\" value=\"{viewModel>/ratingValue}\" tooltip=\"Select a star to rate your experience with this application\"/>\n\t\t\t\t\t<Text text=\"{ path: 'viewModel>/lastUserContextUpdate', formatter: '.formatLastUpdateTimeStampWithLabel' }\" class=\"sapUiLargeMarginBegin cctVerticalAlignMiddle\"/>\n\t\t\t\t</contentLeft>\n\t\t\t</Bar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"capetown/gov/registration/controller/organisation/Organisation.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/Base.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Organisation Controller\r\n\t * @description Prototype for OrganisationCreate and OrganisationList controllers\r\n\t * @module Organisation\r\n\t * @augments module:Base\r\n\t */\r\n\treturn BaseController.extend(\"capetown.gov.registration.controller.organisation.Organisation\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its view controls (if available) are already created\r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//attach to display event for navigation without hash change \r\n\t\t\tthis.getRouter().getTarget(\"Organisation\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tbusyTableResponsibilities: false,\r\n\t\t\t\tbusyDelayTableResponsibilities: 0,\r\n\t\t\t\tpopContactFormTitle: \"Add contact\",\r\n\t\t\t\tpopAddressFormTitle: \"Add address\",\r\n\t\t\t\tcboxOrganisationServiceTypesVisible: true,\r\n\t\t\t\tstatusOrganisationState: sap.ui.core.ValueState.None,\r\n\t\t\t\tstatusOrganisationIcon: \"\",\r\n\t\t\t\tcboxAddressTypeSelectedItem: \"\",\r\n\t\t\t\tcboxDocTypeSelectedItem: \"\",\r\n\t\t\t\tcboxRegionSelectedItem: \"\",\r\n\t\t\t\trepeatEMail: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//set message strip invisible\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//processing when returning from person creation or maintenance\r\n\t\t\t\tif (oNavData.returningFrom === \"PersonCreate\" || oNavData.returningFrom === \"Person\") {\r\n\r\n\t\t\t\t\t//refresh responsibility list display\r\n\t\t\t\t\tthis.getView().byId(\"tabOrganisationResponsibilities\").getBinding(\"items\").refresh();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/repeatEMail\", \"\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxDocTypeSelectedItem\", \"\");\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnDeleteEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleUpdateOrganisation\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextSubmit\"));\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//disable service add feature if organisation is rendered from service create\r\n\t\t\tif (this._oNavData && /Service.*Create/.test(this._oNavData.fromTarget)) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/cboxOrganisationServiceTypesVisible\", false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/cboxOrganisationServiceTypesVisible\", true);\r\n\t\t\t}\r\n\r\n\t\t\t//until further notice: disable service add feature in all contexts\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxOrganisationServiceTypesVisible\", false);\r\n\r\n\t\t\t//Create object path for an existing OData model instance\r\n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\r\n\t\t\t\tOrganisationID: this._oNavData.OrganisationID\r\n\t\t\t});\r\n\r\n\t\t\t//set submit button text when in context of service or supplier creation\r\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.SupplierIDOrigin || this._oNavData.fromTarget) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextContinue\"));\r\n\t\t\t}\r\n\r\n\t\t\t//reset view for display of entity\r\n\t\t\tthis.resetView([\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t]);\r\n\r\n\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\tthis._oODataModel.createBindingContext(sObjectPath, null, {\r\n\t\t\t\texpand: \"toDocuments,toResponsibilities,toAddresses,toServices,toContacts\"\r\n\t\t\t}, function(oOrganisationContext) {\r\n\r\n\t\t\t\t//set new binding context\r\n\t\t\t\tthis.getView().setBindingContext(oOrganisationContext, \"Registration\");\r\n\r\n\t\t\t\t//get organisation entity in current state\r\n\t\t\t\tvar oOrganisation = oOrganisationContext.getObject();\r\n\r\n\t\t\t\t//visualize organisation entity status\r\n\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t//set entity notification where entity still in approved/ rejected status\r\n\t\t\t\tif (oOrganisation.EntityStatusID === \"2\" || oOrganisation.EntityStatusID === \"3\") {\r\n\t\t\t\t\tthis.setEntityNotification(\"OrganisationID\", oOrganisation.OrganisationID);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on admin rights\r\n\t\t\t\tif (oOrganisation.isAdministered) {\r\n\t\t\t\t\tthis.setViewControlsEnabled(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.setFormListItemTypeActive([this.getView().byId(\"formOrganisationResponsibilities\")], true);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoAdminRightsOrganistationDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on entity status 'Submitted'\r\n\t\t\t\tif (oOrganisation.EntityStatusID === \"1\") { //submitted\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.setFormListItemTypeActive([this.getView().byId(\"formOrganisationResponsibilities\")], true);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInSubmittedStatusOrganisationDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on entity status 'Approved'\r\n\t\t\t\tif (oOrganisation.EntityStatusID === \"2\") { //approved\r\n\r\n\t\t\t\t\t//start by switching off all view input\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t//construct array for form input to enable\r\n\t\t\t\t\tvar aForms = [\r\n\t\t\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\t\t\tthis.getView().byId(\"formOrganisationServices\")\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\t//switch certain organisation view input controls enabled state\r\n\t\t\t\t\tthis.setFormInputControlsEnabled(aForms, true);\r\n\r\n\t\t\t\t\t//inform user about limited changes to an approved organisation\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageApprovedStatusOrganisationLimitedChangeOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\r\n\t\t\t\t\t//switch view action controls enabled state\r\n\t\t\t\t\tthis.setViewActionControlsEnabled(true);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//view is no longer busy\r\n\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\r\n\t\t//set table of responsibilities to 'busy'\r\n\t\tsetBusyTableResponsibilities: function() {\r\n\t\t\tthis._oViewModel.setProperty(\"busyTableResponsibilities\", true);\r\n\t\t},\r\n\r\n\t\t//set table of responsibilities to 'not busy'\r\n\t\tsetNotBusyTableResponsibilities: function() {\r\n\t\t\tthis._oViewModel.setProperty(\"busyTableResponsibilities\", false);\r\n\t\t},\r\n\r\n\t\t//Factory function for responsibility list item\r\n\t\tcreateOrganisationResponsibilityListItem: function(sId, oContext) {\r\n\r\n\t\t\t//for each entry in responsibility set collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//provide textual description of role \r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatRoleID(this._oODataModel.getProperty(\"RoleID\", oContext))\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of person\r\n\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\tPersonID: this._oODataModel.getProperty(\"PersonID\", oContext)\r\n\t\t\t});\r\n\r\n\t\t\t//get person entity\r\n\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t//where person entity is available at this stage\r\n\t\t\tif (oPerson) {\r\n\r\n\t\t\t\t//provide list item cell attributes where not yet read\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oPerson.Name\r\n\t\t\t\t}), 999);\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oPerson.Surname\r\n\t\t\t\t}), 999);\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: this.formatIDType(oPerson.IDType)\r\n\t\t\t\t}), 999);\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oPerson.IDNumber\r\n\t\t\t\t}), 999);\r\n\r\n\t\t\t\t//landline or mobile number as phone number\r\n\t\t\t\tif (oPerson.PhoneNumber) {\r\n\t\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\t\ttext: oPerson.PhoneNumber\r\n\t\t\t\t\t}), 999);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\t\ttext: oPerson.MobilePhoneNumber\r\n\t\t\t\t\t}), 999);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//person entity status\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: this.formatEntityStatusID(oPerson.EntityStatusID)\r\n\t\t\t\t}), 999);\r\n\r\n\t\t\t\t//delete button\r\n\t\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\t\tpress: (this.onPressOrganisationResponsibilityDeleteButton).bind(this)\r\n\t\t\t\t}), 999);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for address list item\r\n\t\tcreateOrganisationAddressListItem: function(sId, oAddressContext) {\r\n\r\n\t\t\t//for each entry in the 'toResponsibilities' responsibility set collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//get address object\r\n\t\t\tvar oAddress = oAddressContext.getObject();\r\n\r\n\t\t\t//textual description of address type\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatAddressTypeID(this._oODataModel.getProperty(\"AddressTypeID\", oAddressContext))\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of address category \r\n\t\t\tvar sAddressCategoryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressCategorySet\", {\r\n\t\t\t\tAddressCategoryID: oAddress.AddressCategoryID\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sAddressCategoryObjectPath + '/AddressCategoryText')\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//Street or PO Box number\r\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.HouseNumber + \" \" + oAddress.StreetName\r\n\t\t\t\t}), 999);\r\n\t\t\t} else {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: \"PO Box \" + oAddress.POBoxNumber\r\n\t\t\t\t}), 999);\r\n\t\t\t}\r\n\r\n\t\t\t//Postal code (Street or PO Box)\r\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.PostalCode\r\n\t\t\t\t}), 999);\r\n\t\t\t} else {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.POBoxPostalCode\r\n\t\t\t\t}), 999);\r\n\t\t\t}\r\n\r\n\t\t\t//City\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oAddress.City\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//create region key for region indicated on address\r\n\t\t\tvar sRegionObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"RegionSet\", {\r\n\t\t\t\tRegionID: this._oODataModel.getProperty(\"RegionID\", oAddressContext)\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sRegionObjectPath + '/RegionText')\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//create country key for country indicated on address\r\n\t\t\tvar sCountryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"CountrySet\", {\r\n\t\t\t\tCountryID: this._oODataModel.getProperty(\"CountryID\", oAddressContext)\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sCountryObjectPath + '/CountryText')\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressOrganisationAddressDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//Organisation address validation\r\n\t\tonAddressAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//validate form input\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//Organisation contact validation\r\n\t\tonContactAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//control required state of mobile number attributes: one is sufficient\r\n\t\t\tif (/inputContactPhoneNumber/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//toggle mobile number required state \r\n\t\t\t\tif (oEvent.getSource().getValue()) {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactMobileNumberRequired\", false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactMobileNumberRequired\", true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//control required state of phone number attributes: one is sufficient\r\n\t\t\tif (/inputContactMobileNumber/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//toggle phone number required state\r\n\t\t\t\tif (oEvent.getSource().getValue()) {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate contact attributes\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formContact\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//Organisation address validation\r\n\t\tonOrganisationAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//perform same check as on other organisation attribute changes\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationAttributes\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//event handler combobox role selection change\r\n\t\tonCBoxPersonRoleChange: function(oEvent) {\r\n\r\n\t\t\t//reset value state and text\r\n\t\t\tthis.getView().byId(\"cboxPersonRoles\").setValueState(sap.ui.core.ValueState.None);\r\n\t\t\tthis.getView().byId(\"cboxPersonRoles\").setValueStateText(\"\");\r\n\r\n\t\t\t//disable responsibility add button if no role type selected\r\n\t\t\tvar cboxPersonRoles = oEvent.getSource();\r\n\t\t\tif (cboxPersonRoles.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnOrganisationResponsibilityAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of responsibility\r\n\t\t\tthis.getView().byId(\"btnOrganisationResponsibilityAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonUploadCollectionChange: function(oEvent) {\r\n\r\n\t\t\t//Get upload collection from event source\r\n\t\t\tvar oUploadCollection = oEvent.getSource();\r\n\t\t\tvar oCBoxDocumentTypes = this.getView().byId(\"cboxOrganisationDocumentTypes\");\r\n\r\n\t\t\t//Get attributes of file just uploaded\r\n\t\t\tvar oParameters = oEvent.getParameters();\r\n\r\n\t\t\t//Add upload collection parameter pertaining to security token\r\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\tvalue: \"securityTokenFromModel\"\r\n\t\t\t});\r\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\r\n\r\n\t\t\t//Prevent instant upload by FileUploader (line 970, debug source)\r\n\t\t\toUploadCollection._oFileUploader.setEnabled(false);\r\n\r\n\t\t\t//check that another document of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxDocumentTypes, \"DocumentType\")) {\r\n\t\t\t\toUploadCollection.fireUploadTerminated(oParameters.files[0].name);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create file reader and file reader event handler\r\n\t\t\tvar oFileReader = new FileReader();\r\n\t\t\toFileReader.onload = (function() {\r\n\r\n\t\t\t\t//get file content read\r\n\t\t\t\tvar sDocumentContent = oFileReader.result;\r\n\t\t\t\tsDocumentContent = sDocumentContent.split(\",\")[1];\r\n\r\n\t\t\t\t//get new upload collection item and set status\r\n\t\t\t\tvar oUploadCollectionItem = oUploadCollection.aItems[0];\r\n\t\t\t\toUploadCollectionItem._percentUploaded = 100;\r\n\t\t\t\toUploadCollectionItem._status = \"display\";\r\n\r\n\t\t\t\t//adopt file content into OData for update to backend\r\n\t\t\t\tthis._oODataModel.setProperty(\"FileData\", sDocumentContent, oFileReader.oContext);\r\n\r\n\t\t\t\t//submit changes to get correct document key\t\t\t\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//success event handler\r\n\t\t\t\t\tsuccess: function(oData, response) {\r\n\r\n\t\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//raise event upload complete\r\n\t\t\t\t\t\toUploadCollection.fireUploadComplete();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Show draft is saving\t\t\t\r\n\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t}).bind(this);\r\n\r\n\t\t\t//create new entry in the OData model's DocumentSet\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"DocumentSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tDocumentID: this.getUUID(),\r\n\t\t\t\t\tOrganisationID: this._oODataModel.getProperty(\"OrganisationID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tFileName: oParameters.files[0].name,\r\n\t\t\t\t\tFileType: oParameters.files[0].type,\r\n\t\t\t\t\tFileSize: oParameters.files[0].size.toString(),\r\n\t\t\t\t\tDocumentType: this.getView().byId(\"cboxOrganisationDocumentTypes\").getSelectedItem().getKey(),\r\n\t\t\t\t\tMimeType: oParameters.files[0].type\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//provide file reader with binding context\r\n\t\t\toFileReader.oContext = oContext;\r\n\r\n\t\t\t//invoke reading of content of file just uploaded\r\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add responsibility for this organisation\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressAddResponsibilityButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxRoles = this.getView().byId(\"cboxPersonRoles\");\r\n\r\n\t\t\t//get organisation entity in current state\r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//role needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxRoles.getSelectedKey()) {\r\n\r\n\t\t\t\t//set role selection combobox value state and text\r\n\t\t\t\toCBoxRoles.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxRoles.setValueStateText(\"Select a role for adding a responsibility\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another responsibility with the selected role is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabOrganisationResponsibilities\"), oCBoxRoles, \"RoleID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//special handling for organisation that is not yet validated\r\n\t\t\tif (!oOrganisation.isValidated && oCBoxRoles.getSelectedKey() === \"01\") {\r\n\r\n\t\t\t\t//at organisation create only 1 administrator is allowed\r\n\t\t\t\tif (this.countListEntries(this.getView().byId(\"tabOrganisationResponsibilities\"), \"RoleID\", \"01\") > 0) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOnlyOneAdministratorAtTimeOfCreate\"), sap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: make yourself administrator to be able to make changes after submission\r\n\t\t\tif (oCBoxRoles.getSelectedKey() === \"01\") { //Administrator\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageMakeYourselfAdministratorOrElse\"), sap.ui.core.MessageType.Warning);\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to select new or existing person\r\n\t\t\tvar oPersonSelectPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.person.PersonSelectPopover\", this);\r\n\t\t\toPersonSelectPopover.attachAfterClose(function() {\r\n\t\t\t\toPersonSelectPopover.destroy();\r\n\t\t\t});\r\n\t\t\tthis.getView().addDependent(oPersonSelectPopover);\r\n\r\n\t\t\t//attach list itemPress event\r\n\t\t\tsap.ui.getCore().byId(\"tabPersonSelectPopover\").attachEventOnce(\"itemPress\", {}, this.onPressPersonSelectDialogListItem, this);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tvar oLabelPersonRole = this.getView().byId(\"labelPersonRole\");\r\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\r\n\t\t\t\toPersonSelectPopover.openBy(oLabelPersonRole);\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//handle person search during responsibilility create\r\n\t\tonPressPersonSelectDialogSearch: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sQuery;\r\n\r\n\t\t\t//get search query for list filtering\r\n\t\t\tswitch (oEvent.sId) {\r\n\t\t\t\tcase \"liveChange\":\r\n\t\t\t\t\tvar oSearchField = oEvent.getSource();\r\n\t\t\t\t\tsQuery = oSearchField.getValue();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsQuery = oEvent.getParameter(\"query\");\r\n\t\t\t}\r\n\r\n\t\t\t//build array of filters for searching people\r\n\t\t\tvar aFilters = [new sap.ui.model.Filter({\r\n\t\t\t\tfilters: [\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tand: false,\r\n\t\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"eMailAddress\",\r\n\t\t\t\t\t\t\t\toperator: \"Contains\",\r\n\t\t\t\t\t\t\t\tvalue1: sQuery\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"Name\",\r\n\t\t\t\t\t\t\t\toperator: \"Contains\",\r\n\t\t\t\t\t\t\t\tvalue1: sQuery\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"Surname\",\r\n\t\t\t\t\t\t\t\toperator: \"Contains\",\r\n\t\t\t\t\t\t\t\tvalue1: sQuery\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"PhoneNumber\",\r\n\t\t\t\t\t\t\t\toperator: \"Contains\",\r\n\t\t\t\t\t\t\t\tvalue1: sQuery\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"IDNumber\",\r\n\t\t\t\t\t\t\t\toperator: \"Contains\",\r\n\t\t\t\t\t\t\t\tvalue1: sQuery\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t})];\r\n\r\n\t\t\t//apply filter to list of people\r\n\t\t\tsap.ui.getCore().byId(\"tabPersonSelectPopover\").getBinding(\"items\").filter(aFilters);\r\n\r\n\t\t},\r\n\r\n\t\t//create responsibility using the selected person\r\n\t\tonPressPersonSelectDialogListItem: function(oEvent) {\r\n\r\n\t\t\t//close popover\r\n\t\t\tsap.ui.getCore().byId(\"popPersonSelect\").close();\r\n\r\n\t\t\t//get pressed listitem\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\r\n\r\n\t\t\t//create responsibility set entry\r\n\t\t\tthis._oODataModel.createEntry(\"ResponsibilitySet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tResponsibilityID: this.getUUID(),\r\n\t\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\t\tPersonID: oListItem.getBindingContext(\"Registration\").getProperty(\"PersonID\"),\r\n\t\t\t\t\tRoleID: this.getView().byId(\"cboxPersonRoles\").getSelectedKey()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct responsibility key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success callback function\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//add person from person select dialog\r\n\t\tonPressPersonSelectDialogAddPersonButton: function() {\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//pending changes to be submitted before navigation\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\r\n\t\t\t\t//prepare view for change submission\r\n\t\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\t\t//submit ODATA model changes to backend\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully updated changes to the backend\r\n\t\t\t\t\tsuccess: (function() {\r\n\r\n\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//navigate to Person create without changing hash\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\t\tOrganisationIDOrigin: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\t\t\t\tRoleID: this.getView().byId(\"cboxPersonRoles\").getSelectedKey(),\r\n\t\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}).bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//no pending changes to submit, navigate to person create wizard straight away \r\n\t\t\t} else {\r\n\r\n\t\t\t\t//navigate to Person create without changing hash\r\n\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\tOrganisationIDOrigin: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\t\tRoleID: this.getView().byId(\"cboxPersonRoles\").getSelectedKey(),\r\n\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonCBoxOrganisationAddressTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable address add button if no address type selected\r\n\t\t\tvar oCBoxOrganisationAddressTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxOrganisationAddressTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnOrganisationAddressAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of organisation address\r\n\t\t\tthis.getView().byId(\"btnOrganisationAddressAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonCBoxOrganisationContactTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable contact add button if no contact type selected\r\n\t\t\tvar oCBoxOrgansiationContactTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxOrgansiationContactTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnOrganisationContactAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of organisation contact\r\n\t\t\tthis.getView().byId(\"btnOrganisationContactAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add contact for this organisation\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressContactAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxContactTypes = this.getView().byId(\"cboxOrganisationContactTypes\");\r\n\r\n\t\t\t//contact type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxContactTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set contact type selection combobox value state and text\r\n\t\t\t\toCBoxContactTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxContactTypes.setValueStateText(\"Select contact type you want to add\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another contact of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabOrganisationContacts\"), oCBoxContactTypes, \"ContactTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to select new or existing person\r\n\t\t\tthis.oContactDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.ContactDialog\", this);\r\n\t\t\tthis.oContactDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oContactDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oContactDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formContact\"));\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popContactFormTitle\", \"Add contact\");\r\n\r\n\t\t\t//phone number to be required (alternatively mobile number can be entered)\r\n\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", true);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oContactDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//add or update contact for organisation\r\n\t\tonPressContactConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formContact\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oContactDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set contact attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"ContactName\", sap.ui.getCore().byId(\"inputContactName\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"eMailAddress\", sap.ui.getCore().byId(\"inputContactEMailAddress\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"PhoneNumber\", sap.ui.getCore().byId(\"inputContactPhoneNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"FaxNumber\", sap.ui.getCore().byId(\"inputContactFaxNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"MobilePhoneNumber\", sap.ui.getCore().byId(\"inputContactMobileNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oContactDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close contact popover\r\n\t\t\t\tthis.oContactDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's contact set\r\n\t\t\tthis._oODataModel.createEntry(\"ContactSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tContactID: this.getUUID(),\r\n\t\t\t\t\tOrganisationID: this._oODataModel.getProperty(\"OrganisationID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tContactTypeID: this.getView().byId(\"cboxOrganisationContactTypes\").getSelectedKey(),\r\n\t\t\t\t\teMailAddress: sap.ui.getCore().byId(\"inputContactEMailAddress\").getValue(),\r\n\t\t\t\t\tContactName: sap.ui.getCore().byId(\"inputContactName\").getValue(),\r\n\t\t\t\t\tPhoneNumber: sap.ui.getCore().byId(\"inputContactPhoneNumber\").getValue(),\r\n\t\t\t\t\tFaxNumber: sap.ui.getCore().byId(\"inputContactFaxNumber\").getValue(),\r\n\t\t\t\t\tMobilePhoneNumber: sap.ui.getCore().byId(\"inputContactMobileNumber\").getValue()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct address key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close popover\r\n\t\t\t\t\tif (this.oContactDialog && this.oContactDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oContactDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationSaveButton: function(oEvent) {\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput([\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: no unsaved changes where applicable\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoUnsavedModelChanges\"), sap.ui.core.MessageType.Success);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//submit changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//update success handler\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"updateModelChangeSuccessful\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationSubmitButton: function(oEvent) {\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput([\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//get responsible people with unsuitable entity status\r\n\t\t\tvar aPerson = this.hasResponsibilitiesNotReadyForSubmit(this.getView().byId(\"tabOrganisationResponsibilities\"));\r\n\r\n\t\t\t//message handling: found responsible people with unsuitable entity status\r\n\t\t\tif (aPerson.length > 0) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageResponsibilitiesNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\taPerson[0].Name + \" \" + aPerson[0].Surname),\r\n\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//submit without confirmation dialog where in service or supplier creation\r\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.SupplierIDOrigin || this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t//submit organisation\r\n\t\t\t\tthis.submitOrganisation(true);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//submit with confirmation dialog\r\n\t\t\telse {\r\n\r\n\t\t\t\t//confirmation dialog to submit\r\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitChanges\"), {\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t//on confirmation dialog close\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t\t//submit organisation\r\n\t\t\t\t\t\t\tthis.submitOrganisation(false);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//check for duplicate form input\r\n\t\tisDuplicateInput: function(aForms) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aDuplicateInputFormFields = [];\r\n\r\n\t\t\t//validate form input\r\n\t\t\taForms.forEach(function(oForm) {\r\n\r\n\t\t\t\t//organisation attributes form\r\n\t\t\t\tif (/formOrganisationAttributes/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//check for possible organisation duplicate by name\r\n\t\t\t\t\tif (this.getView().byId(\"inputOrganisationName\").getValue() && this.getOwnerComponent().oOrganisationList.getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap\r\n\t\t\t\t\t\t\t.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tand: true,\r\n\t\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: \"T\" //Transient\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"Name\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputOrganisationName\").getValue()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t\t\t//set value state and message for duplicate organisation name\r\n\t\t\t\t\t\tvar oFormField = {};\r\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputOrganisationName\");\r\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateOrganisationName\"));\r\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check for possible organisation duplicate by company registration number\r\n\t\t\t\t\tif (this.getView().byId(\"inputCompanyRegNbr\").getValue() && this.getOwnerComponent().oOrganisationList.getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tand: true,\r\n\t\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"RelationshipTypeID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"RelationshipTypeID\")\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"RelationshipTypeID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: \"01\"\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"CompanyRegNbr\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputCompanyRegNbr\").getValue()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t\t\t//set value state and message for duplicate organisation head office company registration number \r\n\t\t\t\t\t\toFormField = {};\r\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputCompanyRegNbr\");\r\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateOrganisationCompanyRegNumber\"));\r\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check for possible organisation duplicate by business partner number\r\n\t\t\t\t\tif (this.getView().byId(\"inputOrganisationBusinessPartnerID\").getValue() && this.getOwnerComponent().oOrganisationList.getBinding(\r\n\t\t\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tand: true,\r\n\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\tpath: \"BusinessPartnerID\",\r\n\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputOrganisationBusinessPartnerID\").getValue()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t\t\t//set value state and message for duplicate organisation business partner number \r\n\t\t\t\t\t\toFormField = {};\r\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputOrganisationBusinessPartnerID\");\r\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateOrganisationBusinessPartnerID\"));\r\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn aDuplicateInputFormFields;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\t\thasInvalidInput: function(aForms, oControl) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aInvalidFormFields = [];\r\n\r\n\t\t\t//get organisation in current state\r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//validate form input\r\n\t\t\taForms.forEach(function(oForm) {\r\n\r\n\t\t\t\t\t//leaving to next iteration when form not bound\r\n\t\t\t\t\tif (!oForm) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//get all form fields\r\n\t\t\t\t\tvar aFormFields = this.getFormInputFields(oForm);\r\n\r\n\t\t\t\t\t//reduce validation to requested control where applicable\r\n\t\t\t\t\tif (oControl) {\r\n\t\t\t\t\t\tvar aFormFieldsTmp = aFormFields;\r\n\t\t\t\t\t\taFormFields = [];\r\n\t\t\t\t\t\tfor (var i = 0; i < aFormFieldsTmp.length; i = i + 1) {\r\n\t\t\t\t\t\t\tif (aFormFieldsTmp[i].oControl === oControl) {\r\n\t\t\t\t\t\t\t\taFormFields.push(aFormFieldsTmp[i]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation attributes form\r\n\t\t\t\t\tif (/formOrganisationAttributes/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//business partner ID\r\n\t\t\t\t\t\t\t\tcase \"inputOrganisationBusinessPartnerID\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check entered number is a valid business partner ID\r\n\t\t\t\t\t\t\t\t\tif (!this.isValidBusinessPartnerID(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidBusinessPartnerIDEntry\"));\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//business partner ID\r\n\t\t\t\t\t\t\t\tcase \"inputCompanyRegNbr\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check entered number is a valid company registration number\r\n\t\t\t\t\t\t\t\t\tif (!this.isValidCompanyRegistrationNumber(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidCompanyRegistrationNumberEntry\"));\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//organisation ID for Supplier\r\n\t\t\t\t\t\t\t\tcase \"inputSupplierOrganisationID\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check entered number is a valid business partner ID or vendor ID\r\n\t\t\t\t\t\t\t\t\tif (!this.isValidBusinessPartnerID(oFormField.oControl.getValue()) &&\r\n\t\t\t\t\t\t\t\t\t\t!this.isValidVendorID(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidSupplierOrganisationIDEntry\"));\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation documents form\r\n\t\t\t\t\tif (/formOrganisationDocuments/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation documents\r\n\t\t\t\t\t\t\t\tcase \"ucOrganisationDocUploadCollection\":\r\n\r\n\t\t\t\t\t\t\t\t\t//validation of uploaded documents only for organisation that is not yet validated by ERP backend\r\n\t\t\t\t\t\t\t\t\tif (!oOrganisation.isValidated) {\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"cboxOrganisationDocumentTypes\"),\r\n\t\t\t\t\t\t\t\t\t\t\t\"DocumentType\", \"invalidInvalidDocuments\", \"Document types\"));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation contact form\r\n\t\t\t\t\tif (/formContact/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//phone and fax numbers\r\n\t\t\t\t\t\t\t\tcase \"inputContactFaxNumber\":\r\n\t\t\t\t\t\t\t\tcase \"inputContactPhoneNumber\":\r\n\t\t\t\t\t\t\t\tcase \"inputContactMobileNumber\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check telephone number contains only digits after stripping all non numeric content\r\n\t\t\t\t\t\t\t\t\tif (oFormField.oControl.getValue() !== \"\" && !this.isValidPhoneNumber(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidPhoneNumberEntry\"));\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//email address\r\n\t\t\t\t\t\t\t\tcase \"inputContactEMailAddress\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check entered value is a valid south african postal code\r\n\t\t\t\t\t\t\t\t\tif (!this.isValidEMailAddress(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidEMailAddressEntry\"));\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation contacts form\r\n\t\t\t\t\tif (/formOrganisationContacts/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation contacts\r\n\t\t\t\t\t\t\t\tcase \"tabOrganisationContacts\":\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\t\"cboxOrganisationContactTypes\"),\r\n\t\t\t\t\t\t\t\t\t\t\"ContactTypeID\", \"invalidInvalidContacts\", \"Contact types\"));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//address\r\n\t\t\t\t\tif (/formAddress/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//Postal code\r\n\t\t\t\t\t\t\t\tcase \"inputAddressPostalCode\":\r\n\t\t\t\t\t\t\t\tcase \"inputAddressPOBoxPostalCode\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check entered value is a valid south african postal code\r\n\t\t\t\t\t\t\t\t\tif (isNaN(oFormField.oControl.getValue()) || oFormField.oControl.getValue().length !== 4) {\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(\"This does not seem to be a valid postal code\");\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation addresses form\r\n\t\t\t\t\tif (/formOrganisationAddresses/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation addresses\r\n\t\t\t\t\t\t\t\tcase \"tabOrganisationAddresses\":\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\t\"cboxOrganisationAddressTypes\"),\r\n\t\t\t\t\t\t\t\t\t\t\"AddressTypeID\", \"invalidInvalidAddresses\", \"Address types\"));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//organisation responsibilities form\r\n\t\t\t\t\tif (/formOrganisationResponsibilities/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation responsibilities\r\n\t\t\t\t\t\t\t\tcase \"tabOrganisationResponsibilities\":\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\t\"cboxPersonRoles\"),\r\n\t\t\t\t\t\t\t\t\t\t\"RoleID\", \"invalidInvalidResponsibilities\", \"Roles\"));\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t);\r\n\r\n\t\t\t//return control with invalid input\r\n\t\t\treturn aInvalidFormFields;\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add responsibility for this organisation\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressOrganisationAddressAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxAddressTypes = this.getView().byId(\"cboxOrganisationAddressTypes\");\r\n\r\n\t\t\t//address type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxAddressTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set role selection combobox value state and text\r\n\t\t\t\toCBoxAddressTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxAddressTypes.setValueStateText(\"Select an address type for adding an address\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another addresses of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabOrganisationAddresses\"), oCBoxAddressTypes, \"AddressTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to capture new address\r\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\r\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oAddressDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formAddress\"));\r\n\r\n\t\t\t//get reference to entity of selected address type \r\n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\r\n\t\t\t\tAddressTypeID: oCBoxAddressTypes.getSelectedKey()\r\n\t\t\t});\r\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\r\n\r\n\t\t\t//filter adress category by filter requested in address type where applicable\r\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\r\n\t\t\t\t//filter address category by outgoing filter of the address type\r\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\t//default address category to outgoing address type filter argument\r\n\t\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddressType.OutgoingFilterArgument);\r\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setEnabled(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//default country South Africa\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(\"ZA\");\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Add address\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oAddressDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//confirm address for organisation\r\n\t\tonPressAddressConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oAddressDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set address attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"AddressCategoryID\", sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"StreetName\", sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"HouseNumber\", sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"BuildingFloorFlat\", sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"PostalCode\", sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"City\", sap.ui.getCore().byId(\"inputAddressCity\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"RegionID\", sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"CountryID\", sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxNumber\", sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxPostalCode\", sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oAddressDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close address popover\r\n\t\t\t\tthis.oAddressDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's AddressSet\r\n\t\t\tthis._oODataModel.createEntry(\"AddressSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tAddressID: this.getUUID(),\r\n\t\t\t\t\tOrganisationID: this._oODataModel.getProperty(\"OrganisationID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tAddressTypeID: this.getView().byId(\"cboxOrganisationAddressTypes\").getSelectedKey(),\r\n\t\t\t\t\tAddressCategoryID: sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(),\r\n\t\t\t\t\tRegionID: sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(),\r\n\t\t\t\t\tStreetName: sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(),\r\n\t\t\t\t\tHouseNumber: sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(),\r\n\t\t\t\t\tBuildingFloorFlat: sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(),\r\n\t\t\t\t\tPostalCode: sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(),\r\n\t\t\t\t\tCity: sap.ui.getCore().byId(\"inputAddressCity\").getValue(),\r\n\t\t\t\t\tPOBoxNumber: sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(),\r\n\t\t\t\t\tPOBoxPostalCode: sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(),\r\n\t\t\t\t\tCountryID: sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct address key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close popover\r\n\t\t\t\t\tif (this.oAddressDialog && this.oAddressDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oAddressDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation addresses\r\n\t\tonUpdateFinishedTableOrganisationAddresses: function(oEvent) {\r\n\r\n\t\t\t//check whether organisation addresses are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationAddresses\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation responsibilities\r\n\t\tonUpdateFinishedTableOrganisationResponsibilities: function(oEvent) {\r\n\r\n\t\t\t//check whether organisation responsibilities are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationResponsibilities\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation contacts\r\n\t\tonUpdateFinishedTableOrganisationContacts: function(oEvent) {\r\n\r\n\t\t\t//check whether organisation contacts are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationContacts\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonCBoxOrganisationDocumentTypesChange: function(oEvent) {\r\n\r\n\t\t\t//get reference to document upload UI controls\r\n\t\t\tvar oCBoxOrganisationDocumentTypes = oEvent.getSource();\r\n\t\t\tvar oUploadCollection = this.getView().byId(\"ucOrganisationDocUploadCollection\");\r\n\r\n\t\t\t//disable upload collection upload when no document type selected\r\n\t\t\tif (oCBoxOrganisationDocumentTypes.getSelectedItem() === null) {\r\n\t\t\t\toUploadCollection.setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//check whether another document of the selected type may be loaded\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxOrganisationDocumentTypes, \"DocumentType\")) {\r\n\t\t\t\toUploadCollection.setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable upload collection upload when document type selected\r\n\t\t\toUploadCollection.setUploadEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for organisation \r\n\t\tonOrganisationDocumentUploadComplete: function() {\r\n\r\n\t\t\t//reset organisation document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucOrganisationDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxOrganisationDocumentTypes = this.getView().byId(\"cboxOrganisationDocumentTypes\");\r\n\t\t\toCBoxOrganisationDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxOrganisationDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//check whether organisation documents are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationDocuments\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of organisation document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//reset organisation document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucOrganisationDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxOrganisationDocumentTypes = this.getView().byId(\"cboxOrganisationDocumentTypes\");\r\n\t\t\toCBoxOrganisationDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxOrganisationDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//check whether organisation documents are still valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formOrganisationDocuments\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationServiceAddButton: function() {\r\n\r\n\t\t\t//get selected service type\r\n\t\t\tvar sServiceTypeID = this.getView().byId(\"cboxOrganisationServiceTypes\").getSelectedItem().getKey();\r\n\r\n\t\t\t//decide on route depending on service type\r\n\t\t\tvar sServiceCreateRouteID = this.getServiceRouteID(sServiceTypeID, \"Create\", \"Organisation\");\r\n\r\n\t\t\t//Navigate to service create wizard to create service for organisation\r\n\t\t\tthis.getRouter().navTo(sServiceCreateRouteID, {\r\n\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationServiceListItem: function(oEvent) {\r\n\r\n\t\t\t//prepare object path to be passed on to target\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sServiceID = oContext.getProperty(\"ServiceID\");\r\n\r\n\t\t\t//Navigate to service details view providing the service ID\r\n\t\t\tthis.getRouter().navTo(\"Service\", {\r\n\t\t\t\tServiceID: sServiceID\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//delete organisation service\r\n\t\tonPressOrganisationServiceDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to service for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get service attributes\r\n\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for service deletion\r\n\t\t\tsConfirmationText = \"Delete service \" + this.formatServiceTypeID(oService.ServiceTypeID) + \" of \" + this.formatOrganisationID(\r\n\t\t\t\toService.OrganisationID) + \"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this service\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//delete organisation contact\r\n\t\tonPressOrganisationContactDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to service for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get service attributes\r\n\t\t\tvar oContact = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for contact deletion\r\n\t\t\tvar sConfirmationText = \"Delete contact for \" + this.formatContactTypeID(oContact.ContactTypeID) + \"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this service\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t * Event handler for 'Press' on ResponsibilityList\r\n\t\t */\r\n\t\tonPressOrganisationResponsibilityListItem: function(oEvent) {\r\n\r\n\t\t\t//prepare object path to be passed on to target\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sPersonID = oContext.getProperty(\"PersonID\");\r\n\r\n\t\t\t//get organisatino in current state\r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get OData model path to responsible person\r\n\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\tPersonID: sPersonID\r\n\t\t\t});\r\n\r\n\t\t\t//get responsible Person in current state\r\n\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//for drafts navigate to Person create without changing hash\r\n\t\t\tswitch (oPerson.EntityStatusID) {\r\n\r\n\t\t\t\t//for person drafts navigate to person create without changing hash\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\tOrganisationIDOrigin: oOrganisation.OrganisationID,\r\n\t\t\t\t\t\tPersonID: oPerson.PersonID,\r\n\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//for people in other statuses navigate to person without changing hash\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\t\t\tPersonID: sPersonID,\r\n\t\t\t\t\t\tOrganisationIDOrigin: oOrganisation.OrganisationID,\r\n\t\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationResponsibilityDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to responsibility for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get responsibility attributes\r\n\t\t\tvar oResponsibility = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete role \" + this.formatRoleID(oResponsibility.RoleID) + \" of \" + this.formatPersonID(oResponsibility.PersonID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this organisation\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonPressOrganisationAddressDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to responsibility for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get address attributes\r\n\t\t\tvar oAddress = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete \" + this.formatAddressTypeID(oAddress.AddressTypeID) + \" of \" + this.formatOrganisationID(oAddress.OrganisationID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this organisation\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//success handler callback function\r\n\t\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Organisation\r\n\t\t */\r\n\t\tonCBoxOrganisationServiceTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable upload collection upload when no document type selected\r\n\t\t\tvar oCBoxOrgansiationServiceTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxOrgansiationServiceTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnOrganisationServiceAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of organisation service\r\n\t\t\tthis.getView().byId(\"btnOrganisationServiceAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//on press on organisation contact\r\n\t\tonPressOrganisationContactListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create contact popover where applicable\r\n\t\t\tthis.oContactDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.ContactDialog\", this);\r\n\t\t\tthis.oContactDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oContactDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oContactDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oContactDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set contact form content\r\n\t\t\tvar oContact = this.oContactDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"inputContactName\").setValue(oContact.ContactName);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactEMailAddress\").setValue(oContact.eMailAddress);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactPhoneNumber\").setValue(oContact.PhoneNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactFaxNumber\").setValue(oContact.FaxNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactMobileNumber\").setValue(oContact.MobilePhoneNumber);\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popContactFormTitle\", \"Contact\");\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oContactDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//on press on organisation address\r\n\t\tonPressOrganisationAddressListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create address popover where applicable\r\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\r\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oAddressDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oAddressDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set address form content\r\n\t\t\tvar oAddress = this.oAddressDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddress.AddressCategoryID);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressStreetName\").setValue(oAddress.StreetName);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressHouseNumber\").setValue(oAddress.HouseNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputBuildingFloorFlat\").setValue(oAddress.BuildingFloorFlat);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPostalCode\").setValue(oAddress.PostalCode);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressCity\").setValue(oAddress.City);\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressRegions\").setSelectedKey(oAddress.RegionID);\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(oAddress.CountryID);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxNumber\").setValue(oAddress.POBoxNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").setValue(oAddress.POBoxPostalCode);\r\n\r\n\t\t\t//get reference to entity of selected address type \r\n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\r\n\t\t\t\tAddressTypeID: oAddress.AddressTypeID\r\n\t\t\t});\r\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\r\n\r\n\t\t\t//filter adress category by filter requested in address type where applicable\r\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t//set addres form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Address\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oAddressDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing check button to verify user input\r\n\t\tonPressOrganisationCheckInputButton: function() {\r\n\r\n\t\t\t//check user input\r\n\t\t\tvar oIncorrectInput = this.hasIncorrectInput([\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationContacts\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t], null); //No specific control\r\n\r\n\t\t\t//message handling: user input checked with errors\r\n\t\t\tif (oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(\"Your input was checked with errors detected. \" +\r\n\t\t\t\t\t\"Click on the messages button on bottom left to view\",\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: user input checked with no finding\r\n\t\t\tif (!oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedNoFindings\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Success);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//check whether this organisation is related to other entities\t\t\r\n\t\tisRelated: function(oOrganisationContext) {\r\n\r\n\t\t\t//check for relationship to service\r\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter([\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oOrganisationContext.getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\toperator: \"BT\",\r\n\t\t\t\t\t\t\t\tvalue1: \"0\", //Draft\r\n\t\t\t\t\t\t\t\tvalue2: \"4\" //Revised\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tand: true\r\n\t\t\t\t\t})\r\n\t\t\t\t]).getLength() > 0) {\r\n\r\n\t\t\t\t//feedback to caller: organisation is related\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check for relationship to supplier\r\n\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter([\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oOrganisationContext.getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\toperator: \"BT\",\r\n\t\t\t\t\t\t\t\tvalue1: \"0\", //Draft\r\n\t\t\t\t\t\t\t\tvalue2: \"4\" //Revised\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tand: true\r\n\t\t\t\t\t})\r\n\t\t\t\t]).getLength() > 0) {\r\n\r\n\t\t\t\t//feedback to caller: organisation is related\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller: organisation is not related\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t//set view controls enabled\r\n\t\tsetViewControlsEnabled: function(bEnabled) {\r\n\r\n\t\t\t//construct array for form input to enable\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationContacts\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationServices\")\r\n\t\t\t];\r\n\r\n\t\t\t//switch organisation view input controls enabled state\r\n\t\t\tthis.setFormInputControlsEnabled(aForms, bEnabled);\r\n\r\n\t\t\t//switch view action controls enabled state\r\n\t\t\tthis.setViewActionControlsEnabled(bEnabled);\r\n\r\n\t\t},\r\n\r\n\t\t//set submit button enabled state\r\n\t\tsetSubmitButtonEnabledState: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar bBtnSubmitEntityEnabled = false;\r\n\t\t\tvar sBtnSaveEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\tvar sBtnSubmitEntityType = sap.m.ButtonType.Transparent;\r\n\r\n\t\t\t//save button transparent where no changes present\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tsBtnSaveEntityType = sap.m.ButtonType.Transparent;\r\n\t\t\t}\r\n\r\n\t\t\t//get view binding context\r\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get entity in its current state\r\n\t\t\tif (oContext) {\r\n\t\t\t\tvar oEntity = this._oODataModel.getObject(oContext.getPath());\r\n\t\t\t}\r\n\r\n\t\t\t//submit button enabled and emphasized for valid input on draft, revised or ready entity\r\n\t\t\tif (oEntity &&\r\n\t\t\t\t(oEntity.EntityStatusID === \"0\" ||\r\n\t\t\t\t\toEntity.EntityStatusID === \"4\" ||\r\n\t\t\t\t\toEntity.EntityStatusID === \"6\") &&\r\n\t\t\t\t!this._oODataModel.hasPendingChanges() &&\r\n\t\t\t\tthis.isValid([\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\t\tbBtnSubmitEntityEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t//set submit button enabled state and type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", bBtnSubmitEntityEnabled);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sBtnSubmitEntityType);\r\n\r\n\t\t\t//set save button type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sBtnSaveEntityType);\r\n\r\n\t\t},\r\n\r\n\t\t//submit organisation\r\n\t\tsubmitOrganisation: function(bNavigate) {\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//backend validate person before submission\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateOrganisation\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"OrganisationID\": this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\t\t\"CRUDActionID\": \"Update\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//on receipt of organisation validation results\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//Local data declaration\r\n\t\t\t\t\tvar sTargetStatus = \"1\"; //Submitted\r\n\t\t\t\t\tvar sStatusAction = \"1\"; //Submitted for approval\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//set entity messages\r\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\r\n\r\n\t\t\t\t\t\t//set validation error strip message\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//Amend target entity status for this submit where applicable\r\n\t\t\t\t\tif (this._oNavData.fromTarget) {\r\n\t\t\t\t\t\tsTargetStatus = \"6\"; //Ready\r\n\t\t\t\t\t\tsStatusAction = \"6\"; //Ready for submission\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set last action and entity status as submitted\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t\t\t//submit changes made to model content\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//navigate where requested\r\n\t\t\t\t\t\t\tif (bNavigate) {\r\n\r\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\r\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\r\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//remain on this view where requested\r\n\t\t\t\t\t\t\tif (!bNavigate) {\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.promiseToVisualizeEntityStatus().then(function(oEntity) {\r\n\r\n\t\t\t\t\t\t\t\t\t//re-read person entity set to reflect updated entity status\r\n\t\t\t\t\t\t\t\t\tthis._oODataModel.read(\"/PersonSet\", {\r\n\r\n\t\t\t\t\t\t\t\t\t\t//success handler: refresh responsibility list display\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function() {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationResponsibilities\").getBinding(\"items\").refresh(true);\r\n\t\t\t\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmittedSuccessfully\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t\t\t\t\t//disable view to await review workflow feedback\r\n\t\t\t\t\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t\t//dialog to confirm submission\r\n\t\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, false);\r\n\r\n\t\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//press on message popover link to set focus\r\n\t\tonPressMessagePopoverItemLink: function(oEvent) {\r\n\r\n\t\t\t//get icon tabbar or wizard holding forms\r\n\t\t\tvar oIconTabBar = this.getView().byId(\"itabOrganisation\");\r\n\t\t\tvar oWizOrganisationCreate = this.getView().byId(\"wizOrganisationCreate\");\r\n\r\n\t\t\t//where icon tabbar present: display or change and organisation\r\n\t\t\tif (oIconTabBar) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formOrganisationAttributes\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Attributes\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationAddresses\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Addresses\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationDocuments\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Documents\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationContacts\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Contacts\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationServices\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Services\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationResponsibilities\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Roles\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//where wizard is present: create organisation\r\n\t\t\tif (oWizOrganisationCreate) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formOrganisationAttributes\":\r\n\t\t\t\t\t\toWizOrganisationCreate.goToStep(this.getView().byId(\"wizstepOrganisationAttributes\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationAddresses\":\r\n\t\t\t\t\t\toWizOrganisationCreate.goToStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationDocuments\":\r\n\t\t\t\t\t\toWizOrganisationCreate.goToStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationContacts\":\r\n\t\t\t\t\t\toWizOrganisationCreate.goToStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formOrganisationResponsibilities\":\r\n\t\t\t\t\t\toWizOrganisationCreate.goToStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//collate entity identity form inputs\r\n\t\tgetIdentityFormInputs: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aIdentityFormInputs = [];\r\n\r\n\t\t\t//add all form input representing entity identity\r\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"cboxLegalEntityType\"));\r\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputCompanyRegNbr\"));\r\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputOrganisationBusinessPartnerID\"));\r\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputOrganisationName\"));\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn aIdentityFormInputs;\r\n\r\n\t\t},\r\n\r\n\t\t//handle support menu item press\r\n\t\tonPressSupportMenuItem: function(oEvent) {\r\n\r\n\t\t\t//get selected menu item\r\n\t\t\tvar oSupportMenuItem = oEvent.getParameter(\"item\");\r\n\r\n\t\t\t//refresh organisation data from ERP backend\r\n\t\t\tif (/mitemSupportRefreshOrganisation/.test(oSupportMenuItem.getId())) {\r\n\t\t\t\tthis.refreshEntityDataFromERP(\"Organisation\", \"toDocuments,toResponsibilities,toAddresses,toServices,toContacts\");\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\r\n\t\t//handle delete of organisation\r\n\t\tonPressOrganisationDeleteButton: function(){\r\n\r\n\t\t\t//get organisation context\r\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\r\n\t\t\t\r\n\t\t\t//get organisation attributes\r\n\t\t\tvar oOrganisation = this._oODataModel.getObject(oContext.getPath());\r\n\t\t\t\r\n\t\t\t//check organisation is not in submitted status\r\n\t\t\tif(oOrganisation.EntityStatusID === \"1\"){\r\n\t\t\t\t\r\n\t\t\t\t//message handling: no delete for submitted entity\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedOrganisationEntity\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t//check whether this organisation is still related\r\n\t\t\tif (this.isRelated(oContext)) {\r\n\r\n\t\t\t\t//message handling: no delate for related entity\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfOrganisationRelatedEntity\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//confirmation dialog to delete this organisation\r\n\t\t\tsap.m.MessageBox.confirm(\"Delete organisation \" + oOrganisation.Name + \"?\", {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//navigate to source of navigation\r\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\r\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//failed to delete organisation entity\r\n\t\t\t\t\t\t\terror: function(oError){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\t\t\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/organisation/OrganisationList.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/organisation/Organisation.controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(OrganisationController, JSONModel, Filter, FilterOperator) {\n\t\"use strict\";\n\t\n\t/**\n\t * Organisation list Controller\n\t * @description Controller for organisation list\n\t * @module OrganisationList\n\t * @augments module:Organisation\n\t */\n\treturn OrganisationController.extend(\"capetown.gov.registration.controller.organisation.OrganisationList\", {\n\n\t\t//Initializatin of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"OrganisationList\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tbtnOrganisationListRefreshVisible: false,\n\t\t\t\ttableNoDataText: \"No data\",\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(this._oViewModel, \"viewModel\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.OrganisationList\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\t\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//trigger refresh of list\n\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.OrganisationList\n\t\t * Event handler for 'Press' on PersonList\n\t\t */\n\t\tonPressOrganisationListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar sOrganisationID = oContext.getProperty(\"OrganisationID\");\n\n\t\t\t//Navigate to the organisation details view providing the organisation ID\n\t\t\tthis.getRouter().navTo(\"Organisation\", {\n\t\t\t\tOrganisationID: sOrganisationID\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.OrganisationList\n\t\t */\n\t\tonPressOrganisationAddButton: function() {\n\n\t\t\t//Navigate to Administrator Details view for create\n\t\t\tthis.getRouter().navTo(\"OrganisationCreate\", {\n\t\t\t\tmode: \"create\"\n\t\t\t});\n\n\t\t},\n\n\t\t//on quick filter search\n\t\tonOrganisationSearch: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sQuery;\n\n\t\t\t//get search query for list filtering\n\t\t\tswitch (oEvent.sId) {\n\t\t\t\tcase \"liveChange\":\n\t\t\t\t\tvar oSearchField = oEvent.getSource();\n\t\t\t\t\tsQuery = oSearchField.getValue();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsQuery = oEvent.getParameter(\"query\");\n\t\t\t}\n\n\t\t\t//build array of filters for searching organisations\n\t\t\tvar aFilters = [new sap.ui.model.Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"Name\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"CompanyRegNbr\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"BusinessPartnerID\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"LegalEntityType\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sLegalEntityTypeText = this.formatLegalEntityType(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sLegalEntityTypeText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sEntityStatusText = this.formatEntityStatusID(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sEntityStatusText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})];\n\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (this.getView().byId(\"tabOrganisationList\").getBinding(\"items\").filter(aFilters).getLength() !== 0) {\n\t\t\t\tthis._oViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"listNoDataWithQuickFilterSearch\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//delete organisation\n\t\tonPressOrganisationDeleteButton: function(oEvent) {\n\n\t\t\t//get context pointing to organisation for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\t\t\t\n\t\t\t//get organisation attributes\n\t\t\tvar oOrganisation = this._oODataModel.getObject(oContext.getPath());\n\t\t\t\n\t\t\t//check organisation is not in submitted status\n\t\t\tif(oOrganisation.EntityStatusID === \"1\"){\n\t\t\t\t\n\t\t\t\t//message handling: no delete for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedOrganisationEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t//check whether this organisation is still related\n\t\t\tif (this.isRelated(oContext)) {\n\n\t\t\t\t//message handling: no delate for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfOrganisationRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this organisation\n\t\t\tsap.m.MessageBox.confirm(\"Delete organisation \" + oOrganisation.Name + \"?\", {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete organisation entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\t\t\n\t\t//sort entity list in alternating order\n\t\tonPressOrganisationListSort: function() {\n\n\t\t\t//default sort direction\n\t\t\tif (this.bListSortDescending === undefined) {\n\t\t\t\tthis.bListSortDescending = true;\n\t\t\t}\n\n\t\t\t//toggle list sort direction\n\t\t\tthis.bListSortDescending = !this.bListSortDescending;\n\n\t\t\t//sort entity list in opposite direction\n\t\t\tthis.byId(\"tabOrganisationList\").getBinding(\"items\").sort([new sap.ui.model.Sorter(\"Name\", this.bListSortDescending)]);\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/person/PersonCreate.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/person/Person.controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(PersonController, JSONModel, Filter, FilterOperator) {\n\t\"use strict\";\n\n\t/**\n\t * Person Create Controller\n\t * @description Controller for person create\n\t * @module PersonCreate\n\t * @augments module:Person\n\t */\n\treturn PersonController.extend(\"capetown.gov.registration.controller.person.PersonCreate\", {\n\n\t\t//Initializatin of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getTarget(\"PersonCreate\").attachDisplay(this.onPatternMatched, this);\n\n\t\t\t//keep track of wizard control\n\t\t\tthis._oPersonWizard = this.getView().byId(\"wizPersonCreate\");\n\n\t\t\t//set models: view model\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tviewTitle: this._oResourceBundle.getText(\"titleCreatePerson\"),\n\t\t\t\tchkDataAccuracyDeclarationSelected: false,\n\t\t\t\tprivacyDeclarationAccepted: false,\n\t\t\t\tcboxAddressTypeSelectedItem: \"\",\n\t\t\t\tcboxDocTypeSelectedItem: \"\",\n\t\t\t\tcboxRegionSelectedItem: \"\",\n\t\t\t\trepeatEMail: \"\",\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t\t//Keep track of UploadCollection \n\t\t\tthis._oUploadCollection = this.byId(\"ucPersonDocUploadCollection\");\n\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/repeatEMail\", \"\");\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/privacyDeclarationAccepted\", false);\n\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextSubmit\"));\n\n\t\t\t//get arguments provided for navigation into this route\n\t\t\tthis._oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\n\n\t\t\t//set UI texts suitable for context of person create\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.OrganisationIDOrigin) {\n\t\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextContinue\"));\n\t\t\t}\n\n\t\t\t//discard all progress in this wizard\n\t\t\tvar oStep = this._oPersonWizard.getSteps()[0];\n\t\t\tthis._oPersonWizard.discardProgress(oStep);\n\t\t\toStep.setValidated(false);\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//get binding context from new person entry\n\t\t\tif (!this._oNavData.PersonID) {\n\n\t\t\t\t//create new person set entry\n\t\t\t\tvar oContext = this._oODataModel.createEntry(\"PersonSet\", {\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tPersonID: this.getUUID(),\n\t\t\t\t\t\tServiceIDOrigin: this._oNavData.ServiceIDOrigin,\n\t\t\t\t\t\tOrganisationIDOrigin: this._oNavData.OrganisationIDOrigin,\n\t\t\t\t\t\tEntityStatusID: \"T\",\n\t\t\t\t\t\tLastActionID: \"T\",\n\t\t\t\t\t\tLastActionTimeStamp: new Date(),\n\t\t\t\t\t\tisAdministered: true,\n\t\t\t\t\t\tisAdopted: false\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//set binding context\n\t\t\t\tthis.getView().setBindingContext(oContext, \"Registration\");\n\n\t\t\t\t//submit changes to this point\n\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t//successfully submitted changes\n\t\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//prepare model for rendering of comms\n\t\t\t\t\t\tthis.setPersonCommsViewModel();\n\n\t\t\t\t\t\t//view is no longer busy\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t}.bind(this),\n\n\t\t\t\t\t//failed to submit changes\n\t\t\t\t\terror: function() {\n\n\t\t\t\t\t\t//terminate user action\n\t\t\t\t\t\tthis.terminateUserAction();\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t//get binding context from existing person entry\n\t\t\tif (this._oNavData.PersonID) {\n\n\t\t\t\t//Create object path for an existing OData model instance\n\t\t\t\tvar sPersonKey = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\t\tPersonID: this._oNavData.PersonID\n\t\t\t\t});\n\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \n\t\t\t\t//important: set context in callback, in case object had to be read from server\n\t\t\t\tthis._oODataModel.createBindingContext(sPersonKey, null, {\n\t\t\t\t\texpand: \"toDocuments,toResponsibilities,toServices\"\n\t\t\t\t}, function(oPersonContext) {\n\n\t\t\t\t\t//set new binding context\n\t\t\t\t\tthis.getView().setBindingContext(oPersonContext, \"Registration\");\n\n\t\t\t\t\t//get person entity in current state\n\t\t\t\t\tvar oPerson = oPersonContext.getObject();\n\n\t\t\t\t\t//prepare model for rendering of comms\n\t\t\t\t\tthis.setPersonCommsViewModel(oPerson);\n\n\t\t\t\t\t//get person user wizard step\n\t\t\t\t\tvar oUserWizStep = this.getView().byId(\"wizstepPersonUser\");\n\n\t\t\t\t\t//set next wizard step after person user\n\t\t\t\t\tif (oPerson.isAdopted) {\n\t\t\t\t\t\toUserWizStep.setNextStep(this.getView().byId(\"wizstepPersonDataPrivacyDeclaration\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\toUserWizStep.setNextStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//check whether person attributes are valid\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formPersonAttributes\")])) {\n\n\t\t\t\t\t\t//set value of controls with absolute binding explicitly to overcome late binding issue for form validation\n\t\t\t\t\t\tthis.getView().byId(\"cboxAdministratorTitle\").setSelectedKey(this._oODataModel.getProperty(\"TitleID\", oPersonContext));\n\t\t\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(this._oODataModel.getProperty(\"IDType\", oPersonContext));\n\n\t\t\t\t\t\t//validate person attribute step to move to next\n\t\t\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonAttributes\"));\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//check whether user attributes are valid\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formPersonUser\")])) {\n\t\t\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonUser\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//check whether person documents are valid\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formPersonDocuments\")])) {\n\t\t\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//view is no longer busy\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t},\n\n\t\t//event handler for PersonAttributes form liveChange event\n\t\tonPersonAttributesLiveChange: function(oEvent) {\n\n\t\t\t//for change stemming from selecting SA resident\n\t\t\tif (/rbSANational/.test(oEvent.getSource().getId())) {\n\n\t\t\t\t//filter allowable identification type for choice SA resident\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: \"000001\"\n\t\t\t\t}));\n\n\t\t\t\t//intialize ID related attributes\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(\"000001\");\n\t\t\t\tthis.getView().byId(\"cboxIDCountryOfIssue\").setSelectedKey(\"\");\n\t\t\t\tthis.getView().byId(\"inputIDNumber\").setValue(\"\");\n\n\t\t\t}\n\n\t\t\t//for change stemming from selecting foreign national\n\t\t\tif (/rbForeignNational/.test(oEvent.getSource().getId())) {\n\n\t\t\t\t//filter allowable identification type for choice SA resident\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: \"000004\"\n\t\t\t\t}));\n\n\t\t\t\t//exclude South Africa as country of passport for foreign national\n\t\t\t\tthis.getView().byId(\"cboxIDCountryOfIssue\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"CountryID\",\n\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\tvalue1: \"ZA\"\n\t\t\t\t}));\n\n\t\t\t\t//intialize ID related attributes\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(\"000004\");\n\t\t\t\tthis.getView().byId(\"inputIDNumber\").setValue(\"\");\n\n\t\t\t}\n\n\t\t\t//validate form input and related wizard step\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formPersonAttributes\")], oEvent.getSource())) {\n\n\t\t\t\t//get person user wizard step\n\t\t\t\tvar oUserWizStep = this.getView().byId(\"wizstepPersonUser\");\n\n\t\t\t\t//get current person entity \n\t\t\t\tvar oPerson = this.getView().getBindingContext(\"Registration\").getObject();\n\n\t\t\t\t//set next wizard step after person user where applicable\n\t\t\t\tif (oUserWizStep.getNextStep() === null) {\n\n\t\t\t\t\t//depending on whether person is adopting a BP\n\t\t\t\t\tif (oPerson.isAdopted) {\n\t\t\t\t\t\toUserWizStep.setNextStep(this.getView().byId(\"wizstepPersonDataPrivacyDeclaration\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\toUserWizStep.setNextStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t\t\t}\n\n\t\t\t\t\t//temporary correction: force ID document upload in all cases\n\t\t\t\t\toUserWizStep.setNextStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\n\t\t\t\t}\n\n\t\t\t\t//validate the person attributes wizard step\n\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonAttributes\"));\n\n\t\t\t\t//invalidate form input and related wizard step\n\t\t\t} else {\n\t\t\t\tthis._oPersonWizard.invalidateStep(this.getView().byId(\"wizstepPersonAttributes\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//event handler for PersonUser liveChange event\n\t\tonPersonUserLiveChange: function(oEvent) {\n\n\t\t\t//validate form input and related wizard step\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formPersonUser\")], oEvent.getSource())) {\n\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonUser\"));\n\t\t\t} else {\n\t\t\t\tthis._oPersonWizard.invalidateStep(this.getView().byId(\"wizstepPersonUser\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//event handler for PersonDataPrivacyDeclaration checkbox select event\n\t\tonPersonDataPrivacyDeclarationCheckBoxSelect: function(oEvent) {\n\n\t\t\t//get declaration accept checkbox control\n\t\t\tvar oCheckBox = oEvent.getSource();\n\n\t\t\t//depending on state of declaration accept checkbox\n\t\t\tswitch (oCheckBox.getSelected()) {\n\n\t\t\t\t//checkbox flagged\n\t\t\t\tcase true:\n\n\t\t\t\t\t//validate step to move to next\n\t\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonDataPrivacyDeclaration\"));\n\n\t\t\t\t\t//no further processing\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//checkbox not flagged\n\t\t\t\tcase false:\n\n\t\t\t\t\t//invalidate step if input is no longer valid\n\t\t\t\t\tthis._oPersonWizard.invalidateStep(this.getView().byId(\"wizstepPersonDataPrivacyDeclaration\"));\n\n\t\t\t\t\t//no further processing\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.PersonCreate\n\t\t */\n\t\tonTypeMismatch: function(oEvent) {\n\t\t\t//message handling for upload of file with unsupported type\n\t\t\tsap.m.MessageBox.information(this._oResourceBundle.getText(\"invalidFileTypeForUpload\"), {\n\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass()\n\t\t\t});\n\t\t},\n\n\t\t//event handler for wizard submit button press\n\t\tonPressPersonWizardSubmitButton: function() {\n\n\t\t\t//model data has pending changes\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\n\t\t\t\t//submit changed attributes to backend\n\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t//on changes submitted successfully\n\t\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//confirm and submit person\n\t\t\t\t\t\tthis.confirmAndSubmitPerson();\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t\t//model data has no pending changes\t\n\t\t\t} else {\n\n\t\t\t\t//confirm and submit person\n\t\t\t\tthis.confirmAndSubmitPerson();\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.UserCreate\n\t\t */\n\t\tonUserHelpButtonPress: function() {\n\n\t\t\t//hopen another window with help\n\t\t\twindow.open(\"http://www.google.co.za\", \"Help\");\n\n\t\t},\n\n\t\t//on completion of document upload for person \n\t\tonPersonDocumentUploadComplete: function() {\n\n\t\t\t//reset person document upload collection for next interaction\n\t\t\tthis.getView().byId(\"ucPersonDocUploadCollection\").setUploadEnabled(false);\n\t\t\tvar oCBoxPersonDocumentTypes = this.getView().byId(\"cboxPersonDocumentTypes\");\n\t\t\toCBoxPersonDocumentTypes.setValueState(sap.ui.core.ValueState.None);\n\t\t\toCBoxPersonDocumentTypes.setSelectedKey(null);\n\n\t\t\t//check whether person documents are now valid\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formPersonDocuments\")])) {\n\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t} else {\n\t\t\t\tthis._oPersonWizard.invalidateStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//on deletion of person document\n\t\tonDocumentDeleted: function(oEvent) {\n\n\t\t\t//reset person document upload collection for next interaction\n\t\t\tthis.getView().byId(\"ucPersonDocUploadCollection\").setUploadEnabled(false);\n\t\t\tvar oCBoxPersonDocumentTypes = this.getView().byId(\"cboxPersonDocumentTypes\");\n\t\t\toCBoxPersonDocumentTypes.setValueState(sap.ui.core.ValueState.None);\n\t\t\toCBoxPersonDocumentTypes.setSelectedKey(null);\n\n\t\t\t//call base controller file deletion event handler\n\t\t\tthis.onFileDeleted(oEvent);\n\n\t\t\t//check whether person documents are still valid\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formPersonDocuments\")])) {\n\t\t\t\tthis._oPersonWizard.validateStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t} else {\n\t\t\t\tthis._oPersonWizard.invalidateStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//save person create draft\t\t\n\t\tonPressPersonCreateSaveDraftButton: function() {\n\n\t\t\t//get person object\n\t\t\tvar oPerson = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t//at least name and surname required to save draft\n\t\t\tif (!oPerson.Name || !oPerson.Surname) {\n\n\t\t\t\t//message handling: specify at least name and surname\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSpecifyNameSurnameToSaveDraft\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//Show draft is saving\t\t\t\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndPerson\");\n\t\t\toDraftIndicator.showDraftSaving();\n\n\t\t\t//post processing after successful updating in the backend\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\n\n\t\t\t//set last action and entity status as draft\n\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"0\", this.getView().getBindingContext(\"Registration\"));\n\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"0\", this.getView().getBindingContext(\"Registration\"));\n\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\n\t\t\t\t\"Registration\"));\n\n\t\t\t//submit all changes made to model content\n\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t//on changes submitted succesfully\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//show draft is saved\n\t\t\t\t\toDraftIndicator.showDraftSaved();\n\t\t\t\t\toDraftIndicator.clearDraftState();\n\n\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t//message handling\n\t\t\t\t\tthis._oMessageStrip.setText(\"Draft saved successfully\");\n\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//confirm and submit person\n\t\tconfirmAndSubmitPerson: function() {\n\n\t\t\t//Local data declaration\n\t\t\tvar sTargetStatus;\n\t\t\tvar sStatusAction;\n\n\t\t\t//get person entity in current status\n\t\t\tvar oPerson = this.getView().getBindingContext(\"Registration\").getObject();\n\n\t\t\t//submit without confirmation dialog where in service or organisation creation\n\t\t\tif (oPerson.ServiceIDOrigin || oPerson.OrganisationIDOrigin) {\n\n\t\t\t\t//set appropriate status target and action\n\t\t\t\tsTargetStatus = \"6\"; //Submitted\n\t\t\t\tsStatusAction = \"6\"; //Submit for approval\n\n\t\t\t\t//submit person\n\t\t\t\tthis.submitPerson(sTargetStatus, sStatusAction);\n\n\t\t\t}\n\n\t\t\t//submit with confirmation dialog\n\t\t\tif (!(oPerson.ServiceIDOrigin || oPerson.OrganisationIDOrigin)) {\n\n\t\t\t\t//confirmation dialog to submit\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitRegistration\"), {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\n\t\t\t\t\t],\n\n\t\t\t\t\t//on confirmation dialog close\n\t\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t\t//submit wizard content for posting\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t\t//set appropriate status target and action\n\t\t\t\t\t\t\tsTargetStatus = \"6\"; //Submitted\n\t\t\t\t\t\t\tsStatusAction = \"6\"; //Submit for approval\n\n\t\t\t\t\t\t\t//submit organisation\n\t\t\t\t\t\t\tthis.submitPerson(sTargetStatus, sStatusAction);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\t//submit person\n\t\tsubmitPerson: function(sTargetStatus, sStatusAction) {\n\n\t\t\t//set view to busy\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t//backend validate person before submission\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validatePerson\", {\n\n\t\t\t\t//url paramters\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"PersonID\": this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\"),\n\t\t\t\t\t\"CRUDActionID\": \"Create\"\n\t\t\t\t},\n\n\t\t\t\t//person attributes found to be valid\n\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t//message handling where applicable\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\n\n\t\t\t\t\t\t//set entity messages\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\n\n\t\t\t\t\t\t//set validation error strip message\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t//no further processing\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//get person in current status\n\t\t\t\t\tvar oPerson = this.getView().getBindingContext(\"Registration\").getObject();\n\n\t\t\t\t\t//set last action and entity status as submitted\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\n\t\t\t\t\t\t\"Registration\"));\n\n\t\t\t\t\t//create responsibility when in context of service creation\n\t\t\t\t\tif (oPerson.ServiceIDOrigin && this._oNavData.RoleID) {\n\n\t\t\t\t\t\t//create object path for existing OData model instance\n\t\t\t\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\n\t\t\t\t\t\t\tServiceID: oPerson.ServiceIDOrigin\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//get service in current status\n\t\t\t\t\t\tvar oService = this._oODataModel.getProperty(sServiceObjectPath);\n\n\t\t\t\t\t\t//create (service) responsibility set entry\n\t\t\t\t\t\tthis._oODataModel.createEntry(\"ResponsibilitySet\", {\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tResponsibilityID: this.getUUID(),\n\t\t\t\t\t\t\t\tOrganisationID: oService.OrganisationID,\n\t\t\t\t\t\t\t\tPersonID: oPerson.PersonID,\n\t\t\t\t\t\t\t\tServiceID: oPerson.ServiceIDOrigin,\n\t\t\t\t\t\t\t\tRoleID: this._oNavData.RoleID\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupId: \"deferredChanges\" //to ensure responsibility is created in same batch as person change\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//create responsibility when in context of organisation creation\n\t\t\t\t\tif (oPerson.OrganisationIDOrigin && this._oNavData.RoleID) {\n\n\t\t\t\t\t\t//create object path for existing OData model instance\n\t\t\t\t\t\tvar sOrganisationObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\n\t\t\t\t\t\t\tOrganisationID: oPerson.OrganisationIDOrigin\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//get organisation in current status\n\t\t\t\t\t\tvar oOrganisation = this._oODataModel.getProperty(sOrganisationObjectPath);\n\n\t\t\t\t\t\t//create (organisation) responsibility set entry\n\t\t\t\t\t\tthis._oODataModel.createEntry(\"ResponsibilitySet\", {\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tResponsibilityID: this.getUUID(),\n\t\t\t\t\t\t\t\tOrganisationID: oOrganisation.OrganisationID,\n\t\t\t\t\t\t\t\tPersonID: oPerson.PersonID,\n\t\t\t\t\t\t\t\tRoleID: this._oNavData.RoleID\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupId: \"deferredChanges\" //to ensure responsibility is created in same batch as person change\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//submit changes made to model content\n\t\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t\t//update success handler\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//get entity from backend to get updated attributes\n\t\t\t\t\t\t\tthis.promiseToReadEntity().then(function(oEntity) {\n\n\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t//return to source of navigation where applicable\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t\t\t//request to display the target from which navigation occured\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//remove reference to source of this navigation\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t//navigate back in history\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t});\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/organisation/OrganisationCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/organisation/Organisation.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(OrganisationController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Organisation Create Controller\r\n\t * @description Controller for organisation create\r\n\t * @module OrganisationCreate\r\n\t * @augments module:Organisation\r\n\t */\r\n\treturn OrganisationController.extend(\"capetown.gov.registration.controller.organisation.OrganisationCreate\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf capetown.gov.registration.view.view.Organisation\r\n\t\t */\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"OrganisationCreate\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tbusyTableResponsibilities: false,\r\n\t\t\t\tbusyDelayTableResponsibilities: 0,\r\n\t\t\t\tchkDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tcboxAddressTypeSelectedItem: \"\",\r\n\t\t\t\tcboxDocTypeSelectedItem: \"\",\r\n\t\t\t\tcboxRegionSelectedItem: \"\",\r\n\t\t\t\tenableSave: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oOrganisationWizard = this.getView().byId(\"wizOrganisationCreate\");\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//hide message strip\r\n\t\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t\t//processing when returning from person creation\r\n\t\t\t\tif (oNavData.returningFrom === \"PersonCreate\" || oNavData.returningFrom === \"Person\") {\r\n\r\n\t\t\t\t\t//refresh responsibility list display\r\n\t\t\t\t\tthis.getView().byId(\"tabOrganisationResponsibilities\").getBinding(\"items\").refresh();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/repeatEMail\", \"\");\r\n\t\t\tthis._oViewModel.setProperty(\"/isVisibleSupplierOrganisationIDInput\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/isVisibleAlternateOrganisationIDInput\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/labelBusinessPartnerIDInput\", this._oResourceBundle.getText(\"labelBusinessPartnerIDInput\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/labelSwitchIsAdopted\", this._oResourceBundle.getText(\"labelSwitchOrganisationIsAdopted\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextSubmit\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleCreateOrganisation\"));\r\n\r\n\t\t\t//set UI texts suitable for context of organisation create\r\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.SupplierIDOrigin) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/labelBusinessPartnerIDInput\", this._oResourceBundle.getText(\"labelBusinessPartnerVendorIDInput\"));\r\n\t\t\t\tthis._oViewModel.setProperty(\"/labelSwitchIsAdopted\", this._oResourceBundle.getText(\"labelSwitchOrganisationIsAdopted\"));\r\n\t\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextContinue\"));\r\n\t\t\t\tthis._oViewModel.setProperty(\"/isVisibleAlternateOrganisationIDInput\", true);\r\n\t\t\t\tthis._oViewModel.setProperty(\"/isVisibleSupplierOrganisationIDInput\", true);\r\n\t\t\t}\r\n\r\n\t\t\t//discard all progress in this wizard\r\n\t\t\tvar oStep = this._oOrganisationWizard.getSteps()[0];\r\n\t\t\tthis._oOrganisationWizard.discardProgress(oStep);\r\n\t\t\toStep.setValidated(false);\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//get binding context from new organisation entry\r\n\t\t\tif (!this._oNavData.OrganisationID) {\r\n\r\n\t\t\t\t//create new organisation set entry\r\n\t\t\t\tvar oOrganisationContext = this._oODataModel.createEntry(\"OrganisationSet\", {\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tOrganisationID: this.getUUID(),\r\n\t\t\t\t\t\tServiceIDOrigin: this._oNavData.ServiceIDOrigin,\r\n\t\t\t\t\t\tSupplierIDOrigin: this._oNavData.SupplierIDOrigin,\r\n\t\t\t\t\t\tEntityStatusID: \"T\",\r\n\t\t\t\t\t\tLastActionID: \"T\",\r\n\t\t\t\t\t\tLastActionTimeStamp: new Date(),\r\n\t\t\t\t\t\tisAdministered: true,\r\n\t\t\t\t\t\tisAdopted: false\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//set binding context for this view\r\n\t\t\t\tthis.getView().setBindingContext(oOrganisationContext, \"Registration\");\r\n\r\n\t\t\t\t//submit changes to this point\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully submitted changes\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t//failed to submit changes\r\n\t\t\t\t\terror: function() {\r\n\r\n\t\t\t\t\t\t//terminate user action\r\n\t\t\t\t\t\tthis.terminateUserAction();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//get binding context from resumed organisation entry\t\r\n\t\t\t}\r\n\r\n\t\t\t//get binding context from existing organisation entry\r\n\t\t\tif (this._oNavData.OrganisationID) {\r\n\r\n\t\t\t\t//Create object path for an existing OData model instance\r\n\t\t\t\tvar sOrganisationKey = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\r\n\t\t\t\t\tOrganisationID: this._oNavData.OrganisationID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\t\t//important: set context in callback, in case object had to be read from server\r\n\t\t\t\tthis._oODataModel.createBindingContext(sOrganisationKey, null, {\r\n\t\t\t\t\texpand: \"toDocuments,toResponsibilities,toAddresses,toServices\"\r\n\t\t\t\t}, function(oOrganisationContext) {\r\n\r\n\t\t\t\t\t//get current organisation entity \r\n\t\t\t\t\tvar oOrganisation = oOrganisationContext.getObject();\r\n\r\n\t\t\t\t\t//set new binding context\r\n\t\t\t\t\tthis.getView().setBindingContext(oOrganisationContext, \"Registration\");\r\n\r\n\t\t\t\t\t//adopt ServiceID origin where provided in navigation\r\n\t\t\t\t\tif (this._oNavData.ServiceIDOrigin) {\r\n\t\t\t\t\t\tthis._oODataModel.setProperty(\"ServiceIDOrigin\", this._oNavData.ServiceIDOrigin, oOrganisationContext);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//get organisation documents wizard step\r\n\t\t\t\t\tvar oDocumentsWizStep = this.getView().byId(\"wizstepOrganisationDocs\");\r\n\t\t\t\t\tvar oAttributesWizStep = this.getView().byId(\"wizstepOrganisationAttributes\");\r\n\r\n\t\t\t\t\t//set next wizard step after organisation attributes\r\n\t\t\t\t\tif (oOrganisation.isAdopted) {\r\n\t\t\t\t\t\toAttributesWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t\toDocumentsWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toAttributesWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t\toDocumentsWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether organisation attributes are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formOrganisationAttributes\")])) {\r\n\r\n\t\t\t\t\t\t//set value of controls with absolute binding explicitly to overcome late binding issue for form validation\r\n\t\t\t\t\t\tthis.getView().byId(\"cboxOrganisationType\").setSelectedKey(this._oODataModel.getProperty(\"RelationshipTypeID\",\r\n\t\t\t\t\t\t\toOrganisationContext));\r\n\t\t\t\t\t\tthis.getView().byId(\"cboxLegalEntityType\").setSelectedKey(this._oODataModel.getProperty(\"LegalEntityType\",\r\n\t\t\t\t\t\t\toOrganisationContext));\r\n\r\n\t\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationAttributes\"));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether organisation addresses are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formOrganisationAddresses\")])) {\r\n\t\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether organisation documents are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formOrganisationDocuments\")])) {\r\n\t\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether organisation contacts are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formOrganisationContacts\")])) {\r\n\t\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether organisation responsibilities are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formOrganisationResponsibilities\")])) {\r\n\t\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//Organisation address live change\r\n\t\tonOrganisationAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//get organisation attributes wizard step\r\n\t\t\tvar oAttributesWizStep = this.getView().byId(\"wizstepOrganisationAttributes\");\r\n\r\n\t\t\t//get current organisation entity \r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//check organisation attributes are now valid\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationAttributes\")], oEvent.getSource())) {\r\n\r\n\t\t\t\t//validate the organisation attributes wizard step\r\n\t\t\t\tthis._oOrganisationWizard.validateStep(oAttributesWizStep);\r\n\r\n\t\t\t\t//get organisation documents wizard step\r\n\t\t\t\tvar oDocumentsWizStep = this.getView().byId(\"wizstepOrganisationDocs\");\r\n\r\n\t\t\t\t//set next wizard step after organisation attributes\r\n\t\t\t\tif (this._oOrganisationWizard.getProgress() === 1) {\r\n\r\n\t\t\t\t\t//organisation adopted: addresses after attributes, responsibilities after documents\r\n\t\t\t\t\tif (oOrganisation.isAdopted) {\r\n\t\t\t\t\t\toAttributesWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t\toDocumentsWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\r\n\t\t\t\t\t\t//organisation not adopted: addresses after attributes, contacts after documents\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toAttributesWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t\t\toDocumentsWizStep.setNextStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//invalidate wizard step as organisation attributes are not/ no longer valid\r\n\t\t\t} else {\r\n\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationAttributes\"));\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation addresses\r\n\t\tonUpdateFinishedTableOrganisationAddresses: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oOrganisationWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether organisation addresses are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationAddresses\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationAddresses\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation contacts\r\n\t\tonUpdateFinishedTableOrganisationContacts: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oOrganisationWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether organisation contacts are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationContacts\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationContacts\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation responsibilities\r\n\t\tonUpdateFinishedTableOrganisationResponsibilities: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oOrganisationWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether organisation responsibilities are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationResponsibilities\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationResponsibilities\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for wizard submit button press\r\n\t\tonPressOrganisationWizardSubmitButton: function() {\r\n\r\n\t\t\t//get organisation entity in current state\r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//construct array for form input to check\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationResponsibilities\"),\r\n\t\t\t\tthis.getView().byId(\"formOrganisationDocuments\")\r\n\t\t\t];\r\n\r\n\t\t\t//add contacts form where organisation is not adopted\r\n\t\t\tif (!oOrganisation.isAdopted) {\r\n\t\t\t\taForms.push(this.getView().byId(\"formOrganisationContacts\"));\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput(aForms)) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//get responsible people with unsuitable entity status\r\n\t\t\tvar aPerson = this.hasResponsibilitiesNotReadyForSubmit(this.getView().byId(\"tabOrganisationResponsibilities\"));\r\n\r\n\t\t\t//message handling: found responsible people with unsuitable entity status\r\n\t\t\tif (aPerson.length > 0) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageResponsibilitiesNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\taPerson[0].Name + \" \" + aPerson[0].Surname),\r\n\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//model data has pending changes\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\r\n\t\t\t\t//submit changed attributes to backend\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//on changes submitted successfully\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//confirm and submit organisation\r\n\t\t\t\t\t\tthis.confirmAndSubmitOrganisation();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//model data has no pending changes\t\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//confirm and submit organisation\r\n\t\t\t\tthis.confirmAndSubmitOrganisation();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for organisation \r\n\t\tonOrganisationDocumentUploadComplete: function() {\r\n\r\n\t\t\t//reset organisation document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucOrganisationDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxOrganisationDocumentTypes = this.getView().byId(\"cboxOrganisationDocumentTypes\");\r\n\t\t\toCBoxOrganisationDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxOrganisationDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//check whether organisation documents are now valid\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationDocuments\")])) {\r\n\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of organisation document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//reset organisation document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucOrganisationDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxOrganisationDocumentTypes = this.getView().byId(\"cboxOrganisationDocumentTypes\");\r\n\t\t\toCBoxOrganisationDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxOrganisationDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//check whether organisation documents are still valid\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formOrganisationDocuments\")])) {\r\n\t\t\t\tthis._oOrganisationWizard.validateStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oOrganisationWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationDocs\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//save organisation create draft\t\t\r\n\t\tonPressOrganisationCreateSaveDraftButton: function() {\r\n\r\n\t\t\t//get person object\r\n\t\t\tvar oOrganisation = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//at least organisation name required to save draft\r\n\t\t\tif (!oOrganisation.Name) {\r\n\r\n\t\t\t\t//message handling: specify at least legal name\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSpecifyLegalNameToSaveDraft\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndOrganisation\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t//post processing after successful updating in the backend\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\t//set last action and entity status as draft\r\n\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t//set organisation ID on origination service entity where applicable\r\n\t\t\tif (oOrganisation.ServiceIDOrigin) {\r\n\t\t\t\tvar sPropertyPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\tServiceID: oOrganisation.ServiceIDOrigin\r\n\t\t\t\t}) + \"/OrganisationID\";\r\n\t\t\t\tthis._oODataModel.setProperty(sPropertyPath, oOrganisation.OrganisationID);\r\n\t\t\t}\r\n\r\n\t\t\t//submit all changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//on changes submitted succesfully\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling\r\n\t\t\t\t\tthis._oMessageStrip.setText(\"Draft saved successfully\");\r\n\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//confirm and submit organisation\r\n\t\tconfirmAndSubmitOrganisation: function() {\r\n\r\n\t\t\t//Local data declaration\r\n\t\t\tvar sTargetStatus;\r\n\t\t\tvar sStatusAction;\r\n\r\n\t\t\t//get current organisation entity \r\n\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//submit without confirmation dialog where in service or supplier creation\r\n\t\t\tif (oOrganisation.ServiceIDOrigin || oOrganisation.SupplierIDOrigin) {\r\n\r\n\t\t\t\t//set appropriate status target and action\r\n\t\t\t\tsTargetStatus = \"6\"; //Submitted\r\n\t\t\t\tsStatusAction = \"6\"; //Submit for approval\r\n\r\n\t\t\t\t//submit organisation\r\n\t\t\t\tthis.submitOrganisation(sTargetStatus, sStatusAction);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//submit with confirmation dialog\r\n\t\t\tif (!(oOrganisation.ServiceIDOrigin || oOrganisation.SupplierIDOrigin)) {\r\n\r\n\t\t\t\t//confirmation dialog to submit\r\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitRegistration\"), {\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t//on confirmation dialog close\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t\t//set appropriate status target and action\r\n\t\t\t\t\t\t\tsTargetStatus = \"6\"; //Submitted\r\n\t\t\t\t\t\t\tsStatusAction = \"6\"; //Submit for approval\r\n\r\n\t\t\t\t\t\t\t//submit organisation\r\n\t\t\t\t\t\t\tthis.submitOrganisation(sTargetStatus, sStatusAction);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//submit organisation\r\n\t\tsubmitOrganisation: function(sTargetStatus, sStatusAction) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sPropertyPath;\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//backend validate organisation before submission\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateOrganisation\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"OrganisationID\": this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\t\t\"CRUDActionID\": \"Create\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//on receipt of organisation validation results\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//set entity messages\r\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\r\n\r\n\t\t\t\t\t\t//set validation error strip message\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set last action and entity status as requested\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t\t\t//set organisation ID on origination service entity where applicable\r\n\t\t\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\t\t\t\t\tif (oOrganisation.ServiceIDOrigin) {\r\n\t\t\t\t\t\tsPropertyPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\t\t\tServiceID: oOrganisation.ServiceIDOrigin\r\n\t\t\t\t\t\t}) + \"/OrganisationID\";\r\n\t\t\t\t\t\tthis._oODataModel.setProperty(sPropertyPath, oOrganisation.OrganisationID);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set organisation ID on origination supplier entity where applicable\r\n\t\t\t\t\tif (oOrganisation.SupplierIDOrigin) {\r\n\t\t\t\t\t\tsPropertyPath = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\t\tSupplierID: oOrganisation.SupplierIDOrigin\r\n\t\t\t\t\t\t}) + \"/OrganisationID\";\r\n\t\t\t\t\t\tthis._oODataModel.setProperty(sPropertyPath, oOrganisation.OrganisationID);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//submit all changes made to model content\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//get entity from backend to get updated attributes\r\n\t\t\t\t\t\t\tthis.promiseToReadEntity().then(function(oEntity) {\r\n\r\n\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\r\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\r\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.OrganisationCreate\r\n\t\t * Event handler for 'Press' on ResponsibilityList\r\n\t\t */\r\n\t\tonPressOrganisationResponsibilityListItem: function(oEvent) {\r\n\r\n\t\t\t//prepare object path to be passed on to target\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sPersonID = oContext.getProperty(\"PersonID\");\r\n\r\n\t\t\t//navigate to Person where applicable\r\n\t\t\tif (sPersonID) {\r\n\r\n\t\t\t\t//save organisation draft before proceeding\r\n\t\t\t\tthis.onPressOrganisationCreateSaveDraftButton();\r\n\r\n\t\t\t\t//get ID of organisation the person update is invoked from\r\n\t\t\t\tvar oOrganisation = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//get OData model path to responsible person\r\n\t\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\t\tPersonID: sPersonID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//get responsible Person in current state\r\n\t\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t\t//for drafts navigate to Person create without changing hash\r\n\t\t\t\tswitch (oPerson.EntityStatusID) {\r\n\r\n\t\t\t\t\t//for person drafts navigate to person create without changing hash\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\t\tOrganisationIDOrigin: oOrganisation.OrganisationID,\r\n\t\t\t\t\t\t\tPersonID: oPerson.PersonID,\r\n\t\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t//for people in other statuses navigate to person without changing hash\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t//navigate to person without changing hash\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\t\t\t\tPersonID: sPersonID,\r\n\t\t\t\t\t\t\tOrganisationIDOrigin: oOrganisation.OrganisationID,\r\n\t\t\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/person/PersonList.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/person/Person.controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(PersonController, JSONModel, Filter, FilterOperator) {\n\t\"use strict\";\n\t\n\t/**\n\t * Person list Controller\n\t * @description Controller for person list\n\t * @module PersonList\n\t * @augments module:Person\n\t */\n\treturn PersonController.extend(\"capetown.gov.registration.controller.person.PersonList\", {\n\n\t\t//Initializatin of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"PersonList\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0,\n\t\t\t\titemToSelect: null,\n\t\t\t\ttableNoDataText: \"No data\",\n\t\t\t\taddEnabled: false\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"viewModel\");\n\t\t\tthis._oViewModel = oViewModel;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.PersonList\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\n\t\t\t//trigger refresh of list\n\t\t\tthis.getView().byId(\"tabPersonList\").getBinding(\"items\").refresh();\n\t\t\t\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//build new filter to exclude logged on person from the list of people\n\t\t\tvar oFilter = [new Filter({\n\t\t\t\tpath: \"PersonID\",\n\t\t\t\toperator: FilterOperator.NE,\n\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID,\n\t\t\t\tand: false\n\t\t\t})];\n\n\t\t\t//apply filter to person list and set appropriate noData text where applicable\n\t\t\tif (this.getView().byId(\"tabPersonList\").getBinding(\"items\").filter(oFilter).getLength() === 0) {\n\t\t\t\tthis._oViewModel.setProperty(\"/tableNoDataText\", \"No entries. Click + to add\");\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.PersonList\n\t\t * Event handler for 'Press' on PersonList\n\t\t */\n\t\tonPersonListItemPress: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/addEnabled\", false);\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar sPersonID = oContext.getProperty(\"PersonID\");\n\n\t\t\t//Navigate to the administrator details view providing the administrator ID\n\t\t\tthis.getRouter().navTo(\"Person\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tPersonID: sPersonID\n\t\t\t});\n\n\t\t},\n\n\t\t//on quick filter search\n\t\tonPersonSearch: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sQuery;\n\n\t\t\t//get search query for list filtering\n\t\t\tswitch (oEvent.sId) {\n\t\t\t\tcase \"liveChange\":\n\t\t\t\t\tvar oSearchField = oEvent.getSource();\n\t\t\t\t\tsQuery = oSearchField.getValue();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsQuery = oEvent.getParameter(\"query\");\n\t\t\t}\n\n\t\t\t//build array of filters for searching people\n\t\t\tvar aFilters = [new sap.ui.model.Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"eMailAddress\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"Name\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"Surname\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"IDType\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sIDTypeText = this.formatIDType(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sIDTypeText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"IDNumber\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"eMailAddress\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"PhoneNumber\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sEntityStatusText = this.formatEntityStatusID(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sEntityStatusText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})];\n\n\t\t\t//exclude logged on person from search result set\n\t\t\taFilters.push(new Filter({\n\t\t\t\tpath: \"PersonID\",\n\t\t\t\toperator: FilterOperator.NE,\n\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID,\n\t\t\t\tand: true\n\t\t\t}));\n\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (this.getView().byId(\"tabPersonList\").getBinding(\"items\").filter(aFilters).getLength() !== 0) {\n\t\t\t\tthis._oViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"listNoDataWithQuickFilterSearch\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//add person\n\t\tonPressPersonAddButton: function() {\n\n\t\t\t//Navigate to Administrator Details view for create\n\t\t\tthis.getRouter().navTo(\"PersonCreate\");\n\n\t\t},\n\n\t\t//delete person\n\t\tonPressPersonDeleteButton: function(oEvent) {\n\n\t\t\t//get context pointing to person for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\t\t\t\n\t\t\t//get person attributes\n\t\t\tvar oPerson = this._oODataModel.getObject(oContext.getPath());\n\t\t\t\n\t\t\t//check person is not in submitted status\n\t\t\tif(oPerson.EntityStatusID === \"1\"){\n\t\t\t\t\n\t\t\t\t//message handling: no delete for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedPersonEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t//check whether this person is still related\n\t\t\tif (this.isRelated(oContext)) {\n\n\t\t\t\t//message handling: no delated for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfPersonRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this person\n\t\t\tsap.m.MessageBox.confirm(\"Delete \" + oPerson.Name + \" \" + oPerson.Surname + \"?\", {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete person entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//sort entity list in alternating order\n\t\tonPressPersonListSort: function() {\n\n\t\t\t//default sort direction\n\t\t\tif (this.bListSortDescending === undefined) {\n\t\t\t\tthis.bListSortDescending = true;\n\t\t\t}\n\n\t\t\t//toggle list sort direction\n\t\t\tthis.bListSortDescending = !this.bListSortDescending;\n\n\t\t\t//sort entity list in opposite direction\n\t\t\tthis.byId(\"tabPersonList\").getBinding(\"items\").sort([new sap.ui.model.Sorter(\"Name\", this.bListSortDescending)]);\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/Drafts.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/Base.controller\",\n\t\"capetown/gov/registration/controller/person/Person.controller\",\n\t\"capetown/gov/registration/controller/supplier/Supplier.controller\",\n\t\"capetown/gov/registration/controller/organisation/Organisation.controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, PersonController, SupplierController, OrganisationController, JSONModel) {\n\t\"use strict\";\n\treturn BaseController.extend(\"capetown.gov.registration.controller.Drafts\", {\n\n\t\t//Initializatin of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"Drafts\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tviewTitle: this._oResourceBundle.getText(\"titleDrafts\"),\n\t\t\t\tOrganisationTabVisible: false,\n\t\t\t\tSupplierTabVisible: false,\n\t\t\t\tPeopleTabVisible: false,\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"viewModel\");\n\t\t\tthis._oViewModel = oViewModel;\n\n\t\t},\n\n\t\t//on pattern matched\n\t\tonPatternMatched: function(oEvent) {\n\t\t\t\n\t\t\t//reset view\n\t\t\tthis.resetView([]);\n\t\t\t\n\t\t\t//get arguments provided for navigation into this route\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\n\n\t\t\t//initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\tthis._oViewModel.setProperty(\"/OrganisationTabVisible\", false);\n\t\t\tthis._oViewModel.setProperty(\"/SupplierTabVisible\", false);\n\t\t\tthis._oViewModel.setProperty(\"/PeopleTabVisible\", false);\n\n\t\t\t//request to display all drafts\n\t\t\tif (oNavData.showAll) {\n\t\t\t\tthis._oViewModel.setProperty(\"/OrganisationTabVisible\", true);\n\t\t\t\tthis._oViewModel.setProperty(\"/SupplierTabVisible\", true);\n\t\t\t\tthis._oViewModel.setProperty(\"/PeopleTabVisible\", true);\n\t\t\t}\n\n\t\t\t//force refresh of all draft listings\n\t\t\tthis.getView().byId(\"tabPersonDraftList\").getBinding(\"items\").refresh();\n\t\t\tthis.getView().byId(\"tabOrganisationDraftList\").getBinding(\"items\").refresh();\n\t\t\tthis.getView().byId(\"tabServiceDraftList\").getBinding(\"items\").refresh();\n\t\t\tthis.getView().byId(\"tabSupplierDraftList\").getBinding(\"items\").refresh();\n\t\t\t\n\t\t\t//set draft services tab \n\t\t\tthis.getView().byId(\"itabBarDrafts\").setSelectedKey(\"itabFiltServices\");\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t},\n\n\t\t//resume service wizard\n\t\tonDraftServiceListItemPress: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sServiceCreateResumeRouteID;\n\n\t\t\t//get selected draft service item\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\n\t\t\t//get service object referred to in this list item\n\t\t\tvar oService = this._oODataModel.getObject(oListItem.getBindingContext(\"Registration\").getPath());\n\n\t\t\t//for person service\n\t\t\tif (oService.PersonID) {\n\t\t\t\tsServiceCreateResumeRouteID = this.getServiceRouteID(oService.ServiceTypeID, \"Resume\", \"Person\");\n\t\t\t}\n\n\t\t\t//for organisation service\n\t\t\tif (oService.OrganisationID || oService.ServiceScopeID === \"1\") {\n\t\t\t\tsServiceCreateResumeRouteID = this.getServiceRouteID(oService.ServiceTypeID, \"Resume\", \"Organisation\");\n\t\t\t}\n\n\t\t\t//for unexpected draft service attributes\n\t\t\tif (!oService.OrganisationID && !oService.ServiceScopeID && !oService.PersonID) {\n\t\t\t\tsServiceCreateResumeRouteID = \"NotFound\";\n\t\t\t}\n\n\t\t\t//Navigate to service resume route providing the service ID\n\t\t\tthis.getRouter().navTo(sServiceCreateResumeRouteID, {\n\t\t\t\tServiceID: oService.ServiceID\n\t\t\t});\n\n\t\t},\n\n\t\t//resume organisation wizard\n\t\tonDraftOrganisationListItemPress: function(oEvent) {\n\n\t\t\t//get selected draft service item\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\n\t\t\t//get service object referred to in this list item\n\t\t\tvar oOrganisation = this._oODataModel.getObject(oListItem.getBindingContext(\"Registration\").getPath());\n\n\t\t\t//Navigate to organisation create resume route providing the organisation ID\n\t\t\tthis.getRouter().navTo(\"OrganisationCreateResume\", {\n\t\t\t\tOrganisationID: oOrganisation.OrganisationID\n\t\t\t});\n\n\t\t},\n\n\t\t//resume person wizard\n\t\tonDraftPersonListItemPress: function(oEvent) {\n\n\t\t\t//get selected draft person item\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\n\t\t\t//get service object referred to in this list item\n\t\t\tvar oPerson = this._oODataModel.getObject(oListItem.getBindingContext(\"Registration\").getPath());\n\n\t\t\t//Navigate to person create resume route providing the Person ID\n\t\t\tthis.getRouter().navTo(\"PersonCreateResume\", {\n\t\t\t\tPersonID: oPerson.PersonID\n\t\t\t});\n\n\t\t},\n\n\t\t//factory function for service list item\n\t\tcreateServiceListItem: function(sId, oContext) {\n\n\t\t\t//get entity\n\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//instantiate new column list item\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\n\t\t\t\ttype: \"Active\",\n\t\t\t\tbusy: false\n\t\t\t});\n\n\t\t\t//service type value\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this.formatServiceTypeID(oService.ServiceTypeID)\n\t\t\t}), 999);\n\n\t\t\t//'service registered for' cell\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: \"\"\n\t\t\t}), 999);\n\n\t\t\t//format organisation name as value for 'registered for' cell \n\t\t\tif (oService.OrganisationID) {\n\t\t\t\toColumnListItem.getCells()[1].setText(this.formatOrganisationID(oService.OrganisationID));\n\t\t\t}\n\n\t\t\t//format person name as value for 'registered for' cell\n\t\t\tif (oService.PersonID) {\n\t\t\t\toColumnListItem.getCells()[1].setText(this.formatPersonID(oService.PersonID));\n\t\t\t}\n\n\t\t\t//service for organisation where organisation not yet specified\n\t\t\tif (!oService.OrganisationID && oService.ServiceScopeID === \"1\") {\n\t\t\t\toColumnListItem.getCells()[1].setText(\"Organisation not yet selected\");\n\t\t\t}\n\n\t\t\t//entity status\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this.formatEntityStatusID(oService.EntityStatusID)\n\t\t\t}), 999);\n\n\t\t\t//action \n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this.formatActionID(oService.LastActionID)\n\t\t\t}), 999);\n\n\t\t\t//action timestamp\n\t\t\tvar sLastActionTimeStamp;\n\t\t\tif (oService.LastActionTimeStamp) {\n\t\t\t\tsLastActionTimeStamp = oService.LastActionTimeStamp.toLocaleDateString(\"en-us\", {\n\t\t\t\t\tweekday: \"long\",\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\tday: \"numeric\"\n\t\t\t\t});\n\t\t\t}\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: sLastActionTimeStamp\n\t\t\t}), 999);\n\n\t\t\t//delete button\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\n\t\t\t\ttooltip: \"Delete\",\n\t\t\t\tcolor: \"#E42217\",\n\t\t\t\tpress: (this.onPressServiceDeleteButton).bind(this)\n\t\t\t}), 999);\n\n\t\t\t//return column list item instance for rendering in UI\n\t\t\treturn oColumnListItem;\n\n\t\t},\n\n\t\t//delete service\n\t\tonPressServiceDeleteButton: function(oEvent) {\n\n\t\t\t//get object key path\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get draft service entity\n\t\t\tvar oService = oContext.getObject();\n\n\t\t\t//build deletion confirmation text\n\t\t\tvar sMessage = \"Delete draft service of type \" + this.formatServiceTypeID(oService.ServiceTypeID) + \"?\";\n\n\t\t\t//confirmation dialog to delete this service\n\t\t\tsap.m.MessageBox.confirm(sMessage, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete service entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//add person\n\t\tonPressOrganisationAddButton: function() {\n\n\t\t\t//Navigate to organisation create wizard\n\t\t\tthis.getRouter().navTo(\"OrganisationCreate\");\n\n\t\t},\n\n\t\t//delete organisation\n\t\tonPressOrganisationDeleteButton: function(oEvent) {\n\n\t\t\t//get object key path\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//check whether this organisation is still related\n\t\t\tif (OrganisationController.prototype.isRelated.call(this, oContext)) {\n\n\t\t\t\t//message handling: no delate for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfDraftRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//get draft organisation entity\n\t\t\tvar oOrganisation = oContext.getObject();\n\n\t\t\t//build deletion confirmation text\n\t\t\tvar sMessage = \"Delete draft organisation \" + oOrganisation.Name + \"?\";\n\n\t\t\t//confirmation dialog to delete this organisation\n\t\t\tsap.m.MessageBox.confirm(sMessage, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete organisation entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//add person\n\t\tonPressPersonAddButton: function() {\n\n\t\t\t//Navigate to person create wizard\n\t\t\tthis.getRouter().navTo(\"PersonCreate\");\n\n\t\t},\n\n\t\t//delete person\n\t\tonPressPersonDeleteButton: function(oEvent) {\n\n\t\t\t//get object key path\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//check whether this person is still related\n\t\t\tif (PersonController.prototype.isRelated.call(this, oContext)) {\n\n\t\t\t\t//message handling: no delated for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfDraftRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//get draft person entity\n\t\t\tvar oPerson = oContext.getObject();\n\n\t\t\t//build deletion confirmation text\n\t\t\tvar sMessage = \"Delete draft person \" + oPerson.Name + \" \" + oPerson.Surname + \"?\";\n\n\t\t\t//confirmation dialog to delete this person\n\t\t\tsap.m.MessageBox.confirm(sMessage, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete person entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//resume supplier wizard\n\t\tonPressDraftSupplierListItem: function(oEvent) {\n\n\t\t\t//get selected draft person item\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\n\t\t\t//get service object referred to in this list item\n\t\t\tvar oSupplier = this._oODataModel.getObject(oListItem.getBindingContext(\"Registration\").getPath());\n\n\t\t\t//Navigate to supplier person create resume route \n\t\t\tif (oSupplier.PersonID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierCreateForPersonResume\", {\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Navigate to the supplier organisation create resume route \n\t\t\tif (oSupplier.OrganisationID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierCreateForOrganisationResume\", {\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Drafts\n\t\t */\n\t\tonPressSupplierAddButton: function(oEvent) {\n\n\t\t\t//create supplier scope popover\n\t\t\tvar oSupplierScopePopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.supplier.SupplierScopePopover\", this);\n\t\t\toSupplierScopePopover.attachAfterClose(function() {\n\t\t\t\toSupplierScopePopover.destroy();\n\t\t\t});\n\t\t\tthis.getView().addDependent(oSupplierScopePopover);\n\n\t\t\t//toggle compact style\n\t\t\tjQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), oSupplierScopePopover);\n\t\t\toSupplierScopePopover.openBy(oEvent.getSource());\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Drafts\n\t\t */\n\t\tonPressSupplierPersonAddButton: function() {\n\n\t\t\t//Navigate to supplier person create wizard \n\t\t\tthis.getRouter().navTo(\"SupplierPersonCreate\", {\n\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Drafts\n\t\t */\n\t\tonPressSupplierOrganisationAddButton: function() {\n\n\t\t\t//Navigate to supplier organisation create wizard \n\t\t\tthis.getRouter().navTo(\"SupplierOrganisationCreate\", {});\n\n\t\t},\n\n\t\t//delete supplier\n\t\tonPressSupplierDeleteButton: function(oEvent) {\n\n\t\t\t//get context pointing to supplier for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//check whether this supplier is still related\n\t\t\tif (SupplierController.prototype.isRelated.call(this, oContext)) {\n\n\t\t\t\t//message handling: no delated for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfDraftRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//get supplier attributes\n\t\t\tvar oSupplier = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//build confirmation text\n\t\t\tif (oSupplier.TradingAsName) {\n\t\t\t\tvar sMessage = \"Delete draft supplier trading as \" + oSupplier.TradingAsName + \"?\";\n\t\t\t} else {\n\t\t\t\tvar sMessage = \"Delete the selected draft supplier?\";\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this supplier\n\t\t\tsap.m.MessageBox.confirm(sMessage, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete notification entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/person/Person.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/Base.controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\t/**\n\t * Person Controller\n\t * @description Prototype for PersonCreate and PersonList controllers\n\t * @module Person\n\t * @augments module:Base\n\t */\n\treturn BaseController.extend(\"capetown.gov.registration.controller.person.Person\", {\n\n\t\t//initialization of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//attach to display event for navigation without hash change \n\t\t\tthis.getRouter().getTarget(\"Person\").attachDisplay(this.onPatternMatched, this);\n\n\t\t\t//set view model for controlling UI attributes\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tbusyTableResponsibilities: false,\n\t\t\t\tcboxAddressTypeSelectedItem: \"\",\n\t\t\t\tcboxPersonServiceTypesVisible: true,\n\t\t\t\tsPersonServicesNoDataText: \"\",\n\t\t\t\tcboxDocTypeSelectedItem: \"\",\n\t\t\t\tcboxRegionSelectedItem: \"\",\n\t\t\t\tstatusPersonIcon: \"\",\n\t\t\t\tstatusEntityState: sap.ui.core.ValueState.None,\n\t\t\t\trepeatEMail: \"\",\n\t\t\t\tviewTitle: \"\",\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path \n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize view control variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/repeatEMail\", \"\");\n\t\t\tthis._oViewModel.setProperty(\"/cboxDocTypeSelectedItem\", \"\");\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/btnDeleteEntityEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sap.m.ButtonType.Transparent);\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sap.m.ButtonType.Transparent);\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleUpdatePerson\"));\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextSubmit\"));\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//get arguments provided for navigation into this route\n\t\t\tthis._oNavData = oEvent.getParameter(\"data\");\n\n\t\t\t//set submit button text when in context of other entity\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.SupplierIDOrigin || this._oNavData.OrganisationIDOrigin || this._oNavData.fromTarget) {\n\t\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextContinue\"));\n\t\t\t}\n\n\t\t\t//reset view for display of entity\n\t\t\tthis.resetView([\n\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\")\n\t\t\t]);\n\n\t\t\t//display of a person (not equal to logged on person)\n\t\t\tif (this._oNavData.PersonID) {\n\n\t\t\t\t//Create object path for an existing OData model instance\n\t\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\t\tPersonID: this._oNavData.PersonID\n\t\t\t\t});\n\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \n\t\t\t\tthis._oODataModel.createBindingContext(sObjectPath, null, {\n\t\t\t\t\texpand: \"toDocuments,toAddresses,toResponsibilities,toServices,toNotifications\"\n\t\t\t\t}, function(oPersonContext) {\n\n\t\t\t\t\t//keep track of entering binding context change\n\t\t\t\t\tthis.bInBindingContextChange = true;\n\n\t\t\t\t\t//set new binding context\n\t\t\t\t\tthis.getView().setBindingContext(oPersonContext, \"Registration\");\n\n\t\t\t\t\t//keep track that binding context change is complete\n\t\t\t\t\tthis.bInBindingContextChange = false;\n\n\t\t\t\t\t//get person entity in current state\n\t\t\t\t\tvar oPerson = oPersonContext.getObject();\n\n\t\t\t\t\t//visualize person entity status\n\t\t\t\t\tthis.visualizeEntityStatus();\n\n\t\t\t\t\t//set repeat email field value to original email\n\t\t\t\t\tthis._oViewModel.setProperty(\"/repeatEMail\", oPerson.eMailAddress);\n\n\t\t\t\t\t//disable service add feature as user rendered is NOT equal to logged on user\n\t\t\t\t\tthis._oViewModel.setProperty(\"/cboxPersonServiceTypesVisible\", false);\n\t\t\t\t\tthis._oViewModel.setProperty(\"/sPersonServicesNoDataText\", \"No entries\");\n\n\t\t\t\t\t//set addresses tab visible for person representing logged on user\n\t\t\t\t\tif (oPerson.PersonID === this.getOwnerComponent().oUserInfo.PersonID) {\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/icontabPersonAddressesVisible\", true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/icontabPersonAddressesVisible\", false);\n\t\t\t\t\t}\n\n\t\t\t\t\t//prepare model for rendering of comms\n\t\t\t\t\tthis.setPersonCommsViewModel(oPerson);\n\n\t\t\t\t\t//set entity notification where entity still in approved/ rejected status\n\t\t\t\t\tif (oPerson.EntityStatusID === \"2\" || oPerson.EntityStatusID === \"3\") {\n\t\t\t\t\t\tthis.setEntityNotification(\"PersonID\", oPerson.PersonID);\n\t\t\t\t\t}\n\n\t\t\t\t\t//default to SA ID number entry where applicable\n\t\t\t\t\tif (!oPerson.IDType) {\n\t\t\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(null);\n\t\t\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\tvalue1: \"000001\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\n\t\t\t\t\t//set edit mode depending on admin rights for selected person \n\t\t\t\t\tif (oPerson.isAdministered || oPerson.PersonID === this.getOwnerComponent().oUserInfo.PersonID) {\n\t\t\t\t\t\tthis.setViewControlsEnabled(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setViewControlsEnabled(false);\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoAdminRightsPersonDisplayOnly\"),\n\t\t\t\t\t\t\tsap.ui.core.MessageType.Information);\n\t\t\t\t\t}\n\n\t\t\t\t\t//set edit mode depending on entity status\n\t\t\t\t\tif (oPerson.EntityStatusID === \"1\") { //submitted\n\t\t\t\t\t\tthis.setViewControlsEnabled(false);\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInSubmittedStatusPersonDisplayOnly\"),\n\t\t\t\t\t\t\tsap.ui.core.MessageType.Information);\n\t\t\t\t\t}\n\n\t\t\t\t\t//view is no longer busy\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t\t//no further processing required\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//display of logged on person\n\t\t\tif (!this._oNavData.PersonID) {\n\n\t\t\t\t//enable service add feature for user rendered is equal to logged on user\n\t\t\t\tthis._oViewModel.setProperty(\"/cboxPersonServiceTypesVisible\", true);\n\n\t\t\t\t//create object path for logged on Person OData model instance\n\t\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t\t});\n\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \n\t\t\t\tthis.getModel(\"Registration\").createBindingContext(sPersonObjectPath, null, {\n\t\t\t\t\texpand: \"toDocuments,toAddresses,toResponsibilities,toServices,toNotifications\"\n\t\t\t\t}, function(oPersonContext) {\n\n\t\t\t\t\t//keep track of entering binding context change\n\t\t\t\t\tthis.bInBindingContextChange = true;\n\n\t\t\t\t\t//set new binding context\n\t\t\t\t\tthis.getView().setBindingContext(oPersonContext, \"Registration\");\n\n\t\t\t\t\t//keep track that binding context change is complete\n\t\t\t\t\tthis.bInBindingContextChange = false;\n\n\t\t\t\t\t//get person entity in current state\n\t\t\t\t\tvar oPerson = oPersonContext.getObject();\n\n\t\t\t\t\t//visualize person entity status\n\t\t\t\t\tthis.visualizeEntityStatus();\n\n\t\t\t\t\t//prepare view model attributes for view display\n\t\t\t\t\tthis._oViewModel.setProperty(\"/repeatEMail\", oPerson.eMailAddress);\n\t\t\t\t\tthis._oViewModel.setProperty(\"/sPersonServicesNoDataText\", \"No entries. Click + to add\");\n\n\t\t\t\t\t//enable addresses tab\n\t\t\t\t\tthis._oViewModel.setProperty(\"/icontabPersonAddressesVisible\", true);\n\n\t\t\t\t\t//prepare model for rendering of comms\n\t\t\t\t\tthis.setPersonCommsViewModel(oPerson);\n\n\t\t\t\t\t//set entity notification where entity still in approved/ rejected status\n\t\t\t\t\tif (oPerson.EntityStatusID === \"2\" || oPerson.EntityStatusID === \"3\") {\n\t\t\t\t\t\tthis.setEntityNotification(\"PersonID\", oPerson.PersonID);\n\t\t\t\t\t}\n\n\t\t\t\t\t//default to SA ID number entry where applicable\n\t\t\t\t\tif (!oPerson.IDType) {\n\t\t\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(null);\n\t\t\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\tvalue1: \"000001\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\n\t\t\t\t\t//set edit mode depending on entity status\n\t\t\t\t\tif (oPerson.EntityStatusID === \"1\") { //submitted\n\t\t\t\t\t\tthis.setViewControlsEnabled(false);\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInSubmittedStatusPersonDisplayOnly\"),\n\t\t\t\t\t\t\tsap.ui.core.MessageType.Information);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setViewControlsEnabled(true);\n\t\t\t\t\t}\n\n\t\t\t\t\t//view is no longer busy\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t},\n\n\t\t//event handler for PersonAttributes liveChange event\n\t\tonPersonAttributesLiveChange: function(oEvent) {\n\n\t\t\t//no further processing where in change of binding context\n\t\t\tif (this.bInBindingContextChange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//visualize 'save' before 'submit' \n\t\t\tthis.visualizeSaveBeforeSubmit();\n\n\t\t\t//for change stemming from selecting SA resident\n\t\t\tif (/rbSANational/.test(oEvent.getSource().getId())) {\n\n\t\t\t\t//filter allowable identification type for choice SA resident\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: \"000001\"\n\t\t\t\t}));\n\n\t\t\t\t//intialize ID related attributes\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(\"000001\");\n\t\t\t\tthis.getView().byId(\"cboxIDCountryOfIssue\").setSelectedKey(\"\");\n\t\t\t\tthis.getView().byId(\"inputIDNumber\").setValue(\"\");\n\n\t\t\t}\n\n\t\t\t//for change stemming from selecting foreign national\n\t\t\tif (/rbForeignNational/.test(oEvent.getSource().getId())) {\n\n\t\t\t\t//filter allowable identification type for choice SA resident\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IDTypeID\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: \"000004\"\n\t\t\t\t}));\n\n\t\t\t\t//exclude South Africa as country of passport for foreign national\n\t\t\t\tthis.getView().byId(\"cboxIDCountryOfIssue\").getBinding(\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"CountryID\",\n\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\tvalue1: \"ZA\"\n\t\t\t\t}));\n\n\t\t\t\t//intialize ID related attributes\n\t\t\t\tthis.getView().byId(\"cboxIdentificationType\").setSelectedKey(\"000004\");\n\t\t\t\tthis.getView().byId(\"inputIDNumber\").setValue(\"\");\n\n\t\t\t}\n\n\t\t\t//validate form input\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formPersonAttributes\")], oEvent.getSource());\n\n\t\t},\n\n\t\t//event handler for business partner ID change\n\t\tonPersonBusinessPartnerIDChange: function(oEvent) {\n\n\t\t\t//get business partner ID\n\t\t\tvar sBusinessPartnerID = oEvent.getSource().getValue();\n\n\t\t\t//toggle 'adopted' attribute depending on whether a business partner ID is provided\n\t\t\tif (sBusinessPartnerID) {\n\t\t\t\tthis._oODataModel.setProperty(\"isAdopted\", true, this.getView().getBindingContext(\"Registration\"));\n\t\t\t} else {\n\t\t\t\tthis._oODataModel.setProperty(\"isAdopted\", false, this.getView().getBindingContext(\"Registration\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//event handler for PersonUser liveChange event\n\t\tonPersonUserLiveChange: function(oEvent) {\n\n\t\t\t//visualize 'save' before 'submit' \n\t\t\tthis.visualizeSaveBeforeSubmit();\n\n\t\t\t//validate form input\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formPersonUser\")], oEvent.getSource());\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonPressPersonSaveButton: function(oEvent) {\n\n\t\t\t//message handling: invalid form input where applicable\n\t\t\tif (this.hasIncorrectInput([\n\t\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\")\n\t\t\t\t])) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\n\t\t\t\t\tsap.ui.core.MessageType.Error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//message handling: no unsaved changes where applicable\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoUnsavedModelChanges\"), sap.ui.core.MessageType.Success);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//set view to busy\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t//submit changes made to model content\n\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t//update success handler\n\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t//visualize person entity status\n\t\t\t\t\tthis.visualizeEntityStatus();\n\n\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t//message handling: updated successfully\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"updateModelChangeSuccessful\"), sap.ui.core.MessageType.Success);\n\n\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonPressPersonSubmitButton: function(oEvent) {\n\n\t\t\t//message handling: invalid form input where applicable\n\t\t\tif (this.hasIncorrectInput([\n\t\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\")\n\t\t\t\t])) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\n\t\t\t\t\tsap.ui.core.MessageType.Error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//submit without confirmation dialog where in service creation or update\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.SupplierIDOrigin || this._oNavData.OrganisationIDOrigin || this._oNavData.fromTarget) {\n\n\t\t\t\t//submit person and navigate back\n\t\t\t\tthis.submitPerson(true);\n\n\t\t\t}\n\n\t\t\t//submit with confirmation dialog\n\t\t\telse {\n\n\t\t\t\t//confirmation dialog to submit\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitChanges\"), {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\n\t\t\t\t\t],\n\n\t\t\t\t\t//on confirmation dialog close\n\t\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t\t//submit wizard content for posting\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t\t//submit person\n\t\t\t\t\t\t\tthis.submitPerson(false);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\t//Factory function for responsibility list item\n\t\tcreatePersonResponsibilityListItem: function(sId, oContext) {\n\n\t\t\t//for each entry in the 'toResponsibilities' responsibility set collection\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\n\t\t\t\ttype: \"Active\",\n\t\t\t\tbusy: false\n\t\t\t});\n\n\t\t\t//textual description of role\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this.formatRoleID(this._oODataModel.getProperty(\"RoleID\", oContext)),\n\t\t\t\tmaxLines: 1\n\t\t\t}), 999);\n\n\t\t\t//textual description of organisation\n\t\t\tvar sOrganisationObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\n\t\t\t\tOrganisationID: this._oODataModel.getProperty(\"OrganisationID\", oContext)\n\t\t\t});\n\n\t\t\t//get organisation entity\n\t\t\tvar oOrganisation = this._oODataModel.getObject(sOrganisationObjectPath);\n\n\t\t\t//if organisation entity is available at this stage\n\t\t\tif (oOrganisation) {\n\n\t\t\t\t//provide list item cell attributes where not yet read\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: oOrganisation.Name,\n\t\t\t\t\tmaxLines: 1\n\t\t\t\t}), 999);\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: oOrganisation.CompanyRegNbr,\n\t\t\t\t\tmaxLines: 1\n\t\t\t\t}), 999);\n\n\t\t\t\t//textual description of relationship type\n\t\t\t\tvar sRelationshipTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"RelationshipTypeSet\", {\n\t\t\t\t\tRelationshipTypeID: oOrganisation.RelationshipTypeID\n\t\t\t\t});\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: this._oODataModel.getProperty(sRelationshipTypeObjectPath + \"/RelationshipTypeText\"),\n\t\t\t\t\tmaxLines: 1\n\t\t\t\t}), 999);\n\n\t\t\t\t//textual description of legal entity type\n\t\t\t\tvar sLegalEntityTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"LegalEntityTypeSet\", {\n\t\t\t\t\tLegalEntityTypeID: oOrganisation.LegalEntityType\n\t\t\t\t});\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: this._oODataModel.getProperty(sLegalEntityTypeObjectPath + \"/LegalEntityTypeText\"),\n\t\t\t\t\tmaxLines: 1\n\t\t\t\t}), 999);\n\n\t\t\t}\n\n\t\t\t//return column list item instance for rendering in UI\n\t\t\treturn oColumnListItem;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonUploadCollectionChange: function(oEvent) {\n\n\t\t\t//Get upload collection from event source\n\t\t\tvar oUploadCollection = oEvent.getSource();\n\t\t\tvar oCBoxDocumentTypes = this.getView().byId(\"cboxPersonDocumentTypes\");\n\n\t\t\t//Get attributes of file just uploaded\n\t\t\tvar oParameters = oEvent.getParameters();\n\n\t\t\t//Add upload collection parameter pertaining to security token\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\n\t\t\t\tname: \"x-csrf-token\",\n\t\t\t\tvalue: \"securityTokenFromModel\"\n\t\t\t});\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\n\n\t\t\t//Prevent instant upload by FileUploader (line 970, debug source)\n\t\t\toUploadCollection._oFileUploader.setEnabled(false);\n\n\t\t\t//check that another document of the selected type is allowable\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxDocumentTypes, \"DocumentType\")) {\n\t\t\t\toUploadCollection.fireUploadTerminated(oParameters.files[0].name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//create file reader and file reader event handler\n\t\t\tvar oFileReader = new FileReader();\n\t\t\toFileReader.onload = (function() {\n\n\t\t\t\t//get file content read\n\t\t\t\tvar sDocumentContent = oFileReader.result;\n\t\t\t\tsDocumentContent = sDocumentContent.split(\",\")[1];\n\n\t\t\t\t//get new upload collection item and set status\n\t\t\t\tvar oUploadCollectionItem = oUploadCollection.aItems[0];\n\t\t\t\toUploadCollectionItem._percentUploaded = 100;\n\t\t\t\toUploadCollectionItem._status = \"display\";\n\n\t\t\t\t//set binding context for new upload collection item\n\t\t\t\tthis._oODataModel.setProperty(\"FileData\", sDocumentContent, oFileReader.oContext);\n\n\t\t\t\t//submit changes to get correct document key\t\t\t\n\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t//success event handler\n\t\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t\t//show draft is saved\n\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndPerson\");\n\t\t\t\t\t\toDraftIndicator.showDraftSaved();\n\t\t\t\t\t\toDraftIndicator.clearDraftState();\n\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//raise event upload complete\n\t\t\t\t\t\toUploadCollection.fireUploadComplete();\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t\t//Show draft is saving\t\t\t\n\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndPerson\");\n\t\t\t\toDraftIndicator.showDraftSaving();\n\n\t\t\t}).bind(this);\n\n\t\t\t//create new entry in the OData model's DocumentSet\n\t\t\tvar oContext = this._oODataModel.createEntry(\"DocumentSet\", {\n\t\t\t\tproperties: {\n\t\t\t\t\tDocumentID: this.getUUID(),\n\t\t\t\t\tPersonID: this._oODataModel.getProperty(\"PersonID\", this.getView().getBindingContext(\"Registration\")),\n\t\t\t\t\tFileName: oParameters.files[0].name,\n\t\t\t\t\tFileType: oParameters.files[0].type,\n\t\t\t\t\tFileSize: oParameters.files[0].size.toString(),\n\t\t\t\t\tDocumentType: this.getView().byId(\"cboxPersonDocumentTypes\").getSelectedItem().getKey(),\n\t\t\t\t\tMimeType: oParameters.files[0].type\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//provide file reader with binding context\n\t\t\toFileReader.oContext = oContext;\n\n\t\t\t//invoke reading of content of file just uploaded\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\n\n\t\t},\n\n\t\tisDuplicateInput: function(aForms) {\n\n\t\t\t//local data declaration\n\t\t\tvar aDuplicateInputFormFields = [];\n\n\t\t\t//validate form input\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//person attributes form\n\t\t\t\tif (/formPersonAttributes/.test(oForm.getId())) {\n\n\t\t\t\t\t//check for possible person duplicate by name \n\t\t\t\t\tif ((this.getView().byId(\"inputPersonName\").getValue() || this.getView().byId(\"inputSurname\").getValue()) && this.getOwnerComponent()\n\t\t\t\t\t\t.oPersonList.getBinding(\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\t\t\tand: true,\n\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\t\t\t\t\tvalue1: \"T\" //Transient\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\tpath: \"Name\",\n\t\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputPersonName\").getValue()\n\t\t\t\t\t\t\t\t}), new sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\tpath: \"Surname\",\n\t\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputSurname\").getValue()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})).getLength() > 0) {\n\n\t\t\t\t\t\t//set value state and message for duplicate person name\n\t\t\t\t\t\tvar oFormField = {};\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputPersonName\");\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicatePersonName\"));\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputSurname\");\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicatePersonName\"));\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//check for possible person duplicate by ID number and type\n\t\t\t\t\tif (this.getView().byId(\"inputIDNumber\").getValue() && this.getOwnerComponent().oPersonList.getBinding(\"items\").filter(new sap.ui\n\t\t\t\t\t\t\t.model.Filter({\n\t\t\t\t\t\t\t\tand: true,\n\t\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\t\tpath: \"IDNumber\",\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputIDNumber\").getValue()\n\t\t\t\t\t\t\t\t\t}), new sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\t\tpath: \"IDType\",\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"cboxIdentificationType\").getSelectedKey()\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})).getLength() > 0) {\n\n\t\t\t\t\t\t//set value state and message for duplicate person ID number \n\t\t\t\t\t\toFormField = {};\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputIDNumber\");\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicatePersonIDNumber\"));\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"cboxIdentificationType\");\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicatePersonIDNumber\"));\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//check for possible person duplicate by business partner number\n\t\t\t\t\tif (this.getView().byId(\"inputPersonBusinessPartnerID\").getValue() && this.getOwnerComponent().oPersonList.getBinding(\"items\").filter(\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tand: true,\n\t\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\t\t\tpath: \"BusinessPartnerID\",\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputPersonBusinessPartnerID\").getValue()\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})).getLength() > 0) {\n\n\t\t\t\t\t\t//set value state and message for duplicate person business partner number \n\t\t\t\t\t\toFormField = {};\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputPersonBusinessPartnerID\");\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicatePersonBusinessPartnerID\"));\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//feedback to caller\n\t\t\treturn aDuplicateInputFormFields;\n\n\t\t},\n\n\t\t/**\n\t\t * Checks if there is any wrong inputs that can not be saved.\n\t\t * @private\n\t\t */\n\t\thasInvalidInput: function(aForms, oControl) {\n\n\t\t\t//local data declaration\n\t\t\tvar aInvalidFormFields = [];\n\n\t\t\t//validate form input\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//get all form fields\n\t\t\t\tvar aFormFields = this.getFormInputFields(oForm);\n\n\t\t\t\t//reduce validation to requested control where applicable\n\t\t\t\tif (oControl) {\n\t\t\t\t\tvar aFormFieldsTmp = aFormFields;\n\t\t\t\t\taFormFields = [];\n\t\t\t\t\tfor (var i = 0; i < aFormFieldsTmp.length; i = i + 1) {\n\t\t\t\t\t\tif (aFormFieldsTmp[i].oControl === oControl) {\n\t\t\t\t\t\t\taFormFields.push(aFormFieldsTmp[i]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//person attributes form\n\t\t\t\tif (/formPersonAttributes/.test(oForm.getId())) {\n\n\t\t\t\t\t//for each field on this form\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\n\n\t\t\t\t\t\t//by field\n\t\t\t\t\t\tswitch (oFormField.sId) {\n\n\t\t\t\t\t\t\t//phone number\n\t\t\t\t\t\t\tcase \"inputPersonPhoneNumber\":\n\n\t\t\t\t\t\t\t\t//check telephone number contains only digits after stripping all non numeric content\n\t\t\t\t\t\t\t\tif (!this.isValidPhoneNumber(oFormField.oControl.getValue())) {\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidPhoneNumberEntry\"));\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//list of communication details\n\t\t\t\t\t\t\tcase \"listPersonCommunication\":\n\n\t\t\t\t\t\t\t\t//local data declaration\n\t\t\t\t\t\t\t\tvar bIsInvalid = false;\n\t\t\t\t\t\t\t\tvar bHasMobileNumber = false;\n\t\t\t\t\t\t\t\tvar bHasLandLineNumber = false;\n\n\t\t\t\t\t\t\t\t//check that all phone numbers provided are valid\n\t\t\t\t\t\t\t\toFormField.oControl.getItems().forEach(function(oListItem) {\n\t\t\t\t\t\t\t\t\tvar oCommsNumberType = oListItem.getAggregation(\"content\")[0];\n\t\t\t\t\t\t\t\t\tvar oCommsNumberValue = oListItem.getAggregation(\"content\")[1];\n\t\t\t\t\t\t\t\t\tif (oCommsNumberType.getSelectedKey() === \"LandLine\") {\n\t\t\t\t\t\t\t\t\t\tbHasLandLineNumber = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (oCommsNumberType.getSelectedKey() === \"Mobile\") {\n\t\t\t\t\t\t\t\t\t\tbHasMobileNumber = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!this.isValidPhoneNumber(oCommsNumberValue.getValue())) {\n\t\t\t\t\t\t\t\t\t\toCommsNumberValue.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\t\toCommsNumberValue.setValueStateText(this._oResourceBundle.getText(\"invalidPhoneNumberValueEntry\"));\n\t\t\t\t\t\t\t\t\t\tbIsInvalid = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!oCommsNumberType.getSelectedKey()) {\n\t\t\t\t\t\t\t\t\t\toCommsNumberType.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\t\toCommsNumberType.setValueStateText(this._oResourceBundle.getText(\"invalidPhoneNumberTypeEntry\"));\n\t\t\t\t\t\t\t\t\t\tbIsInvalid = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t\t\t//check that either landline or mobile number are present\n\t\t\t\t\t\t\t\tif (!(bHasMobileNumber || bHasLandLineNumber)) {\n\t\t\t\t\t\t\t\t\toFormField.sInvalidInputMessage = this._oResourceBundle.getText(\"invalidInputPhoneNumberSet\");\n\t\t\t\t\t\t\t\t\tbIsInvalid = true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//list is invalid if at least one number is invalid\n\t\t\t\t\t\t\t\tif (bIsInvalid) {\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//business partner \n\t\t\t\t\t\t\tcase \"inputPersonBusinessPartnerID\":\n\n\t\t\t\t\t\t\t\t//check entered number is a valid business partner ID\n\t\t\t\t\t\t\t\tif (!this.isValidBusinessPartnerID(oFormField.oControl.getValue())) {\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidBusinessPartnerIDEntry\"));\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//SA ID number\n\t\t\t\t\t\t\tcase \"inputIDNumber\":\n\n\t\t\t\t\t\t\t\t//only if ID type is SA ID number\n\t\t\t\t\t\t\t\tif (this.getView().byId(\"cboxIdentificationType\").getSelectedKey() === \"000001\") {\n\n\t\t\t\t\t\t\t\t\t//check entered number is a SA ID number\n\t\t\t\t\t\t\t\t\tif (!this.isValidSAIDNumber(oFormField.oControl.getValue())) {\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidSAIDNumberEntry\"));\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//only if ID type is passport number\n\t\t\t\t\t\t\t\tif (this.getView().byId(\"cboxIdentificationType\").getSelectedKey() === \"000004\") {\n\n\t\t\t\t\t\t\t\t\t//check entered number is a valid passport number\n\t\t\t\t\t\t\t\t\tif (!this.isValidPassportNumber(oFormField.oControl.getValue())) {\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidPassportNumberEntry\"));\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//unvalidated fields\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}\n\n\t\t\t\t//person user account form\n\t\t\t\tif (/formPersonUser/.test(oForm.getId())) {\n\n\t\t\t\t\t//for each field on this form\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\n\n\t\t\t\t\t\t//by field\n\t\t\t\t\t\tswitch (oFormField.sId) {\n\n\t\t\t\t\t\t\t//email account\n\t\t\t\t\t\t\tcase \"inputEMail\":\n\n\t\t\t\t\t\t\t\t//check whether e-mail account entered is valid\n\t\t\t\t\t\t\t\tif (!this.isValidEMailAddress(oFormField.oControl.getValue())) {\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidEMailAddressEntry\"));\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//repeat entry of email account \n\t\t\t\t\t\t\tcase \"inputRepeatEMail\":\n\n\t\t\t\t\t\t\t\t//validate e-mail matches repeat mail input\n\t\t\t\t\t\t\t\tif (this.getView().byId(\"inputEMail\").getValue() && this.getView().byId(\"inputEMail\").getValue() !== oFormField.oControl\n\t\t\t\t\t\t\t\t\t.getValue()) {\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"nonmatchingEMailAddressEntry\"));\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//unvalidated fields\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}\n\n\t\t\t\t//person documents form\n\t\t\t\tif (/formPersonDocuments/.test(oForm.getId())) {\n\n\t\t\t\t\t//for each field on this form\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\n\n\t\t\t\t\t\t//by field\n\t\t\t\t\t\tswitch (oFormField.sId) {\n\n\t\t\t\t\t\t\t//table of person documents\n\t\t\t\t\t\t\tcase \"ucPersonDocUploadCollection\":\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\n\t\t\t\t\t\t\t\t\t\t\"cboxPersonDocumentTypes\"),\n\t\t\t\t\t\t\t\t\t\"DocumentType\", \"invalidInvalidDocuments\", \"Document types\"));\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t//unvalidated fields\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}\n\n\t\t\t\t//person addresses form\n\t\t\t\tif (/formPersonAddresses/.test(oForm.getId())) {\n\n\t\t\t\t\t//address validation only for profile of logged on user\n\t\t\t\t\tif (this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\") === this.getOwnerComponent().oUserInfo.PersonID) {\n\n\t\t\t\t\t\t//for each field on this form\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\n\n\t\t\t\t\t\t\t//by field\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\n\n\t\t\t\t\t\t\t\t//table of person addresses\n\t\t\t\t\t\t\t\tcase \"tabPersonAddresses\":\n\t\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\n\t\t\t\t\t\t\t\t\t\t\t\"cboxPersonAddressTypes\"),\n\t\t\t\t\t\t\t\t\t\t\"AddressTypeID\", \"invalidInvalidAddresses\", \"Address types\"));\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unvalidated fields\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//feedback to caller\n\t\t\treturn aInvalidFormFields;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonCBoxPersonDocumentTypesChange: function(oEvent) {\n\n\t\t\t//get reference to document upload UI controls\n\t\t\tvar oCBoxPersonDocumentTypes = oEvent.getSource();\n\t\t\tvar oUploadCollection = this.getView().byId(\"ucPersonDocUploadCollection\");\n\n\t\t\t//disable upload collection upload when no document type selected\n\t\t\tif (oCBoxPersonDocumentTypes.getSelectedItem() === null) {\n\t\t\t\toUploadCollection.setUploadEnabled(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//check whether another document of the selected type may be loaded\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxPersonDocumentTypes, \"DocumentType\")) {\n\t\t\t\toUploadCollection.setUploadEnabled(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//enable upload collection upload when document type selected\n\t\t\toUploadCollection.setUploadEnabled(true);\n\n\t\t},\n\n\t\t//on completion of document upload for person \n\t\tonPersonDocumentUploadComplete: function() {\n\n\t\t\t//reset person document upload collection for next interaction\n\t\t\tthis.getView().byId(\"ucPersonDocUploadCollection\").setUploadEnabled(false);\n\t\t\tvar oCBoxPersonDocumentTypes = this.getView().byId(\"cboxPersonDocumentTypes\");\n\t\t\toCBoxPersonDocumentTypes.setValueState(sap.ui.core.ValueState.None);\n\t\t\toCBoxPersonDocumentTypes.setSelectedKey(null);\n\n\t\t\t//check whether person documents are now valid\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formPersonDocuments\")]);\n\n\t\t\t//visualize person entity status\n\t\t\tthis.visualizeEntityStatus();\n\n\t\t},\n\n\t\t//on deletion of person document\n\t\tonDocumentDeleted: function(oEvent) {\n\n\t\t\t//reset person document upload collection for next interaction\n\t\t\tthis.getView().byId(\"ucPersonDocUploadCollection\").setUploadEnabled(false);\n\t\t\tvar oCBoxPersonDocumentTypes = this.getView().byId(\"cboxPersonDocumentTypes\");\n\t\t\toCBoxPersonDocumentTypes.setValueState(sap.ui.core.ValueState.None);\n\t\t\toCBoxPersonDocumentTypes.setSelectedKey(null);\n\n\t\t\t//call base controller file deletion event handler\n\t\t\tthis.onFileDeleted(oEvent);\n\n\t\t\t//check whether person documents are still valid\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formPersonDocuments\")]);\n\n\t\t\t//visualize person entity status\n\t\t\tthis.visualizeEntityStatus();\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonPressPersonServiceAddButton: function() {\n\n\t\t\t//get selected service type\n\t\t\tvar sServiceTypeID = this.getView().byId(\"cboxPersonServiceTypes\").getSelectedItem().getKey();\n\n\t\t\t//decide on route depending on service type\n\t\t\tvar sServiceCreateRouteID = this.getServiceRouteID(sServiceTypeID, \"Create\", \"Person\");\n\n\t\t\t//Navigate to service create wizard to create service for Person\n\t\t\tthis.getRouter().navTo(sServiceCreateRouteID, {\n\t\t\t\tPersonID: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonPressPersonServiceListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar sServiceID = oContext.getProperty(\"ServiceID\");\n\n\t\t\t//Navigate to service details view providing the service ID\n\t\t\tthis.getRouter().navTo(\"Service\", {\n\t\t\t\tServiceID: sServiceID\n\t\t\t});\n\n\t\t},\n\n\t\t//delete person service\n\t\tonPressPersonServiceDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sConfirmationText;\n\n\t\t\t//get context pointing to service for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get service attributes\n\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//build confirmation text for service deletion\n\t\t\tsConfirmationText = \"Delete service \" + this.formatServiceTypeID(oService.ServiceTypeID) + \" of \" + this.formatPersonID(\n\t\t\t\toService.PersonID) + \"?\";\n\n\t\t\t//confirmation dialog to delete this service\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\n\t\t\t\t\t\t\t//error handler callback function\n\t\t\t\t\t\t\terror: function(oError) {\n\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t * Event handler for 'Press' on ResponsibilityList\n\t\t */\n\t\tonPressPersonResponsibilityListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar sOrganisationID = oContext.getProperty(\"OrganisationID\");\n\n\t\t\t//navigate to the organisation view providing the organisation ID\n\t\t\tthis.getRouter().navTo(\"Organisation\", {\n\t\t\t\tOrganisationID: sOrganisationID\n\t\t\t});\n\n\t\t},\n\n\t\t//delete person responsibility\n\t\tonPressPersonResponsibilityDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sConfirmationText;\n\n\t\t\t//get context pointing to responsibility for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get responsibility attributes\n\t\t\tvar oResponsibility = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//build confirmation text for responsibility service deletion\n\t\t\tsConfirmationText = \"Delete role \" + this.formatRoleID(oResponsibility.RoleID) + \" of \" + this.formatPersonID(oResponsibility.PersonID) +\n\t\t\t\t\"?\";\n\n\t\t\t//confirmation dialog to delete this responsiblity\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\n\t\t\t\t\t\t\t//error handler callback function\n\t\t\t\t\t\t\terror: function(oError) {\n\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonCBoxPersonServiceTypesChange: function(oEvent) {\n\n\t\t\t//disable service add button\n\t\t\tvar oCBoxPersonServiceTypes = oEvent.getSource();\n\t\t\tif (oCBoxPersonServiceTypes.getSelectedItem() === null) {\n\t\t\t\tthis.getView().byId(\"btnPersonServiceAdd\").setEnabled(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//enable adding of person service\n\t\t\tthis.getView().byId(\"btnPersonServiceAdd\").setEnabled(true);\n\n\t\t},\n\n\t\t//on pressing check button to verify user input\n\t\tonPressPersonCheckInputButton: function() {\n\n\t\t\t//check user input\n\t\t\tvar oIncorrectInput = this.hasIncorrectInput([\n\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\")\n\t\t\t], null); //No specific control\n\n\t\t\t//message handling: user input checked with errors\n\t\t\tif (oIncorrectInput) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\n\t\t\t\t\tsap.ui.core.MessageType.Error);\n\t\t\t}\n\n\t\t\t//message handling: user input checked with no finding\n\t\t\tif (!oIncorrectInput) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedNoFindings\"),\n\t\t\t\t\tsap.ui.core.MessageType.Success);\n\t\t\t}\n\n\t\t},\n\n\t\t//check whether this person is related to other entities\t\t\n\t\tisRelated: function(oPersonContext) {\n\n\t\t\t//check for relationship to responsiblity\n\t\t\tif (this.getOwnerComponent().oResponsibilityList.getBinding(\"items\").filter(\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: oPersonContext.getProperty(\"PersonID\")\n\t\t\t\t\t})\n\t\t\t\t).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: person is related\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t//check for relationship to service\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: oPersonContext.getProperty(\"PersonID\")\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\toperator: \"BT\",\n\t\t\t\t\t\t\t\tvalue1: \"1\", //Awaiting approval\n\t\t\t\t\t\t\t\tvalue2: \"4\" //Revised\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: person is related\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t//check for relationship to supplier\n\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(new sap.ui.model.Filter({\n\t\t\t\t\tfilters: [new sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: oPersonContext.getProperty(\"PersonID\")\n\t\t\t\t\t})]\n\t\t\t\t})).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: person is related\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t//feedback to caller: person is not related\n\t\t\treturn false;\n\n\t\t},\n\n\t\t//set submit button enabled state\n\t\tsetSubmitButtonEnabledState: function() {\n\n\t\t\t//local data declaration\n\t\t\tvar bBtnSubmitEntityEnabled = false;\n\t\t\tvar sBtnSaveEntityType = sap.m.ButtonType.Emphasized;\n\t\t\tvar sBtnSubmitEntityType = sap.m.ButtonType.Transparent;\n\n\t\t\t//save button transparent where no changes present\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\n\t\t\t\tsBtnSaveEntityType = sap.m.ButtonType.Transparent;\n\t\t\t}\n\n\t\t\t//get view binding context\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\n\n\t\t\t//get entity in its current state\n\t\t\tif (oContext) {\n\t\t\t\tvar oEntity = this._oODataModel.getObject(oContext.getPath());\n\t\t\t}\n\n\t\t\t//enable submit button for valid form input on draft, revised, ready entity\n\t\t\tif (oEntity &&\n\t\t\t\t(oEntity.EntityStatusID === \"0\" ||\n\t\t\t\t\toEntity.EntityStatusID === \"4\" ||\n\t\t\t\t\toEntity.EntityStatusID === \"6\" ) &&\n\t\t\t\t!this._oODataModel.hasPendingChanges() &&\n\t\t\t\tthis.isValid([\n\t\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\")\n\t\t\t\t])) {\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\n\t\t\t\tbBtnSubmitEntityEnabled = true;\n\t\t\t}\n\n\t\t\t//set submit button enabled state and type\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", bBtnSubmitEntityEnabled);\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sBtnSubmitEntityType);\n\n\t\t\t//set save button type\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sBtnSaveEntityType);\n\n\t\t},\n\n\t\t//set person comms view model\n\t\tsetPersonCommsViewModel: function(oPerson) {\n\n\t\t\t//create JSON model with person comms data\t\n\t\t\tthis.oCommsModel = new sap.ui.model.json.JSONModel({\n\t\t\t\titems: []\n\t\t\t});\n\n\t\t\t//set person comms model to comms list\n\t\t\tthis.getView().byId(\"listPersonCommunication\").setModel(this.oCommsModel, \"Comms\");\n\n\t\t\t//get comms model data for change\n\t\t\tvar oCommsData = this.oCommsModel.getData();\n\n\t\t\t//processing where person present\n\t\t\tif (oPerson) {\n\n\t\t\t\t//add landline number to comms view model\n\t\t\t\tif (oPerson.PhoneNumber) {\n\t\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\t\"numberType\": \"LandLine\",\n\t\t\t\t\t\t\"numberTypeEnabled\": false,\n\t\t\t\t\t\t\"number\": oPerson.PhoneNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//add mobile number to comms view model\n\t\t\t\tif (oPerson.MobilePhoneNumber) {\n\t\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\t\"numberType\": \"Mobile\",\n\t\t\t\t\t\t\"numberTypeEnabled\": false,\n\t\t\t\t\t\t\"number\": oPerson.MobilePhoneNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//add fax number to comms view model\n\t\t\t\tif (oPerson.FaxNumber) {\n\t\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\t\"numberType\": \"Fax\",\n\t\t\t\t\t\t\"numberTypeEnabled\": false,\n\t\t\t\t\t\t\"number\": oPerson.FaxNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//set a default if entityset is initial\n\t\t\tif (oCommsData.items.length === 0) {\n\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\"numberTypeEnabled\": true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//set changed comms model data \n\t\t\tthis.oCommsModel.setData(oCommsData);\n\n\t\t},\n\n\t\t/*\n\n\t\t//create communications list item\n\t\tcreateCommsListItem: function(sId, oContext) {\n\n\t\t\t//local data declaration\n\t\t\tvar sNumberTypeText;\n\t\t\tvar aComboBoxItems = [];\n\t\t\tvar bComboBoxEnabled = false;\n\n\t\t\t//get attribute of this comms item\n\t\t\tvar oCommsEntry = this.oCommsModel.getObject(oContext.sPath);\n\t\t\tif (oCommsEntry.numberType === undefined || oCommsEntry.numberType === \"\") {\n\t\t\t\tbComboBoxEnabled = true;\n\t\t\t}\n\n\t\t\t//derive array of combobox options where not enabled\n\t\t\tif (!bComboBoxEnabled) {\n\t\t\t\tswitch (oCommsEntry.numberType) {\n\t\t\t\t\tcase \"LandLine\":\n\t\t\t\t\t\tsNumberTypeText = \"Land line\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Mobile\":\n\t\t\t\t\t\tsNumberTypeText = \"Mobile\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Fax\":\n\t\t\t\t\t\tsNumberTypeText = \"Fax\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taComboBoxItems = [\n\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\tkey: oCommsEntry.numberType,\n\t\t\t\t\t\ttext: sNumberTypeText\n\t\t\t\t\t})\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t//derive array of combobox options where enabled\n\t\t\tif (bComboBoxEnabled) {\n\n\t\t\t\t//get person entity in its current state\n\t\t\t\tvar oPerson = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t\t//compile list of remaining number types\n\t\t\t\tif (!oPerson.PhoneNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"LandLine\",\n\t\t\t\t\t\t\ttext: \"Land line\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tif (!oPerson.MobilePhoneNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"Mobile\",\n\t\t\t\t\t\t\ttext: \"Mobile phone\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tif (!oPerson.FaxNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"Fax\",\n\t\t\t\t\t\t\ttext: \"Fax\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//create comms list item with number type, number value and delete option\n\t\t\tvar oCommsListItem = new sap.m.CustomListItem({\n\t\t\t\ttype: \"Inactive\",\n\t\t\t\tcontent: [\n\t\t\t\t\tnew sap.m.ComboBox({\n\t\t\t\t\t\twidth: \"40%\",\n\t\t\t\t\t\tselectedKey: \"{Comms>numberType}\",\n\t\t\t\t\t\tforceSelection: false,\n\t\t\t\t\t\tchange: (this.onCommsAttributesChange).bind(this),\n\t\t\t\t\t\tenabled: bComboBoxEnabled,\n\t\t\t\t\t\tselectionChange: (this.onCommsAttributesLiveChange).bind(this),\n\t\t\t\t\t\titems: aComboBoxItems\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Input({\n\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\tplaceholder: \"Enter your number\",\n\t\t\t\t\t\tvalue: \"{Comms>number}\",\n\t\t\t\t\t\tchange: (this.onCommsAttributesChange).bind(this),\n\t\t\t\t\t\tliveChange: (this.onCommsAttributesLiveChange).bind(this)\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\"),\n\t\t\t\t\tnew sap.ui.core.Icon({\n\t\t\t\t\t\tsrc: \"sap-icon://sys-cancel\",\n\t\t\t\t\t\ttooltip: \"Delete\",\n\t\t\t\t\t\tcolor: \"#E42217\",\n\t\t\t\t\t\tpress: (this.onPressCommsItemDeleteButton).bind(this)\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin sapUiSmallMarginTop\")\n\t\t\t\t]\n\n\t\t\t});\n\n\t\t\t//feedback to caller\n\t\t\treturn oCommsListItem;\n\n\t\t},\n\n\t\t//add new communication item\n\t\tonPressAddCommunicationItemButton: function() {\n\n\t\t\t//get current comms model data\n\t\t\tvar oCommsData = this.oCommsModel.getData();\n\n\t\t\t//up to three possible comms entries\n\t\t\tif (oCommsData.items.length < 3) {\n\n\t\t\t\t//add item to comms view model\n\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\"numberTypeEnabled\": true\n\t\t\t\t});\n\n\t\t\t\t//set comms model to comms list\n\t\t\t\tthis.oCommsModel.setData(oCommsData);\n\n\t\t\t}\n\n\t\t},\n\n\t\t//on comms attributes change\n\t\tonCommsAttributesChange: function(oEvent) {\n\n\t\t\t//get changed number type and value\n\t\t\tvar sNumberType = oEvent.getSource().getParent().getAggregation(\"content\")[0].getSelectedKey();\n\t\t\tvar sNumberValue = oEvent.getSource().getParent().getAggregation(\"content\")[1].getValue();\n\n\t\t\t//disable number type combobox where available at this stage\n\t\t\tif (sNumberType) {\n\t\t\t\toEvent.getSource().getParent().getAggregation(\"content\")[0].setEnabled(false);\n\t\t\t}\n\n\t\t\t//update corresponding attribute in person entity of ODATA model\n\t\t\tswitch (sNumberType) {\n\t\t\t\tcase \"LandLine\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"PhoneNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Mobile\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"MobilePhoneNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Fax\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"FaxNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\t\t\n\t\t*/\n\n\t\t//on comms attributes change\n\t\tonCommsAttributesLiveChange: function(oEvent) {\n\n\t\t\t//get changed number type and value\n\t\t\tvar oListPersonCommunication = this.getView().byId(\"listPersonCommunication\");\n\n\t\t\t//trigger person attributes live change\n\t\t\tthis.onPersonAttributesLiveChange(new sap.ui.base.Event(undefined, oListPersonCommunication));\n\n\t\t},\n\n\t\t//Factory function for address list item\n\t\tcreatePersonAddressListItem: function(sId, oAddressContext) {\n\n\t\t\t//for each entry in the 'toAddresses' responsibility set collection\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\n\t\t\t\ttype: \"Active\",\n\t\t\t\tbusy: false\n\t\t\t});\n\n\t\t\t//get address object\n\t\t\tvar oAddress = oAddressContext.getObject();\n\n\t\t\t//textual description of address type\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this.formatAddressTypeID(this._oODataModel.getProperty(\"AddressTypeID\", oAddressContext))\n\t\t\t}), 999);\n\n\t\t\t//textual description of address category \n\t\t\tvar sAddressCategoryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressCategorySet\", {\n\t\t\t\tAddressCategoryID: oAddress.AddressCategoryID\n\t\t\t});\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this._oODataModel.getProperty(sAddressCategoryObjectPath + \"/AddressCategoryText\")\n\t\t\t}), 999);\n\n\t\t\t//Street or PO Box number\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: oAddress.HouseNumber + \" \" + oAddress.StreetName\n\t\t\t\t}), 999);\n\t\t\t} else {\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: \"PO Box \" + oAddress.POBoxNumber\n\t\t\t\t}), 999);\n\t\t\t}\n\n\t\t\t//Postal code (Street or PO Box)\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: oAddress.PostalCode\n\t\t\t\t}), 999);\n\t\t\t} else {\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\t\ttext: oAddress.POBoxPostalCode\n\t\t\t\t}), 999);\n\t\t\t}\n\n\t\t\t//City\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: oAddress.City\n\t\t\t}), 999);\n\n\t\t\t//create region key for region indicated on address\n\t\t\tvar sRegionObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"RegionSet\", {\n\t\t\t\tRegionID: this._oODataModel.getProperty(\"RegionID\", oAddressContext)\n\t\t\t});\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this._oODataModel.getProperty(sRegionObjectPath + '/RegionText')\n\t\t\t}), 999);\n\n\t\t\t//create country key for country indicated on address\n\t\t\tvar sCountryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"CountrySet\", {\n\t\t\t\tCountryID: this._oODataModel.getProperty(\"CountryID\", oAddressContext)\n\t\t\t});\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: this._oODataModel.getProperty(sCountryObjectPath + \"/CountryText\")\n\t\t\t}), 999);\n\n\t\t\t//delete button\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\n\t\t\t\ttooltip: \"Delete\",\n\t\t\t\tcolor: \"#E42217\",\n\t\t\t\tpress: (this.onPressPersonAddressDeleteButton).bind(this)\n\t\t\t}), 999);\n\n\t\t\t//return column list item instance for rendering in UI\n\t\t\treturn oColumnListItem;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Person\n\t\t */\n\t\tonPressPersonAddressDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sConfirmationText;\n\n\t\t\t//get context pointing to responsibility for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get address attributes\n\t\t\tvar oAddress = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//build confirmation text for responsibility service deletion\n\t\t\tsConfirmationText = \"Delete \" + this.formatAddressTypeID(oAddress.AddressTypeID) + \" of \" + this.formatPersonID(oAddress.PersonID) +\n\t\t\t\t\"?\";\n\n\t\t\t//confirmation dialog to delete this organisation\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\n\t\t\t\t\t\t\t//error handler callback function\n\t\t\t\t\t\t\terror: function(oError) {\n\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//change of address type\n\t\tonCBoxPersonAddressTypesChange: function(oEvent) {\n\n\t\t\t//disable address add button if no address type selected\n\t\t\tvar oCBoxPersonAddressTypes = oEvent.getSource();\n\t\t\tif (oCBoxPersonAddressTypes.getSelectedItem() === null) {\n\t\t\t\tthis.getView().byId(\"btnPersonAddressAdd\").setEnabled(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//enable creation of person address\n\t\t\tthis.getView().byId(\"btnPersonAddressAdd\").setEnabled(true);\n\n\t\t},\n\n\t\t//Address validation\n\t\tonAddressAttributesLiveChange: function(oEvent) {\n\n\t\t\t//visualize 'save' before 'submit' \n\t\t\tthis.visualizeSaveBeforeSubmit();\n\n\t\t\t//validate form input\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")], oEvent.getSource());\n\n\t\t},\n\n\t\t//on press on person address\n\t\tonPressPersonAddressListItem: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\n\t\t\t//create address popover where applicable\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\n\t\t\t\tthis.oAddressDialog.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\n\n\t\t\t//keep track of binding context of this list item for update from popover content on close\n\t\t\tthis.oAddressDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\n\n\t\t\t//set address form content\n\t\t\tvar oAddress = this.oAddressDialog.oBindingContext.getObject();\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddress.AddressCategoryID);\n\t\t\tsap.ui.getCore().byId(\"inputAddressStreetName\").setValue(oAddress.StreetName);\n\t\t\tsap.ui.getCore().byId(\"inputAddressHouseNumber\").setValue(oAddress.HouseNumber);\n\t\t\tsap.ui.getCore().byId(\"inputBuildingFloorFlat\").setValue(oAddress.BuildingFloorFlat);\n\t\t\tsap.ui.getCore().byId(\"inputAddressPostalCode\").setValue(oAddress.PostalCode);\n\t\t\tsap.ui.getCore().byId(\"inputAddressCity\").setValue(oAddress.City);\n\t\t\tsap.ui.getCore().byId(\"cboxAddressRegions\").setSelectedKey(oAddress.RegionID);\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(oAddress.CountryID);\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxNumber\").setValue(oAddress.POBoxNumber);\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").setValue(oAddress.POBoxPostalCode);\n\n\t\t\t//get reference to entity of selected address type \n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\n\t\t\t\tAddressTypeID: oAddress.AddressTypeID\n\t\t\t});\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\n\n\t\t\t//filter adress category by filter requested in address type where applicable\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//set addres form popover title\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Address\");\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\n\n\t\t\t// delay because addDependent will do a async rerendering \n\t\t\tthis.oAddressDialog.open();\n\n\t\t},\n\n\t\t//add person address\n\t\tonPressPersonAddressAddButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar oCBoxAddressTypes = this.getView().byId(\"cboxPersonAddressTypes\");\n\n\t\t\t//address type needs to be specified to proceed with creation\n\t\t\tif (!oCBoxAddressTypes.getSelectedKey()) {\n\n\t\t\t\t//set role selection combobox value state and text\n\t\t\t\toCBoxAddressTypes.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\toCBoxAddressTypes.setValueStateText(\"Select an address type for adding an address\");\n\n\t\t\t\t//no further processing at this moment\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//check that another addresses of the selected type is allowable\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabPersonAddresses\"), oCBoxAddressTypes, \"AddressTypeID\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//create popover to capture new address\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\n\t\t\t\tthis.oAddressDialog.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\n\n\t\t\t//initialize input fields\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formAddress\"));\n\n\t\t\t//get reference to entity of selected address type \n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\n\t\t\t\tAddressTypeID: oCBoxAddressTypes.getSelectedKey()\n\t\t\t});\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\n\n\t\t\t//filter adress category by filter requested in address type where applicable\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\n\n\t\t\t\t//filter address category by outgoing filter of the address type\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\t//default address category to outgoing address type filter argument\n\t\t\t\tif (oAddressType.OutgoingFilterArgument) {\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddressType.OutgoingFilterArgument);\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setEnabled(false);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//default country South Africa\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(\"ZA\");\n\n\t\t\t//set contact form popover title\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Add address\");\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\n\n\t\t\t// delay because addDependent will do a async rerendering \n\t\t\tthis.oAddressDialog.open();\n\n\t\t},\n\n\t\t//confirm address for organisation\n\t\tonPressAddressConfirmButton: function() {\n\n\t\t\t//Check for missing input\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")])) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//no further processing required where binding context exists\n\t\t\tif (this.oAddressDialog.oBindingContext) {\n\n\t\t\t\t//set address attributes form content\n\t\t\t\tthis._oODataModel.setProperty(\"AddressCategoryID\", sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"StreetName\", sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"HouseNumber\", sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"BuildingFloorFlat\", sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"PostalCode\", sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"City\", sap.ui.getCore().byId(\"inputAddressCity\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"RegionID\", sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"CountryID\", sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxNumber\", sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxPostalCode\", sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(), this.oAddressDialog\n\t\t\t\t\t.oBindingContext);\n\n\t\t\t\t//reset reference to binding context being edited\t\n\t\t\t\tthis.oAddressDialog.oBindingContext = null;\n\n\t\t\t\t//close address popover\n\t\t\t\tthis.oAddressDialog.close();\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//create new entry in the OData model's AddressSet\n\t\t\tthis._oODataModel.createEntry(\"AddressSet\", {\n\t\t\t\tproperties: {\n\t\t\t\t\tAddressID: this.getUUID(),\n\t\t\t\t\tPersonID: this._oODataModel.getProperty(\"PersonID\", this.getView().getBindingContext(\"Registration\")),\n\t\t\t\t\tAddressTypeID: this.getView().byId(\"cboxPersonAddressTypes\").getSelectedKey(),\n\t\t\t\t\tAddressCategoryID: sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(),\n\t\t\t\t\tRegionID: sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(),\n\t\t\t\t\tStreetName: sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(),\n\t\t\t\t\tHouseNumber: sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(),\n\t\t\t\t\tBuildingFloorFlat: sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(),\n\t\t\t\t\tPostalCode: sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(),\n\t\t\t\t\tCity: sap.ui.getCore().byId(\"inputAddressCity\").getValue(),\n\t\t\t\t\tPOBoxNumber: sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(),\n\t\t\t\t\tPOBoxPostalCode: sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(),\n\t\t\t\t\tCountryID: sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//submit changes to get correct address key\t\t\t\n\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t//success event handler\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//show draft is saved\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndPerson\");\n\t\t\t\t\toDraftIndicator.showDraftSaved();\n\t\t\t\t\toDraftIndicator.clearDraftState();\n\n\t\t\t\t\t//close address maintenance dialog where applicable\n\t\t\t\t\tif (this.oAddressDialog && this.oAddressDialog.isOpen()) {\n\t\t\t\t\t\tthis.oAddressDialog.close();\n\t\t\t\t\t}\n\n\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t\t//Show draft is saving\t\t\t\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndPerson\");\n\t\t\toDraftIndicator.showDraftSaving();\n\n\t\t},\n\n\t\t//on update finished of table of person addresses\n\t\tonUpdateFinishedTablePersonAddresses: function(oEvent) {\n\n\t\t\t//check whether supplier addresses are now valid\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formPersonAddresses\")]);\n\n\t\t\t//visualize organisation entity status\n\t\t\tthis.visualizeEntityStatus();\n\n\t\t},\n\n\t\t//set view controls enabled\n\t\tsetViewControlsEnabled: function(bEnabled) {\n\n\t\t\t//construct array for form input to enable\n\t\t\tvar aForms = [\n\t\t\t\tthis.getView().byId(\"formPersonAttributes\"),\n\t\t\t\tthis.getView().byId(\"formPersonUser\"),\n\t\t\t\tthis.getView().byId(\"formPersonAddresses\"),\n\t\t\t\tthis.getView().byId(\"formPersonDocuments\"),\n\t\t\t\tthis.getView().byId(\"formPersonResponsibilities\"),\n\t\t\t\tthis.getView().byId(\"formPersonServices\")\n\t\t\t];\n\n\t\t\t//switch person view input controls enabled state\n\t\t\tthis.setFormInputControlsEnabled(aForms, bEnabled, this.aIdentityFormFields);\n\n\t\t\t//switch person view form action controls enabled state\n\t\t\tthis.setFormActionControlsEnabled(aForms, bEnabled);\n\n\t\t\t//switch view action controls enabled state\n\t\t\tthis.setViewActionControlsEnabled(bEnabled);\n\n\t\t},\n\n\t\t//submit person\n\t\tsubmitPerson: function(bNavigate) {\n\n\t\t\t//set view to busy\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t//backend validate person before submission\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validatePerson\", {\n\n\t\t\t\t//url paramters\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"PersonID\": this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\"),\n\t\t\t\t\t\"CRUDActionID\": \"Update\"\n\t\t\t\t},\n\n\t\t\t\t//on receipt of person validation results\n\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t//Local data declaration\n\t\t\t\t\tvar sTargetStatus = \"1\"; //Submitted\n\t\t\t\t\tvar sStatusAction = \"1\"; //Submitted for approval\n\n\t\t\t\t\t//message handling where applicable\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\n\n\t\t\t\t\t\t//set entity messages\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\n\n\t\t\t\t\t\t//set validation error strip message\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t//no further processing\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//Amend target entity status for this submit where applicable\n\t\t\t\t\tif (this._oNavData.fromTarget) {\n\t\t\t\t\t\tsTargetStatus = \"6\"; //Ready\n\t\t\t\t\t\tsStatusAction = \"6\"; //Ready for submission\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t\t//set last action and entity status as submitted\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\"Registration\"));\n\n\t\t\t\t\t//submit changes made to model content\n\t\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t\t//update success handler\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//navigate where requested\n\t\t\t\t\t\t\tif (bNavigate) {\n\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//forget source of navigation\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\n\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t//navigate back in history\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//remain on this view where requested\n\t\t\t\t\t\t\tif (!bNavigate) {\n\n\t\t\t\t\t\t\t\t//visualize person entity status and confirm submission\n\t\t\t\t\t\t\t\tthis.promiseToVisualizeEntityStatus().then(function(oEntity) {\n\n\t\t\t\t\t\t\t\t\t//message handling: updated successfully\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmittedSuccessfully\"), sap.ui.core.MessageType.Success);\n\n\t\t\t\t\t\t\t\t\t//disable view to await review workflow feedback\n\t\t\t\t\t\t\t\t\tthis.setViewControlsEnabled(false);\n\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t\t//dialog to confirm submission\n\t\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, false);\n\n\t\t\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t});\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//press on message popover link to set focus\n\t\tonPressMessagePopoverItemLink: function(oEvent) {\n\n\t\t\t//get icon tabbar holding forms\n\t\t\tvar oIconTabBar = this.getView().byId(\"itabPerson\");\n\t\t\tvar oWizPersonCreate = this.getView().byId(\"wizPersonCreate\");\n\n\t\t\t//where icon tabbar present\n\t\t\tif (oIconTabBar) {\n\n\t\t\t\t//open icon tab containing form related to message\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\n\t\t\t\t\tcase \"formPersonAttributes\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Attributes\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonUser\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"User\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonAddresses\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Addresses\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonDocuments\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Documents\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonServices\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Services\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonResponsibilities\":\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Roles\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//where person create wizard is present\n\t\t\tif (oWizPersonCreate) {\n\n\t\t\t\t//open icon tab containing form related to message\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\n\t\t\t\t\tcase \"formPersonAttributes\":\n\t\t\t\t\t\toWizPersonCreate.goToStep(this.getView().byId(\"wizstepPersonAttributes\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonUser\":\n\t\t\t\t\t\toWizPersonCreate.goToStep(this.getView().byId(\"wizstepPersonUser\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"formPersonDocuments\":\n\t\t\t\t\t\toWizPersonCreate.goToStep(this.getView().byId(\"wizstepPersonDocuments\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//collate entity identity form inputs\n\t\tgetIdentityFormInputs: function() {\n\n\t\t\t//local data declaration\n\t\t\tvar aIdentityFormInputs = [];\n\n\t\t\t//add all form input representing entity identity\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"rbGrpIdentityType\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"rbForeignNational\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"rbSANational\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"cboxIdentificationType\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputIDNumber\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"cboxIDCountryOfIssue\"));\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputPersonBusinessPartnerID\"));\n\n\t\t\t//feedback to caller\n\t\t\treturn aIdentityFormInputs;\n\n\t\t},\n\n\t\t//handle support menu item press\n\t\tonPressSupportMenuItem: function(oEvent) {\n\n\t\t\t//get selected menu item\n\t\t\tvar oSupportMenuItem = oEvent.getParameter(\"item\");\n\n\t\t\t//refresh person data from ERP backend\n\t\t\tif (/mitemSupportRefreshPerson/.test(oSupportMenuItem.getId())) {\n\t\t\t\tthis.refreshEntityDataFromERP(\"Person\", \"toDocuments,toAddresses,toResponsibilities,toServices,toNotifications\");\n\t\t\t}\n\n\t\t},\n\t\t\n\t\t//handle Person delete button press\n\t\tonPressPersonDeleteButton: function(){\n\n\t\t\t//get context pointing to person for deletion\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\n\t\t\t\n\t\t\t//get person attributes\n\t\t\tvar oPerson = this._oODataModel.getObject(oContext.getPath());\n\t\t\t\n\t\t\t//check person is not in submitted status\n\t\t\tif(oPerson.EntityStatusID === \"1\"){\n\t\t\t\t\n\t\t\t\t//message handling: no delete for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedPersonEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t//check whether this person is still related\n\t\t\tif (this.isRelated(oContext)) {\n\n\t\t\t\t//message handling: no delated for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfPersonRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this person\n\t\t\tsap.m.MessageBox.confirm(\"Delete \" + oPerson.Name + \" \" + oPerson.Surname + \"?\", {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//forget source of navigation\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\n\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t//navigate back in history\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete person entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\t\t\t\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/App.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/Base.controller\"\n], function(BaseController) {\n\t\"use strict\";\n\treturn BaseController.extend(\"capetown.gov.registration.controller.App\", {\n\t\t\n\t});\n\t\n});",
		"capetown/gov/registration/controller/service/ServiceSUSOrganisationCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/service/ServiceCreate.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(ServiceCreateController, JSONModel) {\r\n\t\"use strict\";\r\n\treturn ServiceCreateController.extend(\"capetown.gov.registration.controller.service.ServiceSUSOrganisationCreate\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"ServiceSUSOrganisationCreate\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\tbusyTableResponsibilities: false,\r\n\t\t\t\tbusyDelayTableResponsibilities: 0,\r\n\t\t\t\tchkOrganisationDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkSupplierDataAccuracyDeclarationSelected: false\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oServiceWizard = this.getView().byId(\"wizServiceCreate\");\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oOrganisationSelectWizStep, oOrganisation;\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//hide message strip\r\n\t\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t\t//get service in current state\r\n\t\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//prepare when in the context of organisation\r\n\t\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t\t//get organisation select wizard step\r\n\t\t\t\t\toOrganisationSelectWizStep = this.getView().byId(\"wizstepSupplierOrganisationSelect\");\r\n\r\n\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\toOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\tOrganisationID: oService.OrganisationID\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//processing when returning from organisation create\r\n\t\t\t\tif (oNavData.returningFrom === \"OrganisationCreate\" || oNavData.returningFrom === \"Organisation\") {\r\n\r\n\t\t\t\t\t//proceed after organisation create\r\n\t\t\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t\t\t//filter organisation list by organisation of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").refresh();\r\n\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.OrganisationID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t//filter supplier list by organisation of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.OrganisationID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t\t//set next wizard step where applicable\r\n\t\t\t\t\t\tif (oOrganisationSelectWizStep.getNextStep() === null) {\r\n\r\n\t\t\t\t\t\t\t//organisation is adopted and already a supplier\r\n\t\t\t\t\t\t\tif (oOrganisation.isAdopted && oOrganisation.isSupplier) {\r\n\t\t\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\r\n\t\t\t\t\t\t\t\t//organisation is not adopted or not yet a supplier\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//where organisation is either submitted, approved or ready\r\n\t\t\t\t\t\tif (oOrganisation.EntityStatusID === \"1\" || oOrganisation.EntityStatusID === \"2\" || oOrganisation.EntityStatusID === \"6\") {\r\n\t\t\t\t\t\t\t//this._oServiceWizard.validateStep(oOrganisationSelectWizStep);  In UI5 version 1.52.9 setting next step and validate does not work on same thread\r\n\t\t\t\t\t\t\t//this._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationSelected\", true);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationSelected\", false);\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationEnabled\", true);\r\n\t\t\t\t\t\t\tthis._oServiceWizard.invalidateStep(oOrganisationSelectWizStep);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//processing when returning from supplier create\r\n\t\t\t\tif (oNavData.returningFrom === \"SupplierCreateForOrganisation\") {\r\n\r\n\t\t\t\t\t//proceed after supplier create\r\n\t\t\t\t\tif (oService.SupplierID) {\r\n\r\n\t\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\t\tSupplierID: oService.SupplierID\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//filter supplier list by supplier of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").refresh();\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.SupplierID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t\t//where supplier is either submitted, approved or ready\r\n\t\t\t\t\t\tif (oSupplier.EntityStatusID === \"1\" || oSupplier.EntityStatusID === \"2\" || oSupplier.EntityStatusID === \"6\") {\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", true);\r\n\t\t\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", false);\r\n\t\t\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//processing when returning from person create or update\r\n\t\t\t\tif (oNavData.returningFrom === \"PersonCreate\" || oNavData.returningFrom === \"Person\") {\r\n\r\n\t\t\t\t\t//refresh responsibility list display\r\n\t\t\t\t\tthis.getView().byId(\"tabServiceResponsibilities\").getBinding(\"items\").refresh();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add supplier self service for an organisation\");\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//discard all progress in this wizard\r\n\t\t\tvar oStep = this._oServiceWizard.getSteps()[0];\r\n\t\t\tthis._oServiceWizard.discardProgress(oStep);\r\n\t\t\toStep.setValidated(false);\r\n\r\n\t\t\t//get binding context from new service entry\r\n\t\t\tif (!this._oNavData.ServiceID) {\r\n\r\n\t\t\t\t//create new service set entry\r\n\t\t\t\tvar oServiceContext = this._oODataModel.createEntry(\"ServiceSet\", {\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tServiceID: this.getUUID(),\r\n\t\t\t\t\t\tServiceTypeID: \"SupplierSelfService\",\r\n\t\t\t\t\t\tServiceScopeID: \"1\",\r\n\t\t\t\t\t\tEntityStatusID: \"T\",\r\n\t\t\t\t\t\tLastActionID: \"T\",\r\n\t\t\t\t\t\tLastActionTimeStamp: new Date(),\r\n\t\t\t\t\t\tisAdministered: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//set binding context for this view\r\n\t\t\t\tthis.getView().setBindingContext(oServiceContext, \"Registration\");\r\n\r\n\t\t\t\t//submit changes to this point\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully submitted changes\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t//failed to submit changes\r\n\t\t\t\t\terror: function() {\r\n\r\n\t\t\t\t\t\t//terminate user action\r\n\t\t\t\t\t\tthis.terminateUserAction();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//get binding context from resumed service entry\t\t\t\r\n\t\t\tif (this._oNavData.ServiceID) {\r\n\r\n\t\t\t\t//Create object path for an existing OData model instance\r\n\t\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\tServiceID: this._oNavData.ServiceID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\t\tthis._oODataModel.createBindingContext(sServiceObjectPath, null, {\r\n\t\t\t\t\texpand: \"toOrganisation,toSupplier\"\r\n\t\t\t\t}, function(oServiceContext) {\r\n\r\n\t\t\t\t\t//set new binding context\r\n\t\t\t\t\tthis.getView().setBindingContext(oServiceContext, \"Registration\");\r\n\r\n\t\t\t\t\t//get service in its current state\r\n\t\t\t\t\toService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t\t//where organisation is set on this service\r\n\t\t\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\t\toOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//filter organisation list by organisation of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.OrganisationID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t//filter supplier list by organisation of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.OrganisationID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t\t//get organisation select wizard step\r\n\t\t\t\t\t\toOrganisationSelectWizStep = this.getView().byId(\"wizstepSupplierOrganisationSelect\");\r\n\r\n\t\t\t\t\t\t//set next wizard step after organisation select\r\n\t\t\t\t\t\tif (oOrganisation.isAdopted && oOrganisation.isSupplier) {\r\n\t\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//where supplier is set on this service\r\n\t\t\t\t\tif (oService.SupplierID) {\r\n\r\n\t\t\t\t\t\t//filter supplier list to exclude drafts\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.SupplierID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether service responsibilities are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formServiceResponsibilities\")])) {\r\n\t\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for selecting a supplier for service create\r\n\t\tonPressSupplierListItem: function(oEvent) {\r\n\r\n\t\t\t//hide message strip \r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//get supplier in current state\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar oSupplier = oContext.getObject();\r\n\r\n\t\t\t//set supplier ID to OData model service instance\r\n\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/SupplierID\", oSupplier.SupplierID);\r\n\r\n\t\t\t//check for possible duplicate service registration\r\n\t\t\tif (this.isDuplicateInputForSupplier()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//get service entity in its current state\r\n\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\tServiceID: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\")\r\n\t\t\t});\r\n\t\t\tvar oService = this._oODataModel.getObject(sServiceObjectPath);\r\n\r\n\t\t\t//amend view title to include selected person or organisation\t\r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add \" + this.formatServiceTypeID(this.getView().getBindingContext(\"Registration\").getProperty(\r\n\t\t\t\t\t\"ServiceTypeID\")).toLowerCase() + \" for \" + this.formatOrganisationID(oService.OrganisationID) + \" trading as \" + this.formatSupplierID(\r\n\t\t\t\t\toSupplier.SupplierID));\r\n\t\t\t}\r\n\t\t\tif (oService.PersonID) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add \" + this.formatServiceTypeID(this.getView().getBindingContext(\"Registration\").getProperty(\r\n\t\t\t\t\t\"ServiceTypeID\")).toLowerCase() + \" for \" + this.formatPersonID(oService.PersonID) + \" trading as \" + this.formatSupplierID(\r\n\t\t\t\t\toSupplier.SupplierID));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming person data accuracy declaration\t\t\r\n\t\tonSelectPersonDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that person has suitable status\r\n\t\t\t\t\tvar oPerson = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"PersonSet\", {\r\n\t\t\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: person status not suitable\r\n\t\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\" && oPerson.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonProfileNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//disable checkbox for person data accuracy confirmation\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming organisation data accuracy declaration\t\t\r\n\t\tonSelectOrganisationDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that organisation has suitable status\r\n\t\t\t\t\tvar oOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: organisation status not suitable\r\n\t\t\t\t\tif (oOrganisation.EntityStatusID !== \"1\" && oOrganisation.EntityStatusID !== \"2\" && oOrganisation.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOrganisationNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//filter supplier list to suppliers that exist for selected organisation\r\n\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oOrganisation.OrganisationID\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//check for possible duplicate service registration\r\n\t\t\t\t\tif (this.isDuplicateInputForOrganisation(oOrganisation.OrganisationID)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//get organisation select wizard step\r\n\t\t\t\t\tvar oOrganisationSelectWizStep = this.getView().byId(\"wizstepSupplierOrganisationSelect\");\r\n\r\n\t\t\t\t\t//set next wizard step after organisation select\r\n\t\t\t\t\tif (oOrganisation.isAdopted && oOrganisation.isSupplier) {\r\n\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toOrganisationSelectWizStep.setNextStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate organisation select step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(oOrganisationSelectWizStep);\r\n\r\n\t\t\t\t\t//disable checkbox for organisation data accuracy confirmation\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepSupplierOrganisationSelect\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming supplier data accuracy declaration\t\t\r\n\t\tonSelectSupplierDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that supplier has suitable status\r\n\t\t\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\tSupplierID: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: supplier status not suitable\r\n\t\t\t\t\tif (oSupplier.EntityStatusID !== \"1\" && oSupplier.EntityStatusID !== \"2\" && oSupplier.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSupplierNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check for possible duplicate service registration\r\n\t\t\t\t\tif (this.isDuplicateInputForSupplier()) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\r\n\t\t\t\t\t//disable checkbox for supplier data accuracy confirmation\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/service/ServiceList.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/service/Service.controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(ServiceController, JSONModel) {\n\t\"use strict\";\n\t\n\t/**\n\t * Service list Controller\n\t * @description Controller for service list\n\t * @module ServiceList\n\t * @augments module:Service\n\t */\n\treturn ServiceController.extend(\"capetown.gov.registration.controller.service.ServiceList\", {\n\n\t\t//Initialization of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"ServiceList\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\ttableNoDataText: this.getResourceBundle().getText(\"tableNoDataTextWithAddOption\"),\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"viewModel\");\n\t\t\tthis._oViewModel = oViewModel;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.ServiceList\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//trigger refresh of list\n\t\t\tthis.getView().byId(\"tabServiceList\").getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.ServiceList\n\t\t */\n\t\tonCBoxServiceTypesChange: function(oEvent) {\n\n\t\t\t//disable service add button if no service type selected\n\t\t\tvar oCBoxServiceTypes = oEvent.getSource();\n\t\t\tif (!oCBoxServiceTypes.getSelectedItem()) {\n\t\t\t\tthis.getView().byId(\"btnServiceAdd\").setEnabled(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//enable creation of service\n\t\t\tthis.getView().byId(\"btnServiceAdd\").setEnabled(true);\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.ServiceList\n\t\t * Event handler for 'Press' on ServiceList\n\t\t */\n\t\tonPressServiceListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar sServiceID = oContext.getProperty(\"ServiceID\");\n\n\t\t\t//Navigate to service details view providing the service ID\n\t\t\tthis.getRouter().navTo(\"Service\", {\n\t\t\t\tServiceID: sServiceID\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.App\n\t\t */\n\t\tonPressServiceAddButton: function(oEvent) {\n\n\t\t\t//double check a service type is selected\n\t\t\tvar oServiceType = this.getView().byId(\"cboxServiceTypes\");\n\t\t\tif (!oServiceType.getSelectedKey()) {\n\t\t\t\toServiceType.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\toServiceType.setValueStateText(\"Select the type of service to add\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//reset value state and text of service type in case of previous error\n\t\t\toServiceType.setValueState(sap.ui.core.ValueState.None);\n\n\t\t\t//create service scope popover\n\t\t\tthis.oServiceScopePopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.service.ServiceScopePopoverWithoutServiceType\",\n\t\t\t\tthis);\n\t\t\tthis.oServiceScopePopover.attachAfterClose(function() {\n\t\t\t\tthis.oServiceScopePopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oServiceScopePopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tvar oLabelServiceType = this.getView().byId(\"labelServiceType\");\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oServiceScopePopover.openBy(oLabelServiceType);\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.App\n\t\t */\n\t\tonPressPersonServiceAddButton: function() {\n\n\t\t\t//local data declaration\n\t\t\tvar sServiceCreateRouteID;\n\n\t\t\t//get chosen service type\n\t\t\tvar sServiceTypeID = this.getView().byId(\"cboxServiceTypes\").getSelectedKey();\n\n\t\t\t//check whether person is already registered for this service\n\t\t\tif (this.isDuplicateInputForPerson()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Create object path for existing person OData model instance\n\t\t\tvar sPersonKey = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t});\n\n\t\t\t//get person entity\n\t\t\tvar oPerson = this.getModel(\"Registration\").getObject(sPersonKey);\n\n\t\t\t//for person with 'adopted' business partner that is already supplier\n\t\t\tif (oPerson.isAdopted && oPerson.isSupplier) {\n\n\t\t\t\t//message handling: person status not suitable\n\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\") {\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonProfileNeedsUpdating\"), sap.ui.core.MessageType.Error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//confirmation dialog to submit\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitRegistration\"), {\n\t\t\t\t\tactions: [\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\n\t\t\t\t\t],\n\n\t\t\t\t\t//on confirmation dialog close\n\t\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t\t//submit wizard content for posting\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t\t//set view to busy\n\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t\t\t\t\t//create new supplier self service set entry \n\t\t\t\t\t\t\tvar oServiceContext = this._oODataModel.createEntry(\"ServiceSet\", {\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tServiceID: this.getUUID(),\n\t\t\t\t\t\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID,\n\t\t\t\t\t\t\t\t\tServiceTypeID: \"SupplierSelfService\",\n\t\t\t\t\t\t\t\t\tServiceScopeID: \"0\", //Person\n\t\t\t\t\t\t\t\t\tEntityStatusID: \"1\", //Submitted\n\t\t\t\t\t\t\t\t\tLastActionID: \"1\", //Submitted\n\t\t\t\t\t\t\t\t\tLastActionTimeStamp: new Date(),\n\t\t\t\t\t\t\t\t\tisAdministered: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//submit all changes made to model content\n\t\t\t\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t\t\t\t//update success handler\n\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t\t//get entity from backend and confirm submission\n\t\t\t\t\t\t\t\t\tthis.promiseToReadEntity(oServiceContext).then(function(oEntity) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t//close service scope popover\n\t\t\t\t\t\t\t\t\t\tthis.oServiceScopePopover.close();\n\n\t\t\t\t\t\t\t\t\t\t//refresh list of service registrations\n\t\t\t\t\t\t\t\t\t\tthis.getView().byId(\"tabServiceList\").getBinding(\"items\").refresh();\n\n\t\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t\t\t//confirm submission\t\n\t\t\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, false);\n\n\t\t\t\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t\t//no further processing at this stage\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//decide on route depending on service type\n\t\t\tsServiceCreateRouteID = this.getServiceRouteID(sServiceTypeID, \"Create\", \"Person\");\n\n\t\t\t//Navigate to person service create wizard \n\t\t\tthis.getRouter().navTo(sServiceCreateRouteID, {\n\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.ServiceList\n\t\t */\n\t\tonPressOrganisationServiceAddButton: function() {\n\n\t\t\t//get chosen service type\n\t\t\tvar sServiceTypeID = this.getView().byId(\"cboxServiceTypes\").getSelectedKey();\n\n\t\t\t//decide on route depending on service type\n\t\t\tvar sServiceCreateRouteID = this.getServiceRouteID(sServiceTypeID, \"Create\", \"Organisation\");\n\n\t\t\t//Navigate to service create wizard to create service\n\t\t\tthis.getRouter().navTo(sServiceCreateRouteID, {\n\t\t\t\tServiceScopeID: \"1\"\n\t\t\t});\n\n\t\t},\n\n\t\t//delete service\n\t\tonPressServiceDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sConfirmationText;\n\n\t\t\t//get context pointing to person for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get service attributes\n\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//check service is not in submitted status\n\t\t\tif (oService.EntityStatusID === \"1\") {\n\n\t\t\t\t//message handling: no delete for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedServiceEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//build confirmation text for person service deletion\n\t\t\tif (oService.PersonID) {\n\t\t\t\tsConfirmationText = \"Delete service \" + this.formatServiceTypeID(oService.ServiceTypeID) + \" for \" + this.formatPersonID(oService.PersonID) +\n\t\t\t\t\t\"?\";\n\t\t\t}\n\n\t\t\t//build confirmation text for organisation service deletion\n\t\t\tif (oService.OrganisationID) {\n\t\t\t\tsConfirmationText = \"Delete service \" + this.formatServiceTypeID(oService.ServiceTypeID) + \" for \" + this.formatOrganisationID(\n\t\t\t\t\toService.OrganisationID) + \"?\";\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this organisation\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete service entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/service/ServiceSUSPersonCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/service/ServiceCreate.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(ServiceCreateController, JSONModel) {\r\n\t\"use strict\";\r\n\treturn ServiceCreateController.extend(\"capetown.gov.registration.controller.service.ServiceSUSPersonCreate\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"ServiceSUSPersonCreate\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\tmessage: \"\",\r\n\t\t\t\tbusyTableResponsibilities: false,\r\n\t\t\t\tbusyDelayTableResponsibilities: 0,\r\n\t\t\t\tchkPersonDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkSupplierDataAccuracyDeclarationSelected: false\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oServiceWizard = this.getView().byId(\"wizServiceCreate\");\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//hide message strip\r\n\t\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t\t//get service in current state\r\n\t\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//processing when returning from supplier create\r\n\t\t\t\tif (oNavData.returningFrom === \"SupplierCreateForPerson\") {\r\n\r\n\t\t\t\t\t//proceed after supplier create\r\n\t\t\t\t\tif (oService.SupplierID) {\r\n\r\n\t\t\t\t\t\t//get related supplier in current state\r\n\t\t\t\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\t\tSupplierID: oService.SupplierID\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//filter supplier list by supplier of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").refresh();\r\n\t\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oService.SupplierID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]);\r\n\r\n\t\t\t\t\t\t//where supplier in current status is either submitted, approved or ready\r\n\t\t\t\t\t\tif (oSupplier.EntityStatusID === \"1\" || oSupplier.EntityStatusID === \"2\" || oSupplier.EntityStatusID === \"6\") {\r\n\r\n\t\t\t\t\t\t\t//validate supplier selection step\r\n\t\t\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\r\n\t\t\t\t\t\t\t//validate supplier data accuracy declaration step\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", true);\r\n\t\t\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t//invalidate supplier selection step\r\n\t\t\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\r\n\t\t\t\t\t\t\t//invalidate supplier data accuracy declaration step\r\n\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", false);\r\n\t\t\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"Create\");\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add supplier self service for me\");\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//discard all progress in this wizard\r\n\t\t\tvar oStep = this._oServiceWizard.getSteps()[0];\r\n\t\t\tthis._oServiceWizard.discardProgress(oStep);\r\n\t\t\toStep.setValidated(false);\r\n\r\n\t\t\t//get binding context from new service entry\r\n\t\t\tif (!this._oNavData.ServiceID) {\r\n\r\n\t\t\t\t//create new service set entry\r\n\t\t\t\tvar oServiceContext = this._oODataModel.createEntry(\"ServiceSet\", {\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tServiceID: this.getUUID(),\r\n\t\t\t\t\t\tPersonID: this._oNavData.PersonID,\r\n\t\t\t\t\t\tServiceTypeID: \"SupplierSelfService\",\r\n\t\t\t\t\t\tServiceScopeID: \"0\",\r\n\t\t\t\t\t\tEntityStatusID: \"T\",\r\n\t\t\t\t\t\tLastActionID: \"T\",\r\n\t\t\t\t\t\tLastActionTimeStamp: new Date(),\r\n\t\t\t\t\t\tisAdministered: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//set binding context for this view\r\n\t\t\t\tthis.getView().setBindingContext(oServiceContext, \"Registration\");\r\n\r\n\t\t\t\t//submit changes to this point\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully submitted changes\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t//failed to submit changes\r\n\t\t\t\t\terror: function() {\r\n\r\n\t\t\t\t\t\t//terminate user action\r\n\t\t\t\t\t\tthis.terminateUserAction();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//get binding context from resumed service entry\t\t\t\r\n\t\t\tif (this._oNavData.ServiceID) {\r\n\r\n\t\t\t\t//Create object path for an existing OData model instance\r\n\t\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\tServiceID: this._oNavData.ServiceID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\t\tthis._oODataModel.createBindingContext(sServiceObjectPath, null, {\r\n\t\t\t\t\texpand: \"toPerson,toSupplier\"\r\n\t\t\t\t}, function(oServiceContext) {\r\n\r\n\t\t\t\t\t//set new binding context\r\n\t\t\t\t\tthis.getView().setBindingContext(oServiceContext, \"Registration\");\r\n\r\n\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//filter supplier list by person of this service\r\n\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter(\r\n\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"PersonID\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: this._oNavData.PersonID\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for selecting a supplier for service create\r\n\t\tonPressSupplierListItem: function(oEvent) {\r\n\r\n\t\t\t//hide message strip \r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//get supplier in current state\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar oSupplier = oContext.getObject();\r\n\r\n\t\t\t//set supplier ID to OData model service instance\r\n\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/SupplierID\", oSupplier.SupplierID);\r\n\r\n\t\t\t//get service entity in its current state\r\n\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\tServiceID: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\")\r\n\t\t\t});\r\n\t\t\tvar oService = this._oODataModel.getObject(sServiceObjectPath);\r\n\r\n\t\t\t//amend view title to include selected person or organisation\t\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add \" + this.formatServiceTypeID(this.getView().getBindingContext(\"Registration\").getProperty(\r\n\t\t\t\t\"ServiceTypeID\")).toLowerCase() + \" for \" + this.formatPersonID(oService.PersonID) + \" trading as \" + this.formatSupplierID(\r\n\t\t\t\toSupplier.SupplierID));\r\n\r\n\t\t\t//validate supplier selection wizard step\r\n\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming supplier data accuracy declaration\t\t\r\n\t\tonSelectSupplierDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that supplier has suitable status\r\n\t\t\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\tSupplierID: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: supplier status not suitable\r\n\t\t\t\t\tif (oSupplier.EntityStatusID !== \"1\" && oSupplier.EntityStatusID !== \"2\" && oSupplier.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSupplierNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//disable person data accuracy confirmation checkbox\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkSupplierDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming person data accuracy declaration\t\t\r\n\t\tonSelectPersonDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that person has suitable status\r\n\t\t\t\t\tvar oPerson = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"PersonSet\", {\r\n\t\t\t\t\t\tPersonID: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: person status not suitable\r\n\t\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\" && oPerson.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonProfileNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//filter supplier list to suppliers that exist for selected person\r\n\t\t\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"PersonID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//disable person data accuracy confirmation checkbox\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/service/ServiceCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/service/Service.controller\"\r\n], function(ServiceController) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Service Create Controller\r\n\t * @description Controller for service create\r\n\t * @module ServiceCreate\r\n\t * @augments module:Service\r\n\t */\r\n\treturn ServiceController.extend(\"capetown.gov.registration.controller.service.ServiceCreate\", {\r\n\r\n\t\t//on completion of document upload for service \r\n\t\tonServiceDocumentUploadComplete: function(oEvent) {\r\n\r\n\t\t\t//validate or invalidate step depending whether form entry is correct\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formServiceDocuments\")])) {\r\n\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceDocuments\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceDocuments\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of service document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//validate or invalidate step depending whether form entry is correct\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formServiceDocuments\")])) {\r\n\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceDocuments\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceDocuments\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on change of select of service type\r\n\t\tonSelServiceTypeChange: function() {\r\n\r\n\t\t\t//validate step to move to next\r\n\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceAttributes\"));\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for completion of service attributes wizard step\r\n\t\tonWizStepServiceAttributesComplete: function() {\r\n\r\n\t\t\t//disable radiobutton group for service scope\r\n\t\t\tthis._oViewModel.setProperty(\"/selServiceTypesEnabled\", false);\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for selecting an organisation for service create\r\n\t\tonPressOrganisationListItem: function(oEvent) {\r\n\r\n\t\t\t//hide message strip \r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//retrieve organisation entity in current state\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar oOrganisation = oContext.getObject();\r\n\r\n\t\t\t//check for possible duplicate service registration\r\n\t\t\tif (this.isDuplicateInputForOrganisation(oOrganisation.OrganisationID)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//set organisation ID to OData model service instance\r\n\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/OrganisationID\", oOrganisation.OrganisationID);\r\n\r\n\t\t\t//amend view title to include selected organisation\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add \" + this.formatServiceTypeID(this.getView().getBindingContext(\"Registration\").getProperty(\r\n\t\t\t\t\"ServiceTypeID\")).toLowerCase() + \" for \" + this.formatOrganisationID(oOrganisation.OrganisationID));\r\n\r\n\t\t\t//apply filter to supplier list and set appropriate noData text where applicable\r\n\t\t\tif (this.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter([\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oOrganisation.OrganisationID\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tand: false,\r\n\t\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\toperator: \"BT\",\r\n\t\t\t\t\t\t\t\tvalue1: \"1\", //Awaiting approval\r\n\t\t\t\t\t\t\t\tvalue2: \"4\" //Revised\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})\r\n\t\t\t\t]).getLength() === 0) {\r\n\r\n\t\t\t\t//no supplier exists for this organisation as yet\r\n\t\t\t\tthis._oViewModel.setProperty(\"/tableNoDataText\", \"No entries. Click + to add\");\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of service parameters\r\n\t\tonUpdateFinishedTableServiceParameters: function(oEvent) {\r\n\r\n\t\t\t//check whether service responsibilities are now valid\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formServiceParameters\")], oEvent.getSource())) {\r\n\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceParameters\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceParameters\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of organisation responsibilities\r\n\t\tonUpdateFinishedTableServiceResponsibilities: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oServiceWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether organisation responsibilities are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formServiceResponsibilities\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for wizard submit button press\r\n\t\tonPressServiceWizardSubmitButton: function() {\r\n\r\n\t\t\t//get service in current status\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//validate service responsibities for submit\r\n\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t//responsiblity form validation\r\n\t\t\t\tif (this.hasIncorrectInput([this.getView().byId(\"formServiceResponsibilities\")])) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//get responsible people with unsuitable entity status\r\n\t\t\t\tvar aPerson = this.hasResponsibilitiesNotReadyForSubmit(this.getView().byId(\"tabServiceResponsibilities\"));\r\n\r\n\t\t\t\t//message handling: found responsible people with unsuitable entity status\r\n\t\t\t\tif (aPerson.length > 0) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageResponsibilitiesNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\t\taPerson[0].Name + \" \" + aPerson[0].Surname),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//model data has pending changes\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\r\n\t\t\t\t//submit changed attributes to backend\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//on changes submitted successfully\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//confirm and submit service\r\n\t\t\t\t\t\tthis.confirmAndSubmitService();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//model data has no pending changes\t\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//confirm and submit person\r\n\t\t\t\tthis.confirmAndSubmitService();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.ServiceCreate\r\n\t\t */\r\n\t\tonPressOrganisationAddButton: function() {\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t//get service instance in its current state\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate to organisation create without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"OrganisationCreate\", {\r\n\t\t\t\ttoTarget: \"OrganisationCreate\",\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\r\n\t\t */\r\n\t\tonPressSupplierAddButton: function(oEvent) {\r\n\r\n\t\t\t//get service entity\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//Add supplier for specified person\r\n\t\t\tif (oService.PersonID) {\r\n\r\n\t\t\t\t//check whether this person is already a supplier\r\n\t\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"PersonID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: oService.PersonID\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).getLength() > 0) {\r\n\r\n\t\t\t\t\t//message handling: person is already a supplier\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageYouAlreadyHaveASupplierAccount\"), sap.ui.core.MessageType.Warning);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//save service draft before proceeding\r\n\t\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t\t//navigate to supplier person create without changing hash\r\n\t\t\t\tthis.getRouter().getTargets().display(\"SupplierCreateForPerson\", {\r\n\t\t\t\t\ttoTarget: \"SupplierCreateForPerson\",\r\n\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID,\r\n\t\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Add supplier for specified organisation\r\n\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t//check whether this organisation is already a supplier\r\n\t\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: oService.OrganisationID\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).getLength() > 0) {\r\n\r\n\t\t\t\t\t//message handling: organisation is already a supplier\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOrganisationAlreadyHasASupplierAccount\"), sap.ui.core.MessageType.Warning);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//save service draft before proceeding\r\n\t\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t\t//navigate to supplier organisation create without changing hash\r\n\t\t\t\tthis.getRouter().getTargets().display(\"SupplierCreateForOrganisation\", {\r\n\t\t\t\t\ttoTarget: \"SupplierCreateForOrganisation\",\r\n\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\tOrganisationID: oService.OrganisationID,\r\n\t\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Add supplier for organisation with organisation selection\r\n\t\t\tif (!oService.OrganisationID && oService.ServiceScopeID === \"1\") {\r\n\r\n\t\t\t\t//navigate to supplier organisation create without changing hash\r\n\t\t\t\tthis.getRouter().getTargets().display(\"SupplierOrganisationCreate\", {\r\n\t\t\t\t\ttoTarget: \"SupplierOrganisationCreate\",\r\n\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\tOrganisationID: oService.OrganisationID,\r\n\t\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.ServiceCreate\r\n\t\t */\r\n\t\tonPressPersonSelectDialogAddPersonButton: function() {\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t//get service entity\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate to person create without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing person data update button\t\t\r\n\t\tonPressPersonUpdateDetailsButton: function() {\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t//get ID of service the person update is invoked from\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display person without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\tPersonID: oService.PersonID,\r\n\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing organisation data update button\t\t\r\n\t\tonPressOrganisationUpdateDetailsButton: function() {\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t//get service instance in its current state\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get related organisation in current state\r\n\t\t\tvar oOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\tOrganisationID: oService.OrganisationID\r\n\t\t\t}));\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate depending on organisation entity status\r\n\t\t\tswitch (oOrganisation.EntityStatusID) {\r\n\r\n\t\t\t\t//organisation in draft status\r\n\t\t\t\tcase \"0\":\r\n\r\n\t\t\t\t\t//navigate to organisation create resume without changing hash\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"OrganisationCreate\", {\r\n\t\t\t\t\t\ttoTarget: \"OrganisationCreate\",\r\n\t\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\t\tOrganisationID: oService.OrganisationID,\r\n\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//organisation in other status\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t//display organisation without changing hash\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"Organisation\", {\r\n\t\t\t\t\t\tOrganisationID: oService.OrganisationID,\r\n\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\ttoTarget: \"Organisation\",\r\n\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing supplier data update button\t\t\r\n\t\tonPressSupplierUpdateDetailsButton: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sTargetView;\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t//get service entity\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get related organisation in current state\r\n\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\tSupplierID: oService.SupplierID\r\n\t\t\t}));\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//determine target view for supplier update\r\n\t\t\tswitch (oSupplier.EntityStatusID) {\r\n\r\n\t\t\t\t//supplier in draft status\r\n\t\t\t\tcase \"0\":\r\n\r\n\t\t\t\t\t//Determine target view to resume supplier create\r\n\t\t\t\t\tif (oService.PersonID) {\r\n\t\t\t\t\t\tsTargetView = \"SupplierCreateForPerson\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\t\t\tsTargetView = \"SupplierCreateForOrganisation\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//supplier in other status\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t//Determine target view to edit supplier\r\n\t\t\t\t\tif (oService.PersonID) {\r\n\t\t\t\t\t\tsTargetView = \"SupplierPerson\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\t\t\tsTargetView = \"SupplierOrganisation\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//navigate to supplier view without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(sTargetView, {\r\n\t\t\t\tSupplierID: oService.SupplierID,\r\n\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\ttoTarget: sTargetView,\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming person data accuracy declaration\t\t\r\n\t\tonSelectPersonDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that person has suitable status\r\n\t\t\t\t\tvar oPerson = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"PersonSet\", {\r\n\t\t\t\t\t\tPersonID: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: person status not suitable\r\n\t\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\" && oPerson.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonProfileNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//disable checkbox for person data accuracy confirmation\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming organisation data accuracy declaration\t\t\r\n\t\tonSelectOrganisationDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that organisation has suitable status\r\n\t\t\t\t\tvar oOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: organisation status not suitable\r\n\t\t\t\t\tif (oOrganisation.EntityStatusID !== \"1\" && oOrganisation.EntityStatusID !== \"2\" && oOrganisation.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOrganisationNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepOrganisationDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//disable checkbox for organisation data accuracy confirmation\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationEnabled\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepOrganisationDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//save person create draft\t\t\r\n\t\tonPressServiceCreateSaveDraftButton: function() {\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t//post processing after successful updating in the backend\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\t//set last action and entity status as draft\r\n\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t//submit all changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//on changes submitted succesfully\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling\r\n\t\t\t\t\tthis._oMessageStrip.setText(\"Draft saved successfully\");\r\n\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//refresh list of organisations in the context of service creation\r\n\t\tonPressOrganisationListRefreshButton: function() {\r\n\r\n\t\t\t//hide message strip that might point to refreshing list\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//trigger refresh of organisation list\r\n\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").filter([]);\r\n\r\n\t\t\t//set default organisation where only 1 organisation present\r\n\t\t\tif (this.getOwnerComponent().oOrganisationList.getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tand: false,\r\n\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\toperator: \"BT\",\r\n\t\t\t\t\t\t\tvalue1: \"1\", //Awaiting approval\r\n\t\t\t\t\t\t\tvalue2: \"4\" //Revised\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})).getLength() === 1) {\r\n\r\n\t\t\t\t//get ID of the one existing organisation as default organisation ID\r\n\t\t\t\tvar sOrganisationID = this.getOwnerComponent().oOrganisationList.getItems()[0].getBindingContext(\"Registration\").getProperty(\r\n\t\t\t\t\t\"OrganisationID\");\r\n\r\n\t\t\t\t//set organisation ID to OData model service instance\r\n\t\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/OrganisationID\", sOrganisationID);\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//refresh list of suppliers in the context of service creation\r\n\t\tonPressSupplierListRefreshButton: function() {\r\n\r\n\t\t\t//hide message strip that might point to refreshing list\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//trigger refresh of organisation list\r\n\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").refresh();\r\n\r\n\t\t},\r\n\r\n\t\t//on service parameters live change\r\n\t\tonServiceParametersLiveChange: function(oEvent) {\r\n\r\n\t\t\t//validate or invalidate step depending whether form entiry is correct\t\t\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formServiceParameters\")], oEvent.getSource())) {\r\n\t\t\t\tthis._oServiceWizard.validateStep(this.getView().byId(\"wizstepServiceParameters\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oServiceWizard.invalidateStep(this.getView().byId(\"wizstepServiceParameters\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.ServiceCreate\r\n\t\t */\r\n\t\tonCBoxServiceParameterTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable service parameter add button\r\n\t\t\tvar oCBoxServiceParameterTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxServiceParameterTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnServiceParameterAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable service parameter add button\r\n\t\t\tthis.getView().byId(\"btnServiceParameterAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//add service parameter\r\n\t\tonPressServiceParameterAddButton: function() {\r\n\r\n\t\t\t//create service parameter set entry\r\n\t\t\tthis._oODataModel.createEntry(\"ServiceParameterSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tServiceParameterID: this.getUUID(),\r\n\t\t\t\t\tServiceID: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\"),\r\n\t\t\t\t\tParameterTypeID: this.getView().byId(\"cboxServiceParameterTypes\").getSelectedKey()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct service parameter key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tthis.hasODataBatchErrorResponse(oData.__batchResponses);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.ServiceCreate\r\n\t\t * Event handler for 'Press' on ResponsibilityList\r\n\t\t */\r\n\t\tonPressServiceResponsibilityListItem: function(oEvent) {\r\n\r\n\t\t\t//identify person to which to navigate\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sPersonID = oContext.getProperty(\"PersonID\");\r\n\r\n\t\t\t//navigate to Person where applicable\r\n\t\t\tif (sPersonID) {\r\n\r\n\t\t\t\t//save service draft before proceeding\r\n\t\t\t\tthis.onPressServiceCreateSaveDraftButton();\r\n\r\n\t\t\t\t//get ID of service the person update is invoked from\r\n\t\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//get OData model path to responsible person\r\n\t\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\t\tPersonID: sPersonID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//get responsible Person in current state\r\n\t\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t\t//for drafts navigate to Person create without changing hash\r\n\t\t\t\tswitch (oPerson.EntityStatusID) {\r\n\r\n\t\t\t\t\t//for person drafts navigate to person create without changing hash\r\n\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\t\tPersonID: oPerson.PersonID,\r\n\t\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t//for people in other statuses navigate to person without changing hash\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\t\t\t\tPersonID: sPersonID,\r\n\t\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//confirm and submit service\r\n\t\tconfirmAndSubmitService: function() {\r\n\r\n\t\t\t//confirmation dialog to submit\r\n\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitRegistration\"), {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//submit service\r\n\t\t\t\t\t\tthis.submitService();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//submit service\r\n\t\tsubmitService: function(bNavigate) {\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//backend validate person before submission\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateService\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"ServiceID\": this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\"),\r\n\t\t\t\t\t\"CRUDActionID\": \"Create\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//service attributes found to be valid\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//set entity messages\r\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\r\n\r\n\t\t\t\t\t\t//set validation error strip message\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set last action and entity status as submitted\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"1\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"1\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t\t\t//submit all changes made to model content\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//get entity from backend and confirm submission\r\n\t\t\t\t\t\t\tthis.promiseToReadEntity().then(function(oEntity) {\r\n\r\n\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t//confirm submission\t\r\n\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, true);\r\n\r\n\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/service/Service.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/Base.controller\",\r\n\t\"capetown/gov/registration/controller/person/Person.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, PersonController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Service Controller\r\n\t * @description Prototype for ServiceCreate and ServiceList controllers\r\n\t * @module Service\r\n\t * @augments module:Base\r\n\t */\r\n\treturn BaseController.extend(\"capetown.gov.registration.controller.service.Service\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"Service\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tselServiceTypesEnabled: false,\r\n\t\t\t\tbusyTableResponsibilities: false,\r\n\t\t\t\tbusyDelayTableResponsibilities: 0,\r\n\t\t\t\tobjHeaderTitle: \"Registered service\",\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\tdelay: 0\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sObjHeaderTitle;\r\n\t\t\tvar sObjAttributeIDTitle;\r\n\t\t\tvar sObjAttributeIDText;\r\n\r\n\t\t\t//set message strip invisible\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//processing when returning from person creation or person update\r\n\t\t\t\tif (oNavData.returningFrom === \"PersonCreate\" || oNavData.returningFrom === \"Person\") {\r\n\r\n\t\t\t\t\t//refresh responsibility list display\r\n\t\t\t\t\tthis.getView().byId(\"tabServiceResponsibilities\").getBinding(\"items\").refresh();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxDocTypeSelectedItem\", \"\");\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleUpdateService\"));\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//Create object path for an existing OData model instance\r\n\t\t\tvar sServiceObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\tServiceID: this._oNavData.ServiceID\r\n\t\t\t});\r\n\r\n\t\t\t//reset view for display of entity\r\n\t\t\tthis.resetView([\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formServiceResponsibilities\")\r\n\t\t\t]);\r\n\r\n\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\t//important: set context in callback, in case object had to be read from server\r\n\t\t\tthis._oODataModel.createBindingContext(sServiceObjectPath, null, {\r\n\t\t\t\texpand: \"toPerson,toOrganisation,toSupplier,toDocuments,toResponsibilities\"\r\n\t\t\t}, function(oServiceContext) {\r\n\r\n\t\t\t\t//set new binding context\r\n\t\t\t\tthis.getView().setBindingContext(oServiceContext, \"Registration\");\r\n\r\n\t\t\t\t//get service entity in its current status\r\n\t\t\t\tvar oService = oServiceContext.getObject();\r\n\r\n\t\t\t\t//prepare object header title for service entity\r\n\t\t\t\tsObjHeaderTitle = this.formatServiceTypeID(oService.ServiceTypeID) + \" for \";\r\n\r\n\t\t\t\t//visualize service entity status\r\n\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t//provide binding context for person\r\n\t\t\t\tif (oService.PersonID) {\r\n\r\n\t\t\t\t\t//get supplier attributes form\r\n\t\t\t\t\tvar oPersonAttributesForm = this.getView().byId(\"formPersonAttributes\");\r\n\r\n\t\t\t\t\t//create object path for related person\r\n\t\t\t\t\tvar sPersonPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\t\t\tPersonID: oService.PersonID\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//get related person in current state\r\n\t\t\t\t\tvar oPerson = this._oODataModel.getObject(sPersonPath);\r\n\r\n\t\t\t\t\t//complete object header title with person information\r\n\t\t\t\t\tsObjHeaderTitle = sObjHeaderTitle + oPerson.Name + \" \" + oPerson.Surname;\r\n\t\t\t\t\tsObjAttributeIDTitle = \"ID Number\";\r\n\t\t\t\t\tsObjAttributeIDText = oPerson.IDNumber;\r\n\r\n\t\t\t\t\t//prepare person comms model\r\n\t\t\t\t\tPersonController.prototype.setPersonCommsViewModel.call(this, oPerson);\r\n\r\n\t\t\t\t\t//bind person attributes form\r\n\t\t\t\t\toPersonAttributesForm.bindElement({\r\n\t\t\t\t\t\tpath: sPersonPath,\r\n\t\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//set person attributes form to disabled \r\n\t\t\t\t\tthis.setFormInputControlsEnabled([oPersonAttributesForm], false);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//provide binding context for organisation\r\n\t\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t\t//get organisation attributes form\r\n\t\t\t\t\tvar oOrganisationAttributesForm = this.getView().byId(\"formOrganisationAttributes\");\r\n\r\n\t\t\t\t\t//create object path for related organisation\r\n\t\t\t\t\tvar sOrganisationPath = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\tOrganisationID: oService.OrganisationID\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\tvar oOrganisation = this._oODataModel.getObject(sOrganisationPath);\r\n\r\n\t\t\t\t\t//complete object header title with organisation information\r\n\t\t\t\t\tsObjHeaderTitle = sObjHeaderTitle + oOrganisation.Name;\r\n\t\t\t\t\tsObjAttributeIDTitle = \"Company Registration Number\";\r\n\t\t\t\t\tsObjAttributeIDText = oOrganisation.CompanyRegNbr;\r\n\r\n\t\t\t\t\t//bind organisation attributes form\r\n\t\t\t\t\toOrganisationAttributesForm.bindElement({\r\n\t\t\t\t\t\tpath: sOrganisationPath,\r\n\t\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//set organisation attributes form to disabled\r\n\t\t\t\t\tthis.setFormInputControlsEnabled([oOrganisationAttributesForm], false);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//provide binding context for supplier\r\n\t\t\t\tif (oService.SupplierID) {\r\n\r\n\t\t\t\t\t//get supplier attributes form\r\n\t\t\t\t\tvar oSupplierAttributesForm = this.getView().byId(\"formSupplierAttributes\");\r\n\r\n\t\t\t\t\t//create object path for related supplier\r\n\t\t\t\t\tvar sSupplierPath = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\r\n\t\t\t\t\t\tSupplierID: oService.SupplierID\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\tvar oSupplier = this._oODataModel.getObject(sSupplierPath);\r\n\r\n\t\t\t\t\t//complete object header title with supplier information\r\n\t\t\t\t\tif (oSupplier.TradingAsName) {\r\n\t\t\t\t\t\tsObjHeaderTitle = sObjHeaderTitle + \" trading as \" + oSupplier.TradingAsName;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//bind supplier attributes form\r\n\t\t\t\t\toSupplierAttributesForm.bindElement({\r\n\t\t\t\t\t\tpath: sSupplierPath,\r\n\t\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//make available the array of supplier industry keys\r\n\t\t\t\t\tif (oSupplier.IndustryKeys && oSupplier.IndustryKeys.length > 0) {\r\n\t\t\t\t\t\tvar aIndustryKeys = oSupplier.IndustryKeys.split(\",\");\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", aIndustryKeys);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set supplier attributes form \r\n\t\t\t\t\tthis.setFormInputControlsEnabled([oSupplierAttributesForm], false);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set entity notification where entity still in approved/ rejected status\r\n\t\t\t\tif (oService.EntityStatusID === \"2\" || oService.EntityStatusID === \"3\") {\r\n\t\t\t\t\tthis.setEntityNotification(\"ServiceID\", oService.ServiceID);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on admin rights for selected service\r\n\t\t\t\tif (oService.isAdministered) {\r\n\t\t\t\t\tthis.setViewControlsEnabled(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.setFormListItemTypeActive([this.getView().byId(\"formServiceResponsibilities\")], true);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoAdminRightsServiceDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on entity status\r\n\t\t\t\tif (oService.EntityStatusID === \"1\") { //submitted\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.setFormListItemTypeActive([this.getView().byId(\"formServiceResponsibilities\")], true);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInSubmittedStatusServiceDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set object header title and ID attribute title and text\r\n\t\t\t\tthis._oViewModel.setProperty(\"/objHeaderTitle\", sObjHeaderTitle);\r\n\t\t\t\tthis._oViewModel.setProperty(\"/objAttributeIDTitle\", sObjAttributeIDTitle);\r\n\t\t\t\tthis._oViewModel.setProperty(\"/objAttributeIDText\", sObjAttributeIDText);\r\n\r\n\t\t\t\t//view is no longer busy\r\n\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for responsibility list item\r\n\t\tcreateServiceResponsibilityListItem: function(sId, oContext) {\r\n\r\n\t\t\t//for each entry in responsibility set collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//provide list item cell attributes where already read at this moment\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatRoleID(this._oODataModel.getProperty(\"RoleID\", oContext))\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of person\r\n\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\tPersonID: this._oODataModel.getProperty(\"PersonID\", oContext)\r\n\t\t\t});\r\n\r\n\t\t\t//get organisation entity\r\n\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t//provide list item cell attributes where not yet read\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oPerson.Name\r\n\t\t\t}), 999);\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oPerson.Surname\r\n\t\t\t}), 999);\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatIDType(oPerson.IDType)\r\n\t\t\t}), 999);\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oPerson.IDNumber\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//landline or mobile number as phone number\r\n\t\t\tif (oPerson.PhoneNumber) {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oPerson.PhoneNumber\r\n\t\t\t\t}), 999);\r\n\t\t\t} else {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oPerson.MobilePhoneNumber\r\n\t\t\t\t}), 999);\r\n\t\t\t}\r\n\r\n\t\t\t//person entity status\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatEntityStatusID(oPerson.EntityStatusID)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tpress: (this.onPressServiceResponsibilityDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//factory function for service list item\r\n\t\tcreateServiceListItem: function(sId, oContext) {\r\n\r\n\t\t\t//get entity\r\n\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//instantiate new column list item\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//service type value\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatServiceTypeID(oService.ServiceTypeID),\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//'service registered for' cell\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: \"\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//format organisation name as value for 'registered for' cell \r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\toColumnListItem.getCells()[1].setText(this.formatOrganisationID(oService.OrganisationID));\r\n\t\t\t}\r\n\r\n\t\t\t//format person name as value for 'registered for' cell\r\n\t\t\tif (oService.PersonID) {\r\n\t\t\t\toColumnListItem.getCells()[1].setText(this.formatPersonID(oService.PersonID));\r\n\t\t\t}\r\n\r\n\t\t\t//service for organisation where organisation not yet specified\r\n\t\t\tif (!oService.OrganisationID && oService.ServiceScopeID === \"1\") {\r\n\t\t\t\toColumnListItem.getCells()[1].setText(\"Organisation not yet selected\");\r\n\t\t\t}\r\n\r\n\t\t\t//entity status\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatEntityStatusID(oService.EntityStatusID),\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//action \r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatActionID(oService.LastActionID),\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//action timestamp\r\n\t\t\tvar sLastActionTimeStamp;\r\n\t\t\tif (oService.LastActionTimeStamp) {\r\n\t\t\t\tsLastActionTimeStamp = oService.LastActionTimeStamp.toLocaleDateString(\"en-us\", {\r\n\t\t\t\t\tweekday: \"long\",\r\n\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\tmonth: \"short\",\r\n\t\t\t\t\tday: \"numeric\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sLastActionTimeStamp\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressServiceDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Person\r\n\t\t */\r\n\t\tonUploadCollectionChange: function(oEvent) {\r\n\r\n\t\t\t//Get upload collection from event source\r\n\t\t\tvar oUploadCollection = oEvent.getSource();\r\n\t\t\tvar oCBoxDocumentTypes = this.getView().byId(\"cboxServiceDocumentTypes\");\r\n\r\n\t\t\t//Get attributes of file just uploaded\r\n\t\t\tvar oParameters = oEvent.getParameters();\r\n\r\n\t\t\t//Add upload collection parameter pertaining to security token\r\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\tvalue: \"securityTokenFromModel\"\r\n\t\t\t});\r\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\r\n\r\n\t\t\t//Prevent instant upload by FileUploader (line 970, debug source)\r\n\t\t\toUploadCollection._oFileUploader.setEnabled(false);\r\n\r\n\t\t\t//check that another document of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxDocumentTypes, \"DocumentType\")) {\r\n\t\t\t\toUploadCollection.fireUploadTerminated(oParameters.files[0].name);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create file reader and file reader event handler\r\n\t\t\tvar oFileReader = new FileReader();\r\n\t\t\toFileReader.onload = (function() {\r\n\r\n\t\t\t\t//get file content read\r\n\t\t\t\tvar sDocumentContent = oFileReader.result;\r\n\t\t\t\tsDocumentContent = sDocumentContent.split(\",\")[1];\r\n\r\n\t\t\t\t//get new upload collection item and set status\r\n\t\t\t\tvar oUploadCollectionItem = oUploadCollection.aItems[0];\r\n\t\t\t\toUploadCollectionItem._percentUploaded = 100;\r\n\t\t\t\toUploadCollectionItem._status = \"display\";\r\n\r\n\t\t\t\t//adopt file content into OData for update to backend\r\n\t\t\t\tthis._oODataModel.setProperty(\"FileData\", sDocumentContent, oFileReader.oContext);\r\n\r\n\t\t\t\t//submit changes to get correct document key\t\t\t\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//success event handler\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//raise event upload complete\r\n\t\t\t\t\t\toUploadCollection.fireUploadComplete();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Show draft is saving\t\t\t\r\n\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t}).bind(this);\r\n\r\n\t\t\t//create new entry in the OData model's DocumentSet\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"DocumentSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tDocumentID: this.getUUID(),\r\n\t\t\t\t\tServiceID: this._oODataModel.getProperty(\"ServiceID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tFileName: oParameters.files[0].name,\r\n\t\t\t\t\tFileType: oParameters.files[0].type,\r\n\t\t\t\t\tFileSize: oParameters.files[0].size.toString(),\r\n\t\t\t\t\tDocumentType: this.getView().byId(\"cboxServiceDocumentTypes\").getSelectedItem().getKey(),\r\n\t\t\t\t\tMimeType: oParameters.files[0].type\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//provide file reader with binding context\r\n\t\t\toFileReader.oContext = oContext;\r\n\r\n\t\t\t//invoke reading of content of file just uploaded\r\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for service \r\n\t\tonServiceDocumentUploadComplete: function(oEvent) {\r\n\r\n\t\t\t//validate whether service documents are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formServiceDocuments\")], oEvent.getSource());\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of service responsibilities\r\n\t\tonUpdateFinishedTableServiceResponsibilities: function(oEvent) {\r\n\r\n\t\t\t//get service entity in current status\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//for services involving an organisation\r\n\t\t\tif (oService && oService.OrganisationID) {\r\n\r\n\t\t\t\t//check whether service responsibilities are now valid\r\n\t\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formServiceResponsibilities\")]);\r\n\r\n\t\t\t\t//visualize organisation entity status\r\n\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of service document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//check whether service documents are still valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formServiceDocuments\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//check for duplicate service registration (stub only)\r\n\t\tisDuplicateInput: function(aForms) {\r\n\r\n\t\t\t//return no duplicates\r\n\t\t\treturn [];\r\n\r\n\t\t},\r\n\r\n\t\t//check for duplicate service registration for logged on person\r\n\t\tisDuplicateInputForPerson: function() {\r\n\r\n\t\t\t//check for possible duplicate service registration\r\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tand: true,\r\n\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"PersonID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\tvalue1: \"T\" //Transient\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"ServiceTypeID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().byId(\"cboxServiceTypes\").getSelectedKey()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t//message handling: service already registered for logged on person\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageDuplicateServicePersonRegistration\"), sap.ui.core.MessageType\r\n\t\t\t\t\t.Error);\r\n\r\n\t\t\t\t//feedback to caller\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t//check for duplicate service registration for selected organisation\r\n\t\tisDuplicateInputForOrganisation: function(sOrganisationID) {\r\n\r\n\t\t\t//check for possible duplicate service registration\r\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tand: true,\r\n\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"ServiceID\",\r\n\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\")\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: sOrganisationID\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"ServiceTypeID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceTypeID\")\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t//message handling: service already registered for this organisation\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageDuplicateServiceOrganisationRegistration\"), sap.ui.core.MessageType\r\n\t\t\t\t\t.Error);\r\n\r\n\t\t\t\t//feedback to caller\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t//check for duplicate service registration for selected organisation\r\n\t\tisDuplicateInputForSupplier: function() {\r\n\r\n\t\t\t//verify that supplier has suitable status\r\n\t\t\tvar oSupplier = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"SupplierSet\", {\r\n\t\t\t\tSupplierID: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\")\r\n\t\t\t}));\r\n\r\n\t\t\t//check for possible duplicate service registration\r\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tand: true,\r\n\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"ServiceID\",\r\n\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\")\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\")\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: oSupplier.SupplierID\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\tpath: \"ServiceTypeID\",\r\n\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceTypeID\")\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t//message handling: service already registered for this supplier\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageDuplicateServiceSupplierRegistration\"), sap.ui.core.MessageType\r\n\t\t\t\t\t.Error);\r\n\r\n\t\t\t\t//feedback to caller\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\t\thasInvalidInput: function(aForms, oControl) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aInvalidFormFields = [];\r\n\r\n\t\t\t//validate form input\r\n\t\t\taForms.forEach(function(oForm) {\r\n\r\n\t\t\t\t\t//get all form fields\r\n\t\t\t\t\tvar aFormFields = this.getFormInputFields(oForm);\r\n\r\n\t\t\t\t\t//reduce validation to requested control where applicable\r\n\t\t\t\t\tif (oControl) {\r\n\t\t\t\t\t\tvar aFormFieldsTmp = aFormFields;\r\n\t\t\t\t\t\taFormFields = [];\r\n\t\t\t\t\t\tfor (var i = 0; i < aFormFieldsTmp.length; i = i + 1) {\r\n\t\t\t\t\t\t\tif (aFormFieldsTmp[i].oControl === oControl) {\r\n\t\t\t\t\t\t\t\taFormFields.push(aFormFieldsTmp[i]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//service documents form\r\n\t\t\t\t\tif (/formServiceDocuments/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation documents\r\n\t\t\t\t\t\t\t\tcase \"ucServiceDocumentUploadCollection\":\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields = this.hasIncorrectCardinality(oFormField, this.getView().byId(\"cboxServiceDocumentTypes\"),\r\n\t\t\t\t\t\t\t\t\t\t\"DocumentType\", \"invalidInvalidDocuments\", \"Document types\");\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//service responsibilities form\r\n\t\t\t\t\tif (/formServiceResponsibilities/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t\t//table of organisation responsibilities\r\n\t\t\t\t\t\t\t\tcase \"tabServiceResponsibilities\":\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields = this.hasIncorrectCardinality(oFormField, this.getView().byId(\"cboxServicePersonRoles\"),\r\n\t\t\t\t\t\t\t\t\t\t\"RoleID\", \"invalidInvalidResponsibilities\", \"Roles\");\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//service parameters form\r\n\t\t\t\t\tif (/formServiceParameters/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t\t//array of service parameters\r\n\t\t\t\t\t\tvar aServiceParameters = this.getView().byId(\"tabServiceParameters\").getItems();\r\n\r\n\t\t\t\t\t\t//for each service parameter\r\n\t\t\t\t\t\taServiceParameters.forEach(function(item) {\r\n\r\n\t\t\t\t\t\t\t//reset value state of parameter value input controlis ite\r\n\t\t\t\t\t\t\titem.getAggregation(\"cells\")[1].setValueState(sap.ui.core.ValueState.None);\r\n\r\n\t\t\t\t\t\t\t//get service parameter instance\r\n\t\t\t\t\t\t\tvar sParameterTypeID = item.getAggregation(\"cells\")[0].getText();\r\n\t\t\t\t\t\t\tswitch (sParameterTypeID) {\r\n\r\n\t\t\t\t\t\t\t\t//service parameter of type business partner ID\r\n\t\t\t\t\t\t\t\tcase \"Business Partner ID\":\r\n\r\n\t\t\t\t\t\t\t\t\t//check business partner ID is valid\r\n\t\t\t\t\t\t\t\t\tif (!this.isValidBusinessPartnerID(item.getAggregation(\"cells\")[1].getValue())) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t//return business partner as control holding invalid value\r\n\t\t\t\t\t\t\t\t\t\tvar oParameterInput = item.getAggregation(\"cells\")[1];\r\n\t\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oParameterInput);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//inform user that an invalid business partner number was entered\r\n\t\t\t\t\t\t\t\t\t\toParameterInput.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\t\toParameterInput.setValueStateText(this._oResourceBundle.getText(\"invalidBusinessPartnerIDEntry\"));\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//default\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t);\r\n\r\n\t\t\t//return controls with invalid input\r\n\t\t\treturn aInvalidFormFields;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Service\r\n\t\t */\r\n\t\tonCBoxServiceDocumentTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable upload collection upload when no document type selected\r\n\t\t\tvar oCBoxServiceDocumentTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxServiceDocumentTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"ucServiceDocumentUploadCollection\").setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable upload collection upload when document type selected\r\n\t\t\tthis.getView().byId(\"ucServiceDocumentUploadCollection\").setUploadEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//set table of responsibilities to 'busy'\r\n\t\tsetBusyTableResponsibilities: function() {\r\n\t\t\tthis._oViewModel.setProperty(\"busyTableResponsibilities\", true);\r\n\t\t},\r\n\r\n\t\t//set table of responsibilities to 'not busy'\r\n\t\tsetNotBusyTableResponsibilities: function() {\r\n\t\t\tthis._oViewModel.setProperty(\"busyTableResponsibilities\", false);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add responsibility for this service\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressAddResponsibilityButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxRoles = this.getView().byId(\"cboxServicePersonRoles\");\r\n\r\n\t\t\t//get service entity in current state\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//role needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxRoles.getSelectedKey()) {\r\n\r\n\t\t\t\t//set role selection combobox value state and text\r\n\t\t\t\toCBoxRoles.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxRoles.setValueStateText(\"Select a role for adding a responsibility\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//special handling for service that is not yet validated\r\n\t\t\tif (!oService.isValidated && oCBoxRoles.getSelectedKey() === \"05\") {\r\n\r\n\t\t\t\t//at service create only 1 transacting person is allowed\r\n\t\t\t\tif (this.countListEntries(this.getView().byId(\"tabServiceResponsibilities\"), \"RoleID\", \"05\") > 0) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOnlyOneTransactingPersonAtTimeOfCreate\"), sap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to create new or select existing person where applicable\r\n\t\t\tvar oPersonSelectPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.person.PersonSelectPopover\", this);\r\n\t\t\toPersonSelectPopover.attachAfterClose(function() {\r\n\t\t\t\toPersonSelectPopover.destroy();\r\n\t\t\t});\r\n\t\t\tthis.getView().addDependent(oPersonSelectPopover);\r\n\r\n\t\t\t//attach list itemPress event\r\n\t\t\tsap.ui.getCore().byId(\"tabPersonSelectPopover\").attachEventOnce(\"itemPress\", {}, this.onPressPersonSelectDialogListItem, this);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tvar oLabelPersonRole = this.getView().byId(\"labelPersonRole\");\r\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\r\n\t\t\t\toPersonSelectPopover.openBy(oLabelPersonRole);\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Service\r\n\t\t * Event handler for 'Press' on ResponsibilityList\r\n\t\t */\r\n\t\tonPressServiceResponsibilityListItem: function(oEvent) {\r\n\r\n\t\t\t//prepare object path to be passed on to target\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sPersonID = oContext.getProperty(\"PersonID\");\r\n\r\n\t\t\t//get ID of service the person update is invoked from\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get OData model path to responsible person\r\n\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\tPersonID: sPersonID\r\n\t\t\t});\r\n\r\n\t\t\t//get responsible Person in current state\r\n\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//for drafts navigate to Person create without changing hash\r\n\t\t\tswitch (oPerson.EntityStatusID) {\r\n\r\n\t\t\t\t//for person drafts navigate to person create without changing hash\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\tPersonID: oPerson.PersonID,\r\n\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//for people in other statuses navigate to person without changing hash\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\t\t\tPersonID: sPersonID,\r\n\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//delete service responsibility\r\n\t\tonPressServiceResponsibilityDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to responsibility for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get responsibility attributes\r\n\t\t\tvar oResponsibility = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete role \" + this.formatRoleID(oResponsibility.RoleID) + \" of \" + this.formatPersonID(oResponsibility.PersonID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this organisation\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//handle person search during responsibilility create\r\n\t\tonPressPersonSelectDialogSearch: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oFilter = null;\r\n\r\n\t\t\t//Get filter value provided in search field\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t//Create filter for this query\r\n\t\t\toFilter = new sap.ui.model.Filter(\"PersonID\", sap.ui.model.FilterOperator.Contains, sQuery);\r\n\r\n\t\t\t//Apply filter to list binding\r\n\t\t\tvar oBinding = sap.ui.getCore().byId(\"tabPersonSelectPopover\").getBinding(\"items\");\r\n\t\t\toBinding.filter([oFilter]);\r\n\r\n\t\t},\r\n\r\n\t\t//create responsibility using the selected person\r\n\t\tonPressPersonSelectDialogListItem: function(oEvent) {\r\n\r\n\t\t\t//close popover\r\n\t\t\tsap.ui.getCore().byId(\"popPersonSelect\").close();\r\n\r\n\t\t\t//get pressed listitem\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\r\n\r\n\t\t\t//create responsibility set entry\r\n\t\t\tthis._oODataModel.createEntry(\"ResponsibilitySet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tResponsibilityID: this.getUUID(),\r\n\t\t\t\t\tOrganisationID: this._oODataModel.getProperty(\"OrganisationID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tPersonID: oListItem.getBindingContext(\"Registration\").getProperty(\"PersonID\"),\r\n\t\t\t\t\tServiceID: this.getView().getBindingContext(\"Registration\").getProperty(\"ServiceID\"),\r\n\t\t\t\t\tRoleID: this.getView().byId(\"cboxServicePersonRoles\").getSelectedKey()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct responsibility key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//submit organisation to ensure associated entities can be related\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndService\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t//add person from person select dialog\r\n\t\tonPressPersonSelectDialogAddPersonButton: function() {\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//get service in current status\r\n\t\t\tvar oService = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//pending changes to be submitted before navigation\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\r\n\t\t\t\t//prepare view for change submission\r\n\t\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\t\t//submit ODATA model changes to backend\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully updated changes to the backend\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//navigate to Person create without changing hash\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\t\t\tRoleID: this.getView().byId(\"cboxServicePersonRoles\").getSelectedKey(),\r\n\t\t\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//no pending changes to submit, navigate to person create wizard straight away \r\n\t\t\t} else {\r\n\r\n\t\t\t\t//navigate to Person create without changing hash\r\n\t\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\t\tServiceIDOrigin: oService.ServiceID,\r\n\t\t\t\t\tRoleID: this.getView().byId(\"cboxServicePersonRoles\").getSelectedKey(),\r\n\t\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\t\tfromTarget: sViewName\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler combobox role selection change\r\n\t\tonCBoxServicePersonRoleChange: function(oEvent) {\r\n\r\n\t\t\t//reset value state and text\r\n\t\t\tthis.getView().byId(\"cboxServicePersonRoles\").setValueState(sap.ui.core.ValueState.None);\r\n\t\t\tthis.getView().byId(\"cboxServicePersonRoles\").setValueStateText(\"\");\r\n\r\n\t\t\t//disable responsibility add button if no role type selected\r\n\t\t\tvar cboxPersonRoles = oEvent.getSource();\r\n\t\t\tif (cboxPersonRoles.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnServiceResponsibilityAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of responsibility\r\n\t\t\tthis.getView().byId(\"btnServiceResponsibilityAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Service\r\n\t\t */\r\n\t\tonPressServiceSaveButton: function(oEvent) {\r\n\r\n\t\t\t//get service in current status\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//construct array for form input to check\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\")\r\n\t\t\t];\r\n\r\n\t\t\t//add responsibility form where organisation involved\r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\taForms.push(this.getView().byId(\"formServiceResponsibilities\"));\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput(aForms)) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: no unsaved changes where applicable\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoUnsavedModelChanges\"), sap.ui.core.MessageType.Success);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//submit changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//update success handler\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//visualize person entity status\r\n\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"updateModelChangeSuccessful\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Service\r\n\t\t */\r\n\t\tonPressServiceSubmitButton: function(oEvent) {\r\n\r\n\t\t\t//get service in current status\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//construct array for form input to check\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\")\r\n\t\t\t];\r\n\r\n\t\t\t//add responsibility form where organisation involved\r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\taForms.push(this.getView().byId(\"formServiceResponsibilities\"));\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput(aForms)) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//validate related organisation and responsibities for submit\r\n\t\t\tif (oService.OrganisationID) {\r\n\r\n\t\t\t\t//get responsible people with unsuitable entity status\r\n\t\t\t\tvar aPerson = this.hasResponsibilitiesNotReadyForSubmit(this.getView().byId(\"tabServiceResponsibilities\"));\r\n\r\n\t\t\t\t//message handling: found responsible people with unsuitable entity status\r\n\t\t\t\tif (aPerson.length > 0) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageResponsibilitiesNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\t\taPerson[0].Name + \" \" + aPerson[0].Surname),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//get organisation in current status\r\n\t\t\t\tvar sOrganisationPath = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\r\n\t\t\t\t\tOrganisationID: oService.OrganisationID\r\n\t\t\t\t});\r\n\t\t\t\tvar oOrganisation = this._oODataModel.getProperty(sOrganisationPath);\r\n\r\n\t\t\t\t//validate organisation status for submit\r\n\t\t\t\tif (oOrganisation.EntityStatusID !== \"1\" && oOrganisation.EntityStatusID !== \"2\" && oOrganisation.EntityStatusID !== \"6\") {\r\n\r\n\t\t\t\t\t//message handling: organisation not ready for submit\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOrganisationNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\t\toOrganisation.Name),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate related supplier for submit\r\n\t\t\tif (oService.SupplierID) {\r\n\r\n\t\t\t\t//get supplier in current status\r\n\t\t\t\tvar sSupplierPath = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\r\n\t\t\t\t\tSupplierID: oService.SupplierID\r\n\t\t\t\t});\r\n\t\t\t\tvar oSupplier = this._oODataModel.getProperty(sSupplierPath);\r\n\r\n\t\t\t\t//validate supplier status for submit\r\n\t\t\t\tif (oSupplier.EntityStatusID !== \"1\" && oSupplier.EntityStatusID !== \"2\" && oSupplier.EntityStatusID !== \"6\") {\r\n\r\n\t\t\t\t\t//message handling: supplier not ready for submit\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSupplierNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\t\toSupplier.TradingAsName),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate related person for submit\r\n\t\t\tif (oService.PersonID) {\r\n\r\n\t\t\t\t//get supplier in current status\r\n\t\t\t\tvar sPersonPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\r\n\t\t\t\t\tPersonID: oService.PersonID\r\n\t\t\t\t});\r\n\t\t\t\tvar oPerson = this._oODataModel.getProperty(sPersonPath);\r\n\r\n\t\t\t\t//validate supplier status for submit\r\n\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\" && oPerson.EntityStatusID !== \"6\") {\r\n\r\n\t\t\t\t\t//message handling: person not ready for submit\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonNotReadyForSubmit\").replace(/&1/g,\r\n\t\t\t\t\t\t\toPerson.Name + \" \" + oPerson.Surname),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Warning);\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//confirmation dialog to submit\r\n\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitChanges\"), {\r\n\r\n\t\t\t\t\t//confirmation dialog actions\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t//on confirmation dialog close\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t\t//set view to busy\r\n\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t\t\t\t\t//set last action and entity status as submitted\r\n\t\t\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"1\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"1\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t\t\t\t\t//submit changes made to model content\r\n\t\t\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t//visualize service entity status and confirm submission\r\n\t\t\t\t\t\t\t\t\tthis.promiseToVisualizeEntityStatus().then(function(oEntity) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t//re-read person entity set to reflect updated entity status\r\n\t\t\t\t\t\t\t\t\t\tthis._oODataModel.read(\"/PersonSet\", {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t//success handler: refresh responsibility list display\r\n\t\t\t\t\t\t\t\t\t\t\tsuccess: function() {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getView().byId(\"tabServiceResponsibilities\").getBinding(\"items\").refresh(true);\r\n\t\t\t\t\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmittedSuccessfully\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//disable view to await review workflow feedback\r\n\t\t\t\t\t\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//dialog to confirm submission\r\n\t\t\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, false);\r\n\r\n\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\t//handling service title click\r\n\t\tonPressServiceTitle: function() {\r\n\r\n\t\t\t//open another tab to access this eService offering\r\n\t\t\tsap.m.URLHelper.redirect(\"http://www.capetown.gov.za\", true); //ToDo\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing check button to verify user input\r\n\t\tonPressServiceCheckInputButton: function() {\r\n\r\n\t\t\t//get service in current status\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//construct array for form input to enable\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\")\r\n\t\t\t];\r\n\r\n\t\t\t//add responsibility form where organisation involved\r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\taForms.push(this.getView().byId(\"formServiceResponsibilities\"));\r\n\t\t\t}\r\n\r\n\t\t\t//check user input\r\n\t\t\tvar oIncorrectInput = this.hasIncorrectInput(aForms, null); //No specific control\r\n\r\n\t\t\t//message handling: user input checked with errors\r\n\t\t\tif (oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: user input checked with no finding\r\n\t\t\tif (!oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedNoFindings\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Success);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//set submit button enabled state\r\n\t\tsetSubmitButtonEnabledState: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar bBtnSubmitEntityEnabled = false;\r\n\t\t\tvar sBtnSaveEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\tvar sBtnSubmitEntityType = sap.m.ButtonType.Transparent;\r\n\r\n\t\t\t//save button transparent where no changes present\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tsBtnSaveEntityType = sap.m.ButtonType.Transparent;\r\n\t\t\t}\r\n\r\n\t\t\t//get view binding context\r\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get entity in its current state\r\n\t\t\tif (oContext) {\r\n\t\t\t\tvar oService = this._oODataModel.getObject(oContext.getPath());\r\n\t\t\t}\r\n\r\n\t\t\t//construct array for form input to enable\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formServiceResponsibilities\")\r\n\t\t\t];\r\n\r\n\t\t\t//reduce array to forms that exist in this view\r\n\t\t\taForms = aForms.filter(function(oForm) {\r\n\t\t\t\tif (oForm) {\r\n\t\t\t\t\treturn oForm;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//enable submit button for valid form input on draft, revised or ready entity\r\n\t\t\tif (oService &&\r\n\t\t\t\t(oService.EntityStatusID === \"0\" ||\r\n\t\t\t\t\toService.EntityStatusID === \"4\" ||\r\n\t\t\t\t\toService.EntityStatusID === \"6\") &&\r\n\t\t\t\t!this._oODataModel.hasPendingChanges() &&\r\n\t\t\t\tthis.isValid(aForms)) {\r\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\t\tbBtnSubmitEntityEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t//enable submit button for rejected organisation service \r\n\t\t\tif (oService && oService.EntityStatusID === \"3\" && oService.OrganisationID &&\r\n\t\t\t\t!this._oODataModel.hasPendingChanges() &&\r\n\t\t\t\tthis.isValid(aForms)) {\r\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\t\tbBtnSubmitEntityEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t//enable submit button for rejected person service \r\n\t\t\tif (oService && oService.EntityStatusID === \"3\" && oService.PersonID &&\r\n\t\t\t\t!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\t\tbBtnSubmitEntityEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t//set submit button enabled state and type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", bBtnSubmitEntityEnabled);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sBtnSubmitEntityType);\r\n\r\n\t\t\t//set save button type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sBtnSaveEntityType);\r\n\r\n\t\t},\r\n\r\n\t\t//set view controls enabled\r\n\t\tsetViewControlsEnabled: function(bEnabled) {\r\n\r\n\t\t\t//construct array for form input to enable\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formServiceAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formServiceResponsibilities\"),\r\n\t\t\t\tthis.getView().byId(\"formServiceDocuments\"),\r\n\t\t\t\tthis.getView().byId(\"formServiceParameters\")\r\n\t\t\t];\r\n\r\n\t\t\t//reduce array to forms that exist in this view\r\n\t\t\taForms = aForms.filter(function(oForm) {\r\n\t\t\t\tif (oForm) {\r\n\t\t\t\t\treturn oForm;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//switch service view input controls enabled state\r\n\t\t\tthis.setFormInputControlsEnabled(aForms, bEnabled);\r\n\r\n\t\t\t//switch service view action controls enabled state\r\n\t\t\tthis.setFormActionControlsEnabled(aForms, bEnabled);\r\n\r\n\t\t\t//switch view action controls enabled state\r\n\t\t\tthis.setViewActionControlsEnabled(bEnabled);\r\n\r\n\t\t},\r\n\r\n\t\t//press on message popover link to set focus\r\n\t\tonPressMessagePopoverItemLink: function(oEvent) {\r\n\r\n\t\t\t//get icon tabbar and wizard holding forms\r\n\t\t\tvar oIconTabBar = this.getView().byId(\"itabService\");\r\n\t\t\tvar oWizServiceCreate = this.getView().byId(\"wizServiceCreate\");\r\n\r\n\t\t\t//where icon tabbar present\r\n\t\t\tif (oIconTabBar) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formServicePersonData\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Person\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceSupplierData\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Supplier\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceOrganisationData\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Organisation\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceAttributes\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Attributes\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceResponsibilities\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Roles\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//where service create wizard is present\r\n\t\t\tif (oWizServiceCreate) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formServicePersonData\":\r\n\t\t\t\t\t\toWizServiceCreate.goToStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceOrganisationData\":\r\n\t\t\t\t\t\toWizServiceCreate.goToStep(this.getView().byId(\"wizstepSupplierOrganisationSelect\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceSupplierData\":\r\n\t\t\t\t\t\toWizServiceCreate.goToStep(this.getView().byId(\"wizstepServiceSupplierSelect\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formServiceResponsibilities\":\r\n\t\t\t\t\t\toWizServiceCreate.goToStep(this.getView().byId(\"wizstepServiceResponsibilities\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//press on navigate to organisation link\r\n\t\tonPressNavigateToOrganisationLink: function() {\r\n\r\n\t\t\t//get service in current state\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display organisation without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Organisation\", {\r\n\t\t\t\tOrganisationID: oService.OrganisationID,\r\n\t\t\t\ttoTarget: \"Organisation\",\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//press on navigate to supplier link\r\n\t\tonPressNavigateToSupplierLink: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sTargetView;\r\n\r\n\t\t\t//get service in current state\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//supplier person\r\n\t\t\tif (oService.PersonID) {\r\n\t\t\t\tsTargetView = \"SupplierPerson\";\r\n\t\t\t}\r\n\r\n\t\t\t//supplier organisation\r\n\t\t\tif (oService.OrganisationID) {\r\n\t\t\t\tsTargetView = \"SupplierOrganisation\";\r\n\t\t\t}\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate to supplier view without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(sTargetView, {\r\n\t\t\t\tSupplierID: oService.SupplierID,\r\n\t\t\t\ttoTarget: sTargetView,\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//press on navigate to person link\r\n\t\tonPressNavigateToPersonLink: function() {\r\n\r\n\t\t\t//get service in current state\r\n\t\t\tvar oService = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display person without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\tPersonID: oService.PersonID,\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//handle support menu item press\r\n\t\tonPressSupportMenuItem: function(oEvent) {\r\n\r\n\t\t\t//get selected menu item\r\n\t\t\tvar oSupportMenuItem = oEvent.getParameter(\"item\");\r\n\r\n\t\t\t//refresh service data from ERP backend\r\n\t\t\tif (/mitemSupportRefreshService/.test(oSupportMenuItem.getId())) {\r\n\t\t\t\tthis.refreshEntityDataFromERP(\"Service\", \"toPerson,toOrganisation,toSupplier,toDocuments,toResponsibilities\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierCreateForOrganisation.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/supplier/SupplierCreate.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(SupplierCreateController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierCreateController.extend(\"capetown.gov.registration.controller.supplier.SupplierCreateForOrganisation\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into target display event to prepare view for display\r\n\t\t\tthis.getRouter().getTarget(\"SupplierCreateForOrganisation\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tchkPersonDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkOrganisationDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oSupplierWizard = this.getView().byId(\"wizSupplierCreate\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() { \r\n\t\t\t\t\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierCreateForPerson.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/supplier/SupplierCreate.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(SupplierCreateController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierCreateController.extend(\"capetown.gov.registration.controller.supplier.SupplierCreateForPerson\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"SupplierCreateForPerson\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tchkPersonDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkOrganisationDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oSupplierWizard = this.getView().byId(\"wizSupplierCreate\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() { \r\n\t\t\t\t\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierPerson.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/Base.controller\",\r\n\t\"capetown/gov/registration/controller/supplier/Supplier.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, SupplierController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierController.extend(\"capetown.gov.registration.controller.supplier.SupplierPerson\", {\r\n\r\n\t\t//one-time initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//attach to display event for navigation without hash change \r\n\t\t\tthis.getRouter().getTarget(\"SupplierPerson\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() {\r\n\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t\t}, this);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierList.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/supplier/Supplier.controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(SupplierController, JSONModel, Filter, FilterOperator) {\n\t\"use strict\";\n\t\n\t/**\n\t * Supplier list Controller\n\t * @description Controller for supplier list\n\t * @module SupplierList\n\t * @augments module:Supplier\n\t */\n\treturn SupplierController.extend(\"capetown.gov.registration.controller.supplier.SupplierList\", {\n\n\t\t//Initializatin of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"SupplierList\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tbtnSupplierListRefreshVisible: false,\n\t\t\t\ttableNoDataText: \"No data\",\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(this._oViewModel, \"viewModel\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\t\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//trigger refresh of list\n\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\n\t\t * Event handler for 'Press' on PersonList\n\t\t */\n\t\tonPressSupplierListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar oSupplier = oContext.getObject();\n\n\t\t\t//Navigate to the supplier person details view \n\t\t\tif (oSupplier.PersonID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierPerson\", {\n\t\t\t\t\tmode: \"update\",\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Navigate to the supplier organisation details view \n\t\t\tif (oSupplier.OrganisationID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierOrganisation\", {\n\t\t\t\t\tmode: \"update\",\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t//on quick filter search\n\t\tonSupplierSearch: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sQuery;\n\n\t\t\t//get search query for list filtering\n\t\t\tswitch (oEvent.sId) {\n\t\t\t\tcase \"liveChange\":\n\t\t\t\t\tvar oSearchField = oEvent.getSource();\n\t\t\t\t\tsQuery = oSearchField.getValue();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsQuery = oEvent.getParameter(\"query\");\n\t\t\t}\n\n\t\t\t//build array of filters for searching suppliers\n\t\t\tvar aFilters = [new sap.ui.model.Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toPerson/Name\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toPerson/Surname\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toOrganisation/Name\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"TradingAsName\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toOrganisation/CompanyRegNbr\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toPerson/BusinessPartnerID\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toOrganisation/BusinessPartnerID\",\n\t\t\t\t\t\t\t\toperator: \"Contains\",\n\t\t\t\t\t\t\t\tvalue1: sQuery\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"toOrganisation/LegalEntityType\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sLegalEntityTypeText = this.formatLegalEntityType(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sLegalEntityTypeText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\ttest: function(sValue) {\n\t\t\t\t\t\t\t\t\tvar oRegExp = new RegExp(sQuery, \"i\"); //case insensitive search\n\t\t\t\t\t\t\t\t\tvar sEntityStatusText = this.formatEntityStatusID(sValue);\n\t\t\t\t\t\t\t\t\tif (oRegExp.test(sEntityStatusText)) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})];\n\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (this.getView().byId(\"tabSupplierList\").getBinding(\"items\").filter(aFilters).getLength() !== 0) {\n\t\t\t\tthis._oViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"listNoDataWithQuickFilterSearch\"));\n\t\t\t}\n\n\t\t},\n\n\t\t//delete supplier\n\t\tonPressSupplierDeleteButton: function(oEvent) {\n\n\t\t\t//get context pointing to supplier for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\t\t\t\n\t\t\t//get supplier attributes\n\t\t\tvar oSupplier = this._oODataModel.getObject(oContext.getPath());\n\t\t\t\n\t\t\t//check supplier is not in submitted status\n\t\t\tif(oSupplier.EntityStatusID === \"1\"){\n\t\t\t\t\n\t\t\t\t//message handling: no delete for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedSupplierEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t//check whether this supplier is still related\n\t\t\tif (this.isRelated(oContext)) {\n\n\t\t\t\t//message handling: no delated for related entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSupplierRelatedEntity\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this supplier\n\t\t\tsap.m.MessageBox.confirm(\"Delete supplier trading as \" + oSupplier.TradingAsName + \"?\", {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete service from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//service entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//message handling\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete supplier entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\n\t\t */\n\t\tonPressSupplierAddButton: function(oEvent) {\n\n\t\t\t//create supplier scope popover\n\t\t\tvar oSupplierScopePopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.supplier.SupplierScopePopover\", this);\n\t\t\toSupplierScopePopover.attachAfterClose(function() {\n\t\t\t\toSupplierScopePopover.destroy();\n\t\t\t});\n\t\t\tthis.getView().addDependent(oSupplierScopePopover);\n\n\t\t\t// delay because addDependent will do a async rerendering \n\t\t\tvar oButton = oEvent.getSource();\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\toSupplierScopePopover.openBy(oButton);\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\n\t\t */\n\t\tonPressSupplierPersonAddButton: function() {\n\n\t\t\t//check whether this person is already a supplier\n\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t\t\t})\n\t\t\t\t).getLength() > 0) {\n\n\t\t\t\t//message handling: person is already a supplier\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageYouAlreadyHaveASupplierAccount\"), sap.ui.core.MessageType.Warning);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//Navigate to supplier person create wizard \n\t\t\tthis.getRouter().navTo(\"SupplierPersonCreate\", {\n\t\t\t\tPersonID: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.SupplierList\n\t\t */\n\t\tonPressSupplierOrganisationAddButton: function() {\n\n\t\t\t//Navigate to supplier organisation create wizard \n\t\t\tthis.getRouter().navTo(\"SupplierOrganisationCreate\", {});\n\n\t\t},\n\t\t\n\t\t//sort entity list in alternating order\n\t\tonPressSupplierListSort: function() {\n\n\t\t\t//default sort direction\n\t\t\tif (this.bListSortDescending === undefined) {\n\t\t\t\tthis.bListSortDescending = true;\n\t\t\t}\n\n\t\t\t//toggle list sort direction\n\t\t\tthis.bListSortDescending = !this.bListSortDescending;\n\n\t\t\t//sort entity list in opposite direction\n\t\t\tthis.byId(\"tabSupplierList\").getBinding(\"items\").sort([new sap.ui.model.Sorter(\"TradingAsName\", this.bListSortDescending)]);\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/supplier/SupplierCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/supplier/Supplier.controller\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(SupplierController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Supplier Create Controller\r\n\t * @description Controller for supplier create\r\n\t * @module SupplierCreate\r\n\t * @augments module:Supplier\r\n\t */\r\n\treturn SupplierController.extend(\"capetown.gov.registration.controller.supplier.SupplierCreate\", {\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oSupplier;\r\n\r\n\t\t\t//get arguments provided for navigation into this route\r\n\t\t\tvar oNavData = oEvent.getParameter(\"data\") || oEvent.getParameter(\"arguments\");\r\n\r\n\t\t\t//no further action where returning from navigation without hash change\r\n\t\t\tif (oNavData && oNavData.returningFrom) {\r\n\r\n\t\t\t\t//get supplier in current state\r\n\t\t\t\toSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//processing when returning from organisation create\r\n\t\t\t\tif (oNavData.returningFrom === \"OrganisationCreate\") {\r\n\r\n\t\t\t\t\t//proceed after organisation create\r\n\t\t\t\t\tif (oSupplier.OrganisationID) {\r\n\r\n\t\t\t\t\t\t//get related organisation in current state\r\n\t\t\t\t\t\tvar oOrganisation = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\t\tOrganisationID: oSupplier.OrganisationID\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t//flag organisation data accuracy indicator\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationSelected\", true);\r\n\r\n\t\t\t\t\t\t//filter organisation list by organisation of this service\r\n\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").refresh();\r\n\t\t\t\t\t\tthis.getView().byId(\"tabOrganisationList\").getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oSupplier.OrganisationID\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t//get organisation selection wizard step reference\r\n\t\t\t\t\t\tvar oOrganisationSelectWizStep = this.getView().byId(\"wizstepSupplierOrganisationSelect\");\r\n\r\n\t\t\t\t\t\t//terminate wizard where selected organisation is already a supplier\r\n\t\t\t\t\t\tif (oOrganisation.isAdopted && oOrganisation.isSupplier) {\r\n\t\t\t\t\t\t\tthis._oSupplierWizard.validateStep(oOrganisationSelectWizStep);\r\n\r\n\t\t\t\t\t\t\t//set next wizard step if selected organisation is not yet a supplier\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._oSupplierWizard.validateStep(oOrganisationSelectWizStep);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//adopt navigation data\r\n\t\t\tthis._oNavData = oNavData;\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", []);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkPersonDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/chkOrganisationDataAccuracyDeclarationSelected\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextSubmit\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleCreateSupplier\"));\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//set UI texts suitable for context of supplier create\r\n\t\t\tif (this._oNavData.ServiceIDOrigin) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/wizFinishButtonText\", this._oResourceBundle.getText(\"wizFinishButtonTextContinue\"));\r\n\t\t\t}\r\n\r\n\t\t\t//discard all progress in this wizard\r\n\t\t\tvar oStep = this._oSupplierWizard.getSteps()[0];\r\n\t\t\tthis._oSupplierWizard.discardProgress(oStep);\r\n\t\t\toStep.setValidated(false);\r\n\r\n\t\t\t//get binding context from new supplier entry\r\n\t\t\tif (!this._oNavData.SupplierID) {\r\n\r\n\t\t\t\t//create new supplier set entry\r\n\t\t\t\tvar oSupplierContext = this._oODataModel.createEntry(\"SupplierSet\", {\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tSupplierID: this.getUUID(),\r\n\t\t\t\t\t\tPersonID: this._oNavData.PersonID,\r\n\t\t\t\t\t\tOrganisationID: this._oNavData.OrganisationID,\r\n\t\t\t\t\t\tServiceIDOrigin: this._oNavData.ServiceIDOrigin,\r\n\t\t\t\t\t\tisCommunitySupplier: false,\r\n\t\t\t\t\t\tEntityStatusID: \"T\",\r\n\t\t\t\t\t\tLastActionID: \"T\",\r\n\t\t\t\t\t\tLastActionTimeStamp: new Date(),\r\n\t\t\t\t\t\tisAdministered: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//create new BEE classification set entry\r\n\t\t\t\tvar oBEEClassificationContext = this._oODataModel.createEntry(\"BEEClassificationSet\", {\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tBEEClassificationID: this.getUUID(),\r\n\t\t\t\t\t\tSupplierID: oSupplierContext.getProperty(\"SupplierID\")\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//set binding context for this view\r\n\t\t\t\tthis.getView().setBindingContext(oSupplierContext, \"Registration\");\r\n\r\n\t\t\t\t//bind BEE classification attributes as two way updates over navigational attribute is not supported\r\n\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\").setBindingContext(oBEEClassificationContext, \"Registration\");\r\n\r\n\t\t\t\t//submit changes to this point\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//successfully submitted changes\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t//failed to submit changes\r\n\t\t\t\t\terror: function() {\r\n\r\n\t\t\t\t\t\t//terminate user action\r\n\t\t\t\t\t\tthis.terminateUserAction();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//get binding context from resumed supplier entry\t\t\t\t\r\n\t\t\tif (this._oNavData.SupplierID) {\r\n\r\n\t\t\t\t//Create object path for an existing OData model instance\r\n\t\t\t\tvar sSupplierKey = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\r\n\t\t\t\t\tSupplierID: this._oNavData.SupplierID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\t\tthis._oODataModel.createBindingContext(sSupplierKey, null, {\r\n\t\t\t\t\texpand: \"toPerson,toOrganisation,toBEEClassification,toDocuments,toContacts,toBankAccounts,toAddresses,toCertificates\"\r\n\t\t\t\t}, function(oSupplierContext) {\r\n\r\n\t\t\t\t\t//set new binding context\r\n\t\t\t\t\tthis.getView().setBindingContext(oSupplierContext, \"Registration\");\r\n\r\n\t\t\t\t\t//adopt ServiceID origin where provided in navigation\r\n\t\t\t\t\tif (this._oNavData.ServiceIDOrigin) {\r\n\t\t\t\t\t\tthis._oODataModel.setProperty(\"ServiceIDOrigin\", this._oNavData.ServiceIDOrigin, oSupplierContext);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//bind BEE classification attributes as two way updates over navigational attribute is not supported\r\n\t\t\t\t\tvar oBEEClassification = this._oODataModel.getObject(oSupplierContext.getPath() + \"/toBEEClassification\");\r\n\t\t\t\t\tvar sBEEClassificationKey = \"/\" + this.getModel(\"Registration\").createKey(\"BEEClassificationSet\", {\r\n\t\t\t\t\t\tBEEClassificationID: oBEEClassification.BEEClassificationID\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\").bindElement({\r\n\t\t\t\t\t\tpath: sBEEClassificationKey,\r\n\t\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//get supplier in current state\r\n\t\t\t\t\toSupplier = oSupplierContext.getObject();\r\n\r\n\t\t\t\t\t//prepare document input control view model\r\n\t\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t\t\t\t//make available the array of selected industry keys\r\n\t\t\t\t\tif (oSupplier.IndustryKeys.length > 0) {\r\n\t\t\t\t\t\tvar aIndustryKeys = oSupplier.IndustryKeys.split(\",\");\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", aIndustryKeys);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//check whether Supplier attributes are valid\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierAttributes\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate addresses step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierAddresses\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAddresses\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate documents step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierDocuments\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate BEE classification step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierBEEClassification\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierBEEClassification\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate contacts step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierContacts\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierContacts\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate bank account step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierBankAccounts\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierBankAccounts\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate certificates step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierCertificates\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierCertificates\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate or invalidate declarations step depending whether form entry is correct\r\n\t\t\t\t\tif (this.isValid([this.getView().byId(\"formSupplierDeclarations\")])) {\r\n\t\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDeclarations\"));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//view is no longer busy\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for Supplier Person attributes liveChange event\r\n\t\tonSupplierAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//for change stemming from subcouncil attribute\r\n\t\t\tif (/cboxSubCouncil/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//filter ward by selected subcouncil\r\n\t\t\t\tthis.getView().byId(\"cboxWard\").getBinding(\r\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"WardID\",\r\n\t\t\t\t\toperator: \"StartsWith\",\r\n\t\t\t\t\tvalue1: this.getView().byId(\"cboxSubCouncil\").getSelectedKey() + \"/\"\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t//remove current ward to force new selection\r\n\t\t\t\tthis.getView().byId(\"cboxWard\").setSelectedItem(null);\r\n\r\n\t\t\t\t//set ward form element to visible\r\n\t\t\t\tthis.getView().byId(\"felemWard\").setVisible(false);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//for change stemming from 'is community supplier' attribute\r\n\t\t\tif (/switchIsCommunitySupplier/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//not a community supplier, set ui control attributes so they are not declared missing input\r\n\t\t\t\tif (!this.getView().byId(\"switchIsCommunitySupplier\").getState()) {\r\n\t\t\t\t\tthis.getView().byId(\"labelSubCouncil\").setRequired(false);\r\n\t\t\t\t\tthis.getView().byId(\"cboxSubCouncil\").setSelectedItem(null);\r\n\t\t\t\t\tthis.getView().byId(\"felemWard\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"cboxWard\").setSelectedItem(null);\r\n\r\n\t\t\t\t\t//is community supplier, set subcouncil to required\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getView().byId(\"labelSubCouncil\").setRequired(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate where BEE classification is in supplier attributes step\r\n\t\t\tif (!this.getView().byId(\"wizstepSupplierBEEClassification\")) {\r\n\r\n\t\t\t\t//validate supplier attributes and BEE classification are valid\r\n\t\t\t\tif (!this.hasIncorrectInput(\r\n\t\t\t\t\t\t[this.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\")\r\n\t\t\t\t\t\t], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//message handling: maintain BEE attributes to proceed to next step\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierAttributes\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageMaintainBEEAttributesToProceed\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate step where BEE classification is in sepearte wizard step\r\n\t\t\tif (this.getView().byId(\"wizstepSupplierBEEClassification\")) {\r\n\r\n\t\t\t\t//check whether supplier attributes are valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierAttributes\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for Supplier \r\n\t\tonSupplierDocumentUploadComplete: function(oEvent) {\r\n\r\n\t\t\t//reset supplier document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxSupplierDocumentTypes = this.getView().byId(\"cboxSupplierDocumentTypes\");\r\n\t\t\toCBoxSupplierDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxSupplierDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//validate or invalidate step depending whether form entry is correct\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierDocuments\")])) {\r\n\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of Supplier document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//reset supplier document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxSupplierDocumentTypes = this.getView().byId(\"cboxSupplierDocumentTypes\");\r\n\t\t\toCBoxSupplierDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxSupplierDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//validate or invalidate step depending whether form entry is correct\r\n\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierDocuments\")])) {\r\n\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t} else {\r\n\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for selecting an organisation for supplier create\r\n\t\tonPressOrganisationListItem: function(oEvent) {\r\n\r\n\t\t\t//retrieve ID of selected organisation\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sOrganisationID = oContext.getProperty(\"OrganisationID\");\r\n\r\n\t\t\t//check whether this organisation is already a supplier\r\n\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"OrganisationID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: sOrganisationID\r\n\t\t\t\t\t})\r\n\t\t\t\t).getLength() > 0) {\r\n\r\n\t\t\t\t//message handling: organisation is already a supplier\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageOrganisationAlreadyHasASupplierAccount\"), sap.ui.core.MessageType.Warning);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//set organisation ID to OData model supplier instance\r\n\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/OrganisationID\", sOrganisationID);\r\n\r\n\t\t\t//amend view title to include selected organisation\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add supplier for \" + this.formatOrganisationID(sOrganisationID));\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for selecting an Supplier for Supplier create\r\n\t\tonPressSupplierListItem: function(oEvent) {\r\n\r\n\t\t\t//retrieve ID of selected Supplier\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\r\n\t\t\tvar sSupplierID = oContext.getProperty(\"SupplierID\");\r\n\r\n\t\t\t//set Supplier ID to OData model Supplier instance\r\n\t\t\tthis._oODataModel.setProperty(this.getView().getBindingContext(\"Registration\").getPath() + \"/SupplierID\", sSupplierID);\r\n\r\n\t\t\t//amend view title to include selected Supplier\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", \"Add supplier for \" + this.formatSupplierID(sSupplierID));\r\n\r\n\t\t\t//validate step to move to next\r\n\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierSupplierSelect\"));\r\n\r\n\t\t},\r\n\r\n\t\t//on BEE classification attributes live change\r\n\t\tonBEEClassificationAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aForms = [];\r\n\r\n\t\t\t//reset form input upon BEE classification type change\r\n\t\t\tif (/cboxBEEClassificationType/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//reset form input to prepare for entry of new values\r\n\t\t\t\tthis.resetFormInput(this.getView().byId(\"formSupplierBEEClassification\"), oEvent.getSource());\r\n\r\n\t\t\t\t//set attribute visibility by BEE classification type to prepare incorrect input check\r\n\t\t\t\tthis.setBEEClassificationAttributesVisibility(oEvent.getSource().getSelectedKey());\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//reset related form fields upon BEE verifier type change\r\n\t\t\tif (/cboxBEEVerifierType/.test(oEvent.getSource().getId())) {\r\n\t\t\t\tthis.getView().byId(\"inputBEEVerifierRegistrationNbr\").setValue(\"\");\r\n\t\t\t\tthis.getView().byId(\"inputBEEVerifierName\").setValue(\"\");\r\n\t\t\t}\r\n\r\n\t\t\t//flag BEE certificate expiry date as invalid where applicable\r\n\t\t\tif (/inputBEEClassifExpiryDate/.test(oEvent.getSource().getId())) {\r\n\t\t\t\toEvent.getSource().hasInvalidEntry = false;\r\n\t\t\t\tvar bDateIsValid = oEvent.getParameters().valid;\r\n\t\t\t\tif (!bDateIsValid) {\r\n\t\t\t\t\toEvent.getSource().hasInvalidEntry = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//validate where BEE classification is in supplier attributes step\r\n\t\t\tif (!this.getView().byId(\"wizstepSupplierBEEClassification\")) {\r\n\r\n\t\t\t\t//set forms to be validated\r\n\t\t\t\taForms = [this.getView().byId(\"formSupplierBEEClassification\"), this.getView().byId(\"formSupplierAttributes\")];\r\n\r\n\t\t\t\t//check whether supplier attributes and BEE classification attributes are valid\r\n\t\t\t\tif (!this.hasIncorrectInput(aForms, oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate step where BEE classification is in separate wizard step\r\n\t\t\tif (this.getView().byId(\"wizstepSupplierBEEClassification\")) {\r\n\r\n\t\t\t\t//set forms to be validated\r\n\t\t\t\taForms = [this.getView().byId(\"formSupplierBEEClassification\")];\r\n\r\n\t\t\t\t//check whether BEE classification attributes are valid\r\n\t\t\t\tif (!this.hasIncorrectInput(aForms, oEvent.getSource()) && this.isValid(aForms)) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierBEEClassification\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierBEEClassification\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier addresses\r\n\t\tonUpdateFinishedTableSupplierAddresses: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oSupplierWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether supplier addresses are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierAddresses\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierAddresses\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierAddresses\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier contacts\r\n\t\tonUpdateFinishedTableSupplierContacts: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oSupplierWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether Supplier contacts are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierContacts\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierContacts\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierContacts\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier bank accounts\r\n\t\tonUpdateFinishedTableSupplierBankAccounts: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oSupplierWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether supplier bank accounts are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierBankAccounts\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierBankAccounts\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierBankAccounts\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier certificates\r\n\t\tonUpdateFinishedTableSupplierCertificates: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oSupplierWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether Supplier certificates are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierCertificates\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierCertificates\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierCertificates\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier declarations\r\n\t\tonUpdateFinishedTableSupplierDeclarations: function(oEvent) {\r\n\r\n\t\t\t//conditionally depending on Wizard progress\r\n\t\t\tif (this._oSupplierWizard.getProgress() > 1) {\r\n\r\n\t\t\t\t//check whether Supplier declarations are now valid\r\n\t\t\t\tif (!this.hasIncorrectInput([this.getView().byId(\"formSupplierDeclarations\")], oEvent.getSource())) {\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDeclarations\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDeclarations\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for wizard submit button press\r\n\t\tonPressSupplierWizardSubmitButton: function() {\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput([\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//model data has pending changes\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\r\n\t\t\t\t//submit changed attributes to backend\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//on changes submitted successfully\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//confirm and submit supplier\r\n\t\t\t\t\t\tthis.confirmAndSubmitSupplier();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//model data has no pending changes\t\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//confirm and submit supplier\r\n\t\t\t\tthis.confirmAndSubmitSupplier();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.SupplierCreate\r\n\t\t */\r\n\t\tonPressPersonSelectDialogAddPersonButton: function() {\r\n\r\n\t\t\t//save Supplier draft before proceeding\r\n\t\t\tthis.onPressSupplierCreateSaveDraftButton();\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate to Supplier create without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"PersonCreate\", {\r\n\t\t\t\ttoTarget: \"PersonCreate\",\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing person data update button\t\t\r\n\t\tonPressPersonUpdateDetailsButton: function() {\r\n\r\n\t\t\t//hide prompting message strip\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//get supplier in current state\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display person without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Person\", {\r\n\t\t\t\tPersonID: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\"),\r\n\t\t\t\tSupplierIDOrigin: oSupplier.SupplierID,\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\ttoTarget: \"Person\"\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing organisation add button\r\n\t\tonPressOrganisationAddButton: function() {\r\n\r\n\t\t\t//save service draft before proceeding\r\n\t\t\tthis.onPressSupplierCreateSaveDraftButton(true);\r\n\r\n\t\t\t//get service instance in its current state\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get current view name\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//navigate to organisation create without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"OrganisationCreate\", {\r\n\t\t\t\tSupplierIDOrigin: oSupplier.SupplierID,\r\n\t\t\t\ttoTarget: \"OrganisationCreate\",\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing organisation data update button\t\t\r\n\t\tonPressOrganisationUpdateDetailsButton: function() {\r\n\r\n\t\t\t//save supplier draft before proceeding\r\n\t\t\tthis.onPressSupplierCreateSaveDraftButton(false);\r\n\r\n\t\t\t//get supplier in current state\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display organisation without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Organisation\", {\r\n\t\t\t\tOrganisationID: this.getView().getBindingContext(\"Registration\").getProperty(\"OrganisationID\"),\r\n\t\t\t\tSupplierIDOrigin: oSupplier.SupplierID,\r\n\t\t\t\ttoTarget: \"Organisation\",\r\n\t\t\t\tfromTarget: sViewName\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing Supplier data update button\t\t\r\n\t\tonPressSupplierUpdateDetailsButton: function() {\r\n\r\n\t\t\t//save Supplier draft before proceeding\r\n\t\t\tthis.onPressSupplierCreateSaveDraftButton();\r\n\r\n\t\t\t//get view name as it is the target as per manifest that navigation needs to return to\r\n\t\t\tvar aViewNameParts = this.getView().sViewName.split(\".\");\r\n\t\t\tvar sViewName = aViewNameParts[aViewNameParts.length - 1];\r\n\r\n\t\t\t//display Supplier without changing hash\r\n\t\t\tthis.getRouter().getTargets().display(\"Supplier\", {\r\n\t\t\t\tSupplierID: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\"),\r\n\t\t\t\tfromTarget: sViewName,\r\n\t\t\t\ttoTarget: \"Supplier\"\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming person data accuracy declaration\t\t\r\n\t\tonSelectPersonDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//verify that person has suitable status\r\n\t\t\t\t\tvar oPerson = this._oODataModel.getObject(\"/\" + this._oODataModel.createKey(\"PersonSet\", {\r\n\t\t\t\t\t\tPersonID: this.getView().getBindingContext(\"Registration\").getProperty(\"PersonID\")\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t//message handling: person status not suitable\r\n\t\t\t\t\tif (oPerson.EntityStatusID !== \"1\" && oPerson.EntityStatusID !== \"2\" && oPerson.EntityStatusID !== \"6\") {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messagePersonProfileNeedsUpdating\"), sap.ui.core.MessageType.Error);\r\n\t\t\t\t\t\toCheckBox.setSelected(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepPersonDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming organisation data accuracy declaration\t\t\r\n\t\tonSelectOrganisationDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierOrganisationSelect\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierOrganisationSelect\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on selecting check box confirming Supplier data accuracy declaration\t\t\r\n\t\tonSelectSupplierDataAccuracyDeclarationCheckBox: function(oEvent) {\r\n\r\n\t\t\t//get declaration accept checkbox control\r\n\t\t\tvar oCheckBox = oEvent.getSource();\r\n\r\n\t\t\t//depending on state of declaration accept checkbox\r\n\t\t\tswitch (oCheckBox.getSelected()) {\r\n\r\n\t\t\t\t//checkbox flagged\r\n\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t//validate step to move to next\r\n\t\t\t\t\tthis._oSupplierWizard.validateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//checkbox not flagged\r\n\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t//invalidate step if input is no longer valid\r\n\t\t\t\t\tthis._oSupplierWizard.invalidateStep(this.getView().byId(\"wizstepSupplierDataAccuracyDeclaration\"));\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//save person create draft\t\t\r\n\t\tonPressSupplierCreateSaveDraftButton: function(bForceTradingName) {\r\n\r\n\t\t\t//get supplier object\r\n\t\t\tvar oSupplier = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t//enforce supplier trading as name to save draft where requested\r\n\t\t\tif (!oSupplier.TradingAsName && bForceTradingName === true) {\r\n\r\n\t\t\t\t//message handling: specify at least trading as name\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSpecifyTradingAsNameToSaveDraft\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t//post processing after successful updating in the backend\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\t//get selected industry keys\r\n\t\t\tvar sIndustryKeys = \"\";\r\n\t\t\tvar mCBoxSupplierIndustries = this.getView().byId(\"mCBoxSupplierIndustries\");\r\n\t\t\tvar aIndustryKeys = mCBoxSupplierIndustries.getSelectedKeys();\r\n\t\t\taIndustryKeys.forEach(function(sIndustryID) {\r\n\t\t\t\tif (sIndustryKeys !== \"\") {\r\n\t\t\t\t\tsIndustryKeys = sIndustryKeys + \",\" + sIndustryID;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsIndustryKeys = sIndustryID;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//adopt (possibly) changed industry keys into supplier entity\r\n\t\t\tthis._oODataModel.setProperty(\"IndustryKeys\", sIndustryKeys, this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t//set last action and entity status as draft\r\n\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionID\", \"0\", this.getView().getBindingContext(\"Registration\"));\r\n\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t//set supplier ID on origination service entity where applicable\r\n\t\t\tif (oSupplier.ServiceIDOrigin) {\r\n\t\t\t\tvar sPropertyPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\tServiceID: oSupplier.ServiceIDOrigin\r\n\t\t\t\t}) + \"/SupplierID\";\r\n\t\t\t\tthis._oODataModel.setProperty(sPropertyPath, oSupplier.SupplierID);\r\n\t\t\t}\r\n\r\n\t\t\t//submit all changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//on changes submitted succesfully\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling: draft saved successfully\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageDraftSaved\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//refresh list of suppliers in the context of supplier creation\r\n\t\tonPressSupplierListRefreshButton: function() {\r\n\r\n\t\t\t//hide message strip that might point to refreshing list\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//trigger refresh of Supplier list\r\n\t\t\tthis.getView().byId(\"tabSupplierList\").getBinding(\"items\").refresh();\r\n\r\n\t\t},\r\n\r\n\t\t//confirm and submit supplier\r\n\t\tconfirmAndSubmitSupplier: function() {\r\n\r\n\t\t\t//Local data declaration\r\n\t\t\tvar sTargetStatus;\r\n\t\t\tvar sStatusAction;\r\n\r\n\t\t\t//get current supplier entity \r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//submit without confirmation dialog where in service creation\r\n\t\t\tif (oSupplier.ServiceIDOrigin) {\r\n\r\n\t\t\t\t//set appropriate status target and action\r\n\t\t\t\tsTargetStatus = \"6\"; //Submitted\r\n\t\t\t\tsStatusAction = \"6\"; //Submit for approval\r\n\r\n\t\t\t\t//submit supplier\r\n\t\t\t\tthis.submitSupplier(sTargetStatus, sStatusAction);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//submit with confirmation dialog\r\n\t\t\tif (!oSupplier.ServiceIDOrigin) {\r\n\r\n\t\t\t\t//confirmation dialog to submit\r\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitRegistration\"), {\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t//on confirmation dialog close\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t\t//set appropriate status target and action\r\n\t\t\t\t\t\t\tsTargetStatus = \"6\"; //Submitted\r\n\t\t\t\t\t\t\tsStatusAction = \"6\"; //Submit for approval\r\n\r\n\t\t\t\t\t\t\t//submit supplier\r\n\t\t\t\t\t\t\tthis.submitSupplier(sTargetStatus, sStatusAction);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//submit supplier\r\n\t\tsubmitSupplier: function(sTargetStatus, sStatusAction) {\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//backend validate person before submission\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateSupplier\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"SupplierID\": this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\"),\r\n\t\t\t\t\t\"CRUDActionID\": \"Create\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//person attributes found to be valid\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//set entity messages\r\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\r\n\r\n\t\t\t\t\t\t//set validation error strip message\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//get selected industry keys\r\n\t\t\t\t\tvar sIndustryKeys = \"\";\r\n\t\t\t\t\tvar mCBoxSupplierIndustries = this.getView().byId(\"mCBoxSupplierIndustries\");\r\n\t\t\t\t\tvar aIndustryKeys = mCBoxSupplierIndustries.getSelectedKeys();\r\n\t\t\t\t\taIndustryKeys.forEach(function(sIndustryID) {\r\n\t\t\t\t\t\tif (sIndustryKeys !== \"\") {\r\n\t\t\t\t\t\t\tsIndustryKeys = sIndustryKeys + \",\" + sIndustryID;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsIndustryKeys = sIndustryID;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//adopt (possibly) changed industry keys into supplier entity\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"IndustryKeys\", sIndustryKeys, this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t\t\t//set last action and entity status as submitted\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\r\n\t\t\t\t\t\t\"Registration\"));\r\n\r\n\t\t\t\t\t//set supplier ID on origination service entity where applicable\r\n\t\t\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\t\t\t\t\tif (oSupplier.ServiceIDOrigin) {\r\n\t\t\t\t\t\tvar sPropertyPath = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\r\n\t\t\t\t\t\t\tServiceID: oSupplier.ServiceIDOrigin\r\n\t\t\t\t\t\t}) + \"/SupplierID\";\r\n\t\t\t\t\t\tthis._oODataModel.setProperty(sPropertyPath, oSupplier.SupplierID);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//submit all changes made to model content\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\r\n\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t//returning from navigation withou hash change\r\n\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierOrganisation.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/Base.controller\",\r\n\t\"capetown/gov/registration/controller/supplier/Supplier.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, SupplierController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierController.extend(\"capetown.gov.registration.controller.supplier.SupplierOrganisation\", {\r\n\r\n\t\t//one-time initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//attach to display event for navigation without hash change \r\n\t\t\tthis.getRouter().getTarget(\"SupplierOrganisation\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() { \r\n\t\t\t\t\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/Base.controller.js": "/*global history */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\",\n\t\"capetown/gov/registration/util/uuid\"\n], function(Controller, History, uuid) {\n\t\"use strict\";\n\n\t/**\n\t * Base Controller\n\t * @description Prototype of most other controllers\n\t * @module Base\n\t */\n\treturn Controller.extend(\"capetown.gov.registration.controller.Base\", {\n\n\t\t//on initialization\n\t\tinitialize: function() {\n\n\t\t\t//Initialize instance variables\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t\tthis._oMessageStrip = this.byId(\"msMessageStrip\");\n\t\t\tif (this._oMessageStrip) {\n\t\t\t\tthis._oMessageStrip.setVisible(false);\n\t\t\t}\n\n\t\t\t//set models: OData model\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel(\"Registration\");\n\t\t\tsap.ui.getCore().setModel(this._oODataModel, \"Registration\");\n\t\t\tthis.setModel(this._oODataModel, \"Registration\");\n\t\t\tthis._oODataModel.setSizeLimit(500);\n\n\t\t\t//set resource model \n\t\t\tthis._oI18nModel = this.getOwnerComponent().getModel(\"i18n\");\n\t\t\tthis.setModel(this._oI18nModel, \"i18n\");\n\n\t\t\t//initiate interaction with message manager\t\n\t\t\tthis._oMessageProcessor = new sap.ui.core.message.ControlMessageProcessor();\n\t\t\tthis._oMessageManager = sap.ui.getCore().getMessageManager();\n\t\t\tthis._oMessageManager.registerMessageProcessor(this._oMessageProcessor);\n\n\t\t},\n\n\t\t//set deferred and change groups\n\t\tsetDeferredChangeGroups: function() {\n\n\t\t\t//set deferred groupId for update of ODATA entities \n\t\t\tvar aDeferredGroups = this._oODataModel.getDeferredGroups();\n\t\t\tif (aDeferredGroups.indexOf(\"deferredChanges\") < 0) {\n\t\t\t\taDeferredGroups.push(\"deferredChanges\");\n\t\t\t\tthis._oODataModel.setDeferredGroups(aDeferredGroups);\n\t\t\t}\n\n\t\t\t//set group ID for changes made through two way binding\n\t\t\tthis._oODataModel.setChangeGroups({\n\t\t\t\t\"Service\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"ServiceParameter\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Supplier\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Person\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"BEEClassification\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Organisation\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"BankAccount\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Address\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Certificate\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Contact\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Responsibility\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Declaration\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t},\n\t\t\t\t\"Document\": {\n\t\t\t\t\tgroupId: \"deferredChanges\",\n\t\t\t\t\tsingle: false\n\t\t\t\t}\n\t\t\t});\n\n\t\t},\n\n\t\t//prepare message popover for display\n\t\tprepareMessagePopoverForDisplay: function() {\n\n\t\t\t//construct popover for message display\n\t\t\tvar oMessagePopover = new sap.m.MessagePopover({\n\n\t\t\t\t//messages in item aggregation\n\t\t\t\titems: {\n\t\t\t\t\tpath: \"message>/\",\n\t\t\t\t\ttemplate: new sap.m.MessagePopoverItem({\n\t\t\t\t\t\ttype: \"{message>type}\",\n\t\t\t\t\t\ttitle: \"{message>message}\",\n\t\t\t\t\t\tdescription: \"{message>description}\",\n\t\t\t\t\t\tlink: new sap.m.Link({\n\t\t\t\t\t\t\ttext: \"Navigate\",\n\t\t\t\t\t\t\ttarget: \"{message>code}\",\n\t\t\t\t\t\t\tpress: this.onPressMessagePopoverItemLink.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t},\n\n\t\t\t\t//destroy after close\n\t\t\t\tafterClose: function() {\n\t\t\t\t\toMessagePopover.destroy();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//connect message model to message popover\n\t\t\toMessagePopover.setModel(this._oMessageManager.getMessageModel(), \"message\");\n\n\t\t\t//feedback to caller\n\t\t\treturn oMessagePopover;\n\n\t\t},\n\n\t\t/**\n\t\t * Messages button press event handler\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\tonMessagesButtonPress: function(oEvent) {\n\n\t\t\t//initialize variables\n\t\t\tvar oMessagesButton = oEvent.getSource();\n\n\t\t\t//prepare message popover for display\n\t\t\tvar oMessagePopover = this.prepareMessagePopoverForDisplay();\n\n\t\t\t//toggle message popover display\n\t\t\toMessagePopover.toggle(oMessagesButton);\n\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t * @public\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function(sRoute) {\n\n\t\t\t//get previous hash\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\t//navigate to previous hash where available\n\t\t\tif (sPreviousHash !== undefined) {\n\n\t\t\t\t//Use browser history to go navigate back\n\t\t\t\thistory.go(-1);\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise navigate along route and write history\n\t\t\t\tthis.getRouter().navTo(sRoute, {}, true);\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Gets a UUID as a unique ID for UI managed objects at runtime\n\t\t * @public\n\t\t */\n\t\tgetID: function() {\n\n\t\t\t/*return version1 UUID prefixed and converted to string so\n\t\t\tthat it is type compliant with sap.ui.core.ID*/\n\t\t\treturn \"ID-\" + window.uuid.v1().toString();\n\n\t\t},\n\n\t\t/**\n\t\t * Gets a UUID as a unique ID at runtime formatted\n\t\t * in such way that it is acceptable as SAP GUID\n\t\t * @public\n\t\t */\n\t\tgetGUID: function() {\n\n\t\t\t/*return version1 UUID, removing formatting hyphens, \n\t\t\tconverting to upper case to match a SAP GUID*/\n\t\t\treturn window.uuid.v1().replace(/-/g, \"\").toUpperCase();\n\n\t\t},\n\n\t\t/**\n\t\t * Gets a UUID as a unique ID at runtime formatted\n\t\t * in such way that it is acceptable as SAP GUID\n\t\t * @public\n\t\t */\n\t\tgetUUID: function() {\n\n\t\t\t/*return version1 UUID, removing formatting hyphens, \n\t\t\tconverting to upper case to match a SAP GUID*/\n\t\t\treturn window.uuid.v1().replace(/-/g, \"\").toUpperCase();\n\n\t\t},\n\n\t\t/**\n\t\t * @function getFormInputFields\n\t\t * @description Gets form input fields in a given form\n\t\t * @param {sap.ui.layout.form} oForm the form in the view.\n\t\t * @public\n\t\t */\n\t\tgetFormInputFields: function(oForm) {\n\n\t\t\t//local data declaration\n\t\t\tvar aInputControl = [];\n\n\t\t\t//get all visible fields in this form\n\t\t\tvar aControls = this.getFormFields(oForm, false);\n\n\t\t\t//reduce all form fields to input\n\t\t\taControls.forEach(function(item) {\n\n\t\t\t\t//get reference to this UI control\n\t\t\t\tvar oControl = item.oControl;\n\t\t\t\tvar sControlType = oControl.getMetadata().getName();\n\n\t\t\t\t//for controls allowing input\n\t\t\t\tif (sControlType === \"sap.m.Input\" ||\n\t\t\t\t\tsControlType === \"sap.m.Switch\" ||\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\" ||\n\t\t\t\t\tsControlType === \"sap.m.ComboBox\" ||\n\t\t\t\t\tsControlType === \"sap.m.RadioButton\" ||\n\t\t\t\t\tsControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\tsControlType === \"sap.m.RadioButtonGroup\" ||\n\t\t\t\t\tsControlType === \"sap.m.UploadCollection\" ||\n\t\t\t\t\tsControlType === \"sap.ui.unified.FileUploader\" ||\n\t\t\t\t\tsControlType === \"sap.m.MultiComboBox\" ||\n\t\t\t\t\tsControlType === \"sap.m.DatePicker\" ||\n\t\t\t\t\tsControlType === \"sap.m.Table\" ||\n\t\t\t\t\tsControlType === \"sap.m.List\") {\n\n\t\t\t\t\t//keep track of this control as input control\n\t\t\t\t\taInputControl.push(item);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//feedback to caller\n\t\t\treturn aInputControl;\n\n\t\t},\n\n\t\t/**\n\t\t * Gets form action fields in a given form\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\n\t\t * @public\n\t\t */\n\t\tgetFormActionFields: function(oForm) {\n\n\t\t\t//local data declaration\n\t\t\tvar aActionControl = [];\n\n\t\t\t//get all fields in this form\n\t\t\tvar aControls = this.getFormFields(oForm);\n\n\t\t\t//reduce all form fields to take action\n\t\t\taControls.forEach(function(item) {\n\n\t\t\t\t//get reference to this UI control\n\t\t\t\tvar oControl = item.oControl;\n\t\t\t\tvar sControlType = oControl.getMetadata().getName();\n\n\t\t\t\t//for controls allowing to take action\n\t\t\t\tif (sControlType === \"sap.m.Button\") {\n\n\t\t\t\t\t//keep track of this control as input control\n\t\t\t\t\taActionControl.push(item);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//feedback to caller\n\t\t\treturn aActionControl;\n\n\t\t},\n\n\t\t/**\n\t\t * @function getFormFields\n\t\t * @description Reuse method to get form fields in a given form\n\t\t * @param {sap.ui.layout.form} oForm the form in the view\n\t\t * @param {boolean} bInvisible Choose to include invisible form fields\n\t\t * @public\n\t\t */\n\t\tgetFormFields: function(oForm, bInvisible) {\n\n\t\t\t//Local data declaration\n\t\t\tvar aControls = [];\n\t\t\tvar aFormContainerElementFields = [];\n\n\t\t\t//get form ID for further reference\n\t\t\tvar sFormID = oForm.getId().match(/[^-]*$/)[0];\n\n\t\t\t//Get form containers contained in this form\n\t\t\tvar aFormContainers = oForm.getFormContainers();\n\n\t\t\t//for each form container\n\t\t\tfor (var i = 0; i < aFormContainers.length; i++) {\n\n\t\t\t\t//get form elements in this form container\n\t\t\t\tvar aFormElements = aFormContainers[i].getFormElements();\n\n\t\t\t\t//for each form element in this form container\n\t\t\t\tfor (var j = 0; j < aFormElements.length; j++) {\n\n\t\t\t\t\t//get form fields in this form element\n\t\t\t\t\tvar oFormElement = aFormElements[j];\n\t\t\t\t\tvar aFormFields = oFormElement.getFields();\n\t\t\t\t\tvar oFormLabel = oFormElement.getLabel();\n\n\t\t\t\t\t//include fields if form element is visible\n\t\t\t\t\tif (oFormElement.getVisible() || bInvisible) {\n\n\t\t\t\t\t\t//for each field in this form element\n\t\t\t\t\t\tfor (var n = 0; n < aFormFields.length; n++) {\n\n\t\t\t\t\t\t\t//include field that is visiblie\n\t\t\t\t\t\t\tif (aFormFields[n].getVisible() || bInvisible) {\n\n\t\t\t\t\t\t\t\t//composite field\n\t\t\t\t\t\t\t\tif (aFormFields[n].getMetadata().getName() === \"sap.m.HBox\") {\n\t\t\t\t\t\t\t\t\tvar aFlexBoxFormField = aFormFields[n].getItems();\n\t\t\t\t\t\t\t\t\taFlexBoxFormField.forEach(function(item) {\n\t\t\t\t\t\t\t\t\t\taFormContainerElementFields.push({\n\t\t\t\t\t\t\t\t\t\t\tsId: item.getId().match(/[^-]*$/)[0],\n\t\t\t\t\t\t\t\t\t\t\toControl: item,\n\t\t\t\t\t\t\t\t\t\t\toLabel: oFormLabel\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//simple fields\n\t\t\t\t\t\t\t\taFormContainerElementFields.push({\n\t\t\t\t\t\t\t\t\tsId: aFormFields[n].getId().match(/[^-]*$/)[0],\n\t\t\t\t\t\t\t\t\toControl: aFormFields[n],\n\t\t\t\t\t\t\t\t\toLabel: oFormLabel\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//build array of form field controls\n\t\t\tfor (i = 0; i < aFormContainerElementFields.length; i++) {\n\n\t\t\t\t//establish whether this form field requires input\n\t\t\t\tvar bIsRequired;\n\t\t\t\tif (aFormContainerElementFields[i].oLabel) {\n\t\t\t\t\tbIsRequired = aFormContainerElementFields[i].oLabel.getRequired();\n\t\t\t\t} else {\n\t\t\t\t\tbIsRequired = false;\n\t\t\t\t}\n\n\t\t\t\t//keep track of this form field\n\t\t\t\taControls.push({\n\t\t\t\t\tsId: aFormContainerElementFields[i].sId,\n\t\t\t\t\toControl: aFormContainerElementFields[i].oControl,\n\t\t\t\t\toLabel: aFormContainerElementFields[i].oLabel,\n\t\t\t\t\tbRequired: bIsRequired,\n\t\t\t\t\tsFormID: sFormID\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t//feedback to caller\n\t\t\treturn aControls;\n\n\t\t},\n\n\t\t//return all controls that miss required or carry invalid input\n\t\thasIncorrectInput: function(aForms, oControl) {\n\n\t\t\t//local data declaration\n\t\t\tvar sMessageDetails;\n\n\t\t\t//reset value state of input controls on validated form(s)\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//leaving to next iteration when form not bound\n\t\t\t\tif (!oForm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//for each form input field\n\t\t\t\tthis.getFormInputFields(oForm).forEach(function(item) {\n\n\t\t\t\t\t//reset value state for single value input controls\n\t\t\t\t\tif (item.oControl.getMetadata().getName() !== \"sap.m.List\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.Table\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.Switch\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.CheckBox\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.UploadCollection\") {\n\t\t\t\t\t\titem.oControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value state for list input controls\n\t\t\t\t\tif (item.oControl.getMetadata().getName() === \"sap.m.List\") {\n\n\t\t\t\t\t\t//in each list item reset value state for all single value input controls \n\t\t\t\t\t\titem.oControl.getItems().forEach(function(oListItem) {\n\t\t\t\t\t\t\toListItem.getAggregation(\"content\").forEach(function(oListItemControl) {\n\t\t\t\t\t\t\t\tif (oListItemControl.setValueState) {\n\t\t\t\t\t\t\t\t\toListItemControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t\t//remove all existing messages from the message manager where applicable\n\t\t\tif (!this._oMessageManager.containsLeadingMessage) {\n\t\t\t\tthis._oMessageManager.containsLeadingMessage = false;\n\t\t\t\tthis._oMessageManager.removeAllMessages();\n\t\t\t}\n\n\t\t\t//missing input on the requested forms\n\t\t\tvar aMissingInput = this.hasMissingInput(aForms, oControl);\n\n\t\t\t//missing input is present\n\t\t\tif (aMissingInput.length > 0) {\n\n\t\t\t\t//message handling: missing input\n\t\t\t\taMissingInput.forEach(function(oMissingInput) {\n\t\t\t\t\tif (oMissingInput.oLabel) {\n\t\t\t\t\t\tvar sMessage = oMissingInput.oLabel.getText() + \" is a required field\";\n\t\t\t\t\t\tthis._oMessageManager.addMessages(\n\t\t\t\t\t\t\tnew sap.ui.core.message.Message({\n\t\t\t\t\t\t\t\tmessage: sMessage,\n\t\t\t\t\t\t\t\tcode: oMissingInput.sFormID,\n\t\t\t\t\t\t\t\tdescription: \"Validation failed: Required input is missing\",\n\t\t\t\t\t\t\t\ttype: sap.ui.core.MessageType.Error,\n\t\t\t\t\t\t\t\tprocessor: this._oMessageProcessor\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t\t//invalid input on the requested forms\n\t\t\tvar aInvalidInput = this.hasInvalidInput(aForms, oControl);\n\n\t\t\t//invalid input is present\n\t\t\tif (aInvalidInput.length > 0) {\n\n\t\t\t\t//message handling: invalid input\n\t\t\t\taInvalidInput.forEach(function(oInvalidInput) {\n\t\t\t\t\tif (oInvalidInput.oLabel) {\n\t\t\t\t\t\tvar sMessage = oInvalidInput.oLabel.getText() + \" validation failed\";\n\t\t\t\t\t\tif (oInvalidInput.sInvalidInputMessage) {\n\t\t\t\t\t\t\tsMessageDetails = oInvalidInput.sInvalidInputMessage;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsMessageDetails = this._oResourceBundle.getText(\"invalidInputCorrectYourEntry\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._oMessageManager.addMessages(\n\t\t\t\t\t\t\tnew sap.ui.core.message.Message({\n\t\t\t\t\t\t\t\tmessage: sMessage,\n\t\t\t\t\t\t\t\tcode: oInvalidInput.sFormID,\n\t\t\t\t\t\t\t\tdescription: sMessageDetails,\n\t\t\t\t\t\t\t\ttype: sap.ui.core.MessageType.Error,\n\t\t\t\t\t\t\t\tprocessor: this._oMessageProcessor\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t\t//duplicate input on the requested forms compared to existing data\n\t\t\tvar aDuplicateInput = this.isDuplicateInput(aForms);\n\n\t\t\t//duplicate input is present\n\t\t\tif (aDuplicateInput.length > 0) {\n\n\t\t\t\t//message handling: duplicate input\n\t\t\t\taDuplicateInput.forEach(function(oDuplicateInput) {\n\t\t\t\t\tvar sMessage = this.getResourceBundle().getText(\"messageDuplicateEntry\");\n\t\t\t\t\tthis._oMessageManager.addMessages(\n\t\t\t\t\t\tnew sap.ui.core.message.Message({\n\t\t\t\t\t\t\tmessage: sMessage,\n\t\t\t\t\t\t\tcode: oDuplicateInput.sFormID,\n\t\t\t\t\t\t\tdescription: \"Validation failed: please correct your entry in the highlighted field(s)\",\n\t\t\t\t\t\t\ttype: sap.ui.core.MessageType.Error,\n\t\t\t\t\t\t\tprocessor: this._oMessageProcessor\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t\t//feedback to caller\n\t\t\tif (aMissingInput.length > 0 || aInvalidInput.length > 0 || aDuplicateInput.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\t\"missingInput\": aMissingInput,\n\t\t\t\t\t\"invalidInput\": aInvalidInput,\n\t\t\t\t\t\"duplicateInput\": aDuplicateInput\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Validates all required form input controls have input\n\t\t * @private\n\t\t */\n\t\thasMissingInput: function(aForms, oControl) {\n\n\t\t\t//local data declaration\n\t\t\tvar aFormFields = [];\n\t\t\tvar aMissingFormFields = [];\n\n\t\t\t//check required input available in this array of forms\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//leaving to next iteration when form not bound\n\t\t\t\tif (!oForm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//get form input controls\n\t\t\t\taFormFields = this.getFormInputFields(oForm);\n\n\t\t\t\t//check that all required fields have values\n\t\t\t\tfor (var m = 0; m < aFormFields.length; m++) {\n\n\t\t\t\t\t//get reference to this UI control\n\t\t\t\t\tvar oInputControl = aFormFields[m].oControl;\n\t\t\t\t\tvar sControlType = oInputControl.getMetadata().getName();\n\n\t\t\t\t\t//for controls allowing input\n\t\t\t\t\tif ((sControlType === \"sap.m.Input\" ||\n\t\t\t\t\t\t\tsControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\t\t\tsControlType === \"sap.ui.unified.FileUploader\" ||\n\t\t\t\t\t\t\tsControlType === \"sap.m.DatePicker\") &&\n\t\t\t\t\t\taFormFields[m].oControl.getVisible() &&\n\t\t\t\t\t\taFormFields[m].bRequired) {\n\n\t\t\t\t\t\t//get value to this input control\n\t\t\t\t\t\tvar sValue = oInputControl.getValue();\n\n\t\t\t\t\t\t//controls with required input to contain a non-white-space value\n\t\t\t\t\t\tif (!sValue || /^\\s+$/.test(sValue)) {\n\t\t\t\t\t\t\taMissingFormFields.push(aFormFields[m]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for controls allowing input\n\t\t\t\t\tif (sControlType === \"sap.m.CheckBox\" &&\n\t\t\t\t\t\taFormFields[m].oControl.getVisible() &&\n\t\t\t\t\t\taFormFields[m].bRequired) {\n\n\t\t\t\t\t\t//get selected state\n\t\t\t\t\t\tvar sValue = oInputControl.getSelected();\n\n\t\t\t\t\t\t//a checkbox will not be considered missing input if initial\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for controls allowing selection of a key value\n\t\t\t\t\tif ((sControlType === \"sap.m.ComboBox\" ||\n\t\t\t\t\t\t\tsControlType === \"sap.m.Select\") &&\n\t\t\t\t\t\taFormFields[m].oControl.getVisible() &&\n\t\t\t\t\t\taFormFields[m].bRequired) {\n\n\t\t\t\t\t\t//get value to this input control\n\t\t\t\t\t\tvar sKey = oInputControl.getSelectedKey();\n\n\t\t\t\t\t\t//controls with required required selected key\n\t\t\t\t\t\tif (!sKey || /^\\s+$/.test(sKey)) {\n\t\t\t\t\t\t\taMissingFormFields.push(aFormFields[m]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for controls allowing selection of multiple key values\n\t\t\t\t\tif (sControlType === \"sap.m.MultiComboBox\" &&\n\t\t\t\t\t\taFormFields[m].oControl.getVisible() &&\n\t\t\t\t\t\taFormFields[m].bRequired) {\n\n\t\t\t\t\t\t//get value to this input control\n\t\t\t\t\t\tvar aKeys = oInputControl.getSelectedKeys();\n\n\t\t\t\t\t\t//controls at least one required key selection\n\t\t\t\t\t\tif (!aKeys.length > 0) {\n\t\t\t\t\t\t\taMissingFormFields.push(aFormFields[m]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for control allowing list item entry\n\t\t\t\t\tif (sControlType === \"sap.m.List\" &&\n\t\t\t\t\t\taFormFields[m].oControl.getVisible() &&\n\t\t\t\t\t\taFormFields[m].bRequired) {\n\n\t\t\t\t\t\t//get value to this input control\n\t\t\t\t\t\tvar aItems = oInputControl.getItems();\n\n\t\t\t\t\t\t//list has to have at least one entry\n\t\t\t\t\t\tif (!aItems.length > 0) {\n\t\t\t\t\t\t\taMissingFormFields.push(aFormFields[m]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//set value state for all or only specified control\n\t\t\taMissingFormFields.forEach(function(oFormField) {\n\t\t\t\tif (!oControl || oControl === oFormField.oControl) {\n\t\t\t\t\tif (typeof oFormField.oControl.setValueState === \"function\") {\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof oFormField.oControl.setValueStateText === \"function\") {\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputRequiredFields\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t\t\t//return control with missing input\n\t\t\treturn aMissingFormFields;\n\n\t\t},\n\n\t\t//resetting form input fields\n\t\tresetFormInput: function(oForm, oFormField) {\n\n\t\t\t//get all formfields in this form\n\t\t\tvar aFormFields = this.getFormFields(oForm, true);\n\n\t\t\t//set initial value for all contained input controls\n\t\t\tfor (var m = 0; m < aFormFields.length; m++) {\n\n\t\t\t\t//where formfield not excluded from reset\n\t\t\t\tif (aFormFields[m].oControl !== oFormField) {\n\n\t\t\t\t\t//enable input controls\n\t\t\t\t\tvar sControlType = aFormFields[m].oControl.getMetadata().getName();\n\t\t\t\t\tif (sControlType === \"sap.m.Input\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.RadioButtonGroup\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.DatePicker\") {\n\t\t\t\t\t\taFormFields[m].oControl.setValue(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tif (sControlType === \"sap.m.ComboBox\") {\n\t\t\t\t\t\taFormFields[m].oControl.setSelectedKey(null);\n\t\t\t\t\t}\n\t\t\t\t\tif (sControlType === \"sap.m.CheckBox\") {\n\t\t\t\t\t\taFormFields[m].oControl.setSelected(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (sControlType === \"sap.m.ComboBox\") {\n\t\t\t\t\t\taFormFields[m].oControl.setSelectedKey(null);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//Factory function for upload collection item\n\t\tcreateUploadCollectionItem: function(sId, oContext) {\n\n\t\t\t//Create object path for document stream instance\n\t\t\tvar sDocumentStreamPath = this._oODataModel.sServiceUrl + \"/\" +\n\t\t\t\tthis.getModel(\"Registration\").createKey(\"DocumentStreamSet\", {\n\t\t\t\t\tDocumentID: oContext.getProperty(\"DocumentID\")\n\t\t\t\t});\n\n\t\t\t//for each entry in the 'toDocuments' document set collection\n\t\t\tvar oUploadCollectionItem = new sap.m.UploadCollectionItem(sId, {\n\t\t\t\tdocumentId: oContext.getProperty(\"DocumentID\"),\n\t\t\t\tfileName: this._oODataModel.getProperty(\"FileName\", oContext),\n\t\t\t\tmimeType: this._oODataModel.getProperty(\"MimeType\", oContext),\n\t\t\t\turl: sDocumentStreamPath + \"/$value\"\n\t\t\t});\n\n\t\t\t//set upload collection item attribute: document type\n\t\t\tvar oDocumentTypeAttribute = new sap.m.ObjectAttribute({\n\t\t\t\ttitle: \"Document type\",\n\t\t\t\ttext: this.formatDocumentTypeID(this._oODataModel.getProperty(\"DocumentType\", oContext))\n\t\t\t});\n\t\t\toUploadCollectionItem.insertAttribute(oDocumentTypeAttribute, 999);\n\n\t\t\t//set upload collection item attribute: file size\n\t\t\tvar oFileSizeAttribute = new sap.m.ObjectAttribute({\n\t\t\t\ttitle: \"File size\",\n\t\t\t\ttext: this.formatFileSizeAttribute(this._oODataModel.getProperty(\"FileSize\", oContext))\n\t\t\t});\n\t\t\toUploadCollectionItem.insertAttribute(oFileSizeAttribute, 999);\n\n\t\t\t//return upload collection item instance for rendering in UI\n\t\t\treturn oUploadCollectionItem;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.BaseController\n\t\t */\n\t\tonPressNavButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar bTransientEntity = false;\n\n\t\t\t//check whether view presents transient entity\n\t\t\tif (this.getView().getBindingContext(\"Registration\")) {\n\t\t\t\tvar oEntity = this.getView().getBindingContext(\"Registration\").getObject();\n\t\t\t\tif (oEntity && oEntity.EntityStatusID === \"T\") {\n\t\t\t\t\tbTransientEntity = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// user to confirm to leave without saving changes\n\t\t\tif (this._oODataModel.hasPendingChanges() || bTransientEntity) {\n\n\t\t\t\t//Confirmation dialog to leave without saving\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageLeaveWithoutSaving\"), {\n\t\t\t\t\ttitle: \"Confirm\",\n\t\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass(),\n\n\t\t\t\t\t//on close of confirmation dialog\n\t\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t\t//user chose to cancel \t\t\t\t\t\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.CANCEL) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//user chose to leave without saving\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\n\t\t\t\t\t\t\t//reset whatever changes have not been saved\n\t\t\t\t\t\t\tthis._oODataModel.resetChanges();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\n\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t//returning from navigation without hash change\n\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//forget navigation data\n\t\t\t\t\t\t\tdelete this._oNavData;\n\n\t\t\t\t\t\t\t//no further processing here\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//remove all messages from the message manager\n\t\t\t\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t\t\t\t//navigate back in history\n\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t}).bind(this)\n\n\t\t\t\t});\n\n\t\t\t\t//model contains no changes\n\t\t\t} else {\n\n\t\t\t\t//for entity in revised or ready state\n\t\t\t\tif (oEntity && (oEntity.EntityStatusID === \"4\" || oEntity.EntityStatusID === \"6\")) {\n\n\t\t\t\t\t//Confirmation dialog to leave without submitting\n\t\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageLeaveWithoutSubmitting\"), {\n\t\t\t\t\t\ttitle: \"Confirm\",\n\t\t\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass(),\n\n\t\t\t\t\t\t//on close of confirmation dialog\n\t\t\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t\t\t//user chose to cancel \t\t\t\t\t\n\t\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.CANCEL) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//user chose to leave without submitting\n\t\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\n\t\t\t\t\t\t\t\t//remove all messages from the message manager\n\t\t\t\t\t\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t\t\t//returning to view from which navigation occured\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//forget navigation data\n\t\t\t\t\t\t\t\t\tdelete this._oNavData;\n\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t//forward this call to the parent objects function\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}).bind(this)\n\n\t\t\t\t\t});\n\n\t\t\t\t\t//no further processing at this stage\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t//remove all messages from the message manager\n\t\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\n\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t//returning to view from which navigation occured\n\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t});\n\n\t\t\t\t\t//forget navigation data\n\t\t\t\t\tdelete this._oNavData;\n\n\t\t\t\t\t//return to caller where navigation was with matched route pattern\n\t\t\t\t} else {\n\n\t\t\t\t\t//forward this call to the parent objects function\n\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Base\n\t\t */\n\t\tonUploadFileTypeMismatch: function(oEvent) {\n\n\t\t\t//message handling for upload of file with unsupported type\n\t\t\tsap.m.MessageBox.information(this._oResourceBundle.getText(\"invalidFileTypeForUpload\"), {\n\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass()\n\t\t\t});\n\n\t\t},\n\n\t\t//maximum file name length exceeded on upload\n\t\tonUploadFileNameLengthExceed: function() {\n\n\t\t\t//message handling for upload of file with unsupported type\n\t\t\tsap.m.MessageBox.information(this._oResourceBundle.getText(\"filenNameLengthExceededForUpload\"), {\n\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass()\n\t\t\t});\n\n\t\t},\n\n\t\t//event handler for deletion of upload collection item\n\t\tonFileDeleted: function(oEvent) {\n\n\t\t\t//get upload collection item affected by deletion\n\t\t\tvar oUploadCollectionItem = oEvent.getParameter(\"item\");\n\n\t\t\t//remove persistent instance from server (this canNOT be done staged for submitChanges)\n\t\t\tthis._oODataModel.remove(oUploadCollectionItem.getBindingContext(\"Registration\").sPath, {\n\n\t\t\t\t//error handler callback function\n\t\t\t\terror: function(oError) {\n\n\t\t\t\t\t//inspect batchResponses for errors and visualize\n\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t\t//refresh Upload collection binding\n\t\t\toEvent.getSource().getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t//is valid ECC vendor number\n\t\tisValidVendorID: function(sVendorID) {\n\n\t\t\t//check vendor number contains only digits\n\t\t\tif (sVendorID && !/^\\d+$/.test(sVendorID)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid Business Partner number\n\t\tisValidBusinessPartnerID: function(sBusinessPartnerID) {\n\n\t\t\t//check business partner number contains only digits and is of right length\n\t\t\tif ((sBusinessPartnerID && !/^\\d+$/.test(sBusinessPartnerID)) ||\n\t\t\t\t(sBusinessPartnerID && sBusinessPartnerID.length !== 10)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid SA ID number\n\t\tisValidSAIDNumber: function(sSAIDNumber) {\n\n\t\t\t//check for leading or trailing whitespace\n\t\t\tvar sSAIDNumberTrimmed = sSAIDNumber.trim();\n\t\t\tif (sSAIDNumberTrimmed !== sSAIDNumber) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//check provided ID is syntactictically correct\n\t\t\tif (\n\t\t\t\t/(((\\d{2}((0[13578]|1[02])(0[1-9]|[12]\\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\\d|30)|02(0[1-9]|1\\d|2[0-8])))|([02468][048]|[13579][26])0229))(( |-)(\\d{4})( |-)(\\d{3})|(\\d{7}))$/\n\t\t\t\t.test(sSAIDNumber)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid Passport number\n\t\tisValidPassportNumber: function(sPassportNumber) {\n\n\t\t\t//check to ensure that passport number does not hold special characters\n\t\t\tif (!/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/.test(sPassportNumber)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid SA VAT registration number\n\t\tisValidVATRegistrationNumber: function(sSAVATNumber) {\n\n\t\t\t//check for valid SA VAT registration number \n\t\t\tif (/^[4][0-9]{9}$/.test(sSAVATNumber)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid CSD registration number\n\t\tisValidCSDRegistrationNumber: function(sCSDRegistrationNumber) {\n\n\t\t\t//check for valid CSD registration number \n\t\t\tif (/[A-Z]{4}\\d{7}$/.test(sCSDRegistrationNumber)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid phone number\n\t\tisValidPhoneNumber: function(sPhoneNumber) {\n\n\t\t\t//check for valid SA telephone number (mobile or landline)\n\t\t\tif (!/^((?:\\+27|27)|0)(\\d{2})-?(\\d{3})-?(\\d{4})$/.test(sPhoneNumber.replace(/[-()_+|:.\\/]/g, \"\"))) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid bank branch code\n\t\tisValidBankBranchCode: function(sBranchCode) {\n\n\t\t\t//check for valid bank branch code\n\t\t\tif (!/\\d{6}$/.test(sBranchCode)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid e-mail address\n\t\tisValidEMailAddress: function(sEMailAddress) {\n\n\t\t\t//check whether e-mail account entered is valid\n\t\t\tif (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(sEMailAddress)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid company registration number\n\t\tisValidCompanyRegistrationNumber: function(sCompanyRegistrationNumber) {\n\n\t\t\t//check for leading or trailing whitespace\n\t\t\tvar sCompanyRegistrationNumberTrimmed = sCompanyRegistrationNumber.trim();\n\t\t\tif (sCompanyRegistrationNumberTrimmed !== sCompanyRegistrationNumber) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t//is valid date\n\t\tisValidDate: function(sValue) {\n\n\t\t\t//check whether entered value is a date\n\t\t\tif (!sValue) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Validates all required form fields have input and input is valid\n\t\t * Returns first invalid input control where applicable\n\t\t * @private\n\t\t */\n\t\tisValid: function(aForms) {\n\n\t\t\t//check for missing input\n\t\t\tif (this.hasMissingInput(aForms).length > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//check for invalid input\n\t\t\tif (this.hasInvalidInput(aForms).length > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//check for error messages\n\t\t\tif (this.hasErrorMessages()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//input is valid\n\t\t\treturn true;\n\n\t\t},\n\n\t\t/**\n\t\t * Validates view input\n\t\t * @private\n\t\t */\n\t\thasInvalidInput: function(aForms, oControl) {\n\n\t\t\t//to be implemented in extension controller derived from base controller\n\t\t\treturn [];\n\n\t\t},\n\n\t\t//counts entries with the requested type in a typed list \n\t\tcountListEntries: function(oTypedList, sTypeIDKey, sTypeIDValue) {\n\n\t\t\t//local data declaration\n\t\t\tvar iMatchCount = 0;\n\n\t\t\t//get list items\n\t\t\tvar aListItems = oTypedList.getItems();\n\n\t\t\t//for each entry in OData list binding\n\t\t\taListItems.forEach(function(oListItem) {\n\n\t\t\t\t//check whether type of this entry matches\n\t\t\t\tif (this._oODataModel.getProperty(oListItem.getBindingContext(\"Registration\").getPath() +\n\t\t\t\t\t\t\"/\" + sTypeIDKey) === sTypeIDValue) {\n\t\t\t\t\tiMatchCount++;\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//Feedback to caller\n\t\t\treturn iMatchCount;\n\n\t\t},\n\n\t\t//establish whether another entry is allowable from an input cardinality point of view\n\t\tisCardinalityOfNextEntryAllowable: function(oTypedList, oTypesCBox, sTypeKey, sModelName, oModel) {\n\n\t\t\t//local data declaration\n\t\t\tvar iMatchCount = 0;\n\n\t\t\t//default model name where applicable\n\t\t\tif (!oModel) {\n\t\t\t\toModel = this._oODataModel;\n\t\t\t}\n\n\t\t\t//default model name where applicable\n\t\t\tif (!sModelName) {\n\t\t\t\tsModelName = \"Registration\";\n\t\t\t}\n\n\t\t\t//get list items\n\t\t\tvar aListItems = oTypedList.getItems();\n\n\t\t\t//reset value state of type combobox\n\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.None);\n\n\t\t\t//ensure that an entry is selected in the Type Combo Box\n\t\t\tif (!oTypesCBox.getSelectedItem()) {\n\t\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\toTypesCBox.setValueStateText(this.getResourceBundle().getText(\"messageSelectAnEntryBeforeAdding\"));\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//get configuration item corresponding to type input\n\t\t\tvar oEntryType = oTypesCBox.getSelectedItem().getBindingContext(sModelName).getObject(); //this._oODataModel.getObject(.getPath());\n\n\t\t\t//for each entry in OData list binding\n\t\t\taListItems.forEach(function(oListItem) {\n\n\t\t\t\t//check whether type of this entry matches\n\t\t\t\tif (this._oODataModel.getProperty(oListItem.getBindingContext(\"Registration\").getPath() +\n\t\t\t\t\t\t\"/\" + sTypeKey) === oTypesCBox.getSelectedKey()) {\n\t\t\t\t\tiMatchCount++;\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//increment match count to evaluate cardinality after next entry was added\n\t\t\tiMatchCount++;\n\n\t\t\t//compare input cardinality with match count\n\t\t\tswitch (oEntryType.InputCardinality) {\n\n\t\t\t\t//at most or exactly one entry\n\t\t\t\tcase \"1\":\n\t\t\t\tcase \"0..1\":\n\n\t\t\t\t\t//another entry only allowable where none exists at this stage\n\t\t\t\t\tif (iMatchCount > 1) {\n\t\t\t\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toTypesCBox.setValueStateText(\"Only one item of the selected type is allowable\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//no specification or unbounded\n\t\t\t\tcase \"\":\n\t\t\t\tcase \"*\":\n\t\t\t\tcase \"1..*\":\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//maximum number of entries\t\n\t\t\t\tdefault:\n\t\t\t\t\tif (iMatchCount > oEntryType.InputCardinality) {\n\t\t\t\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\tvar sValueStateText = \"At most \" + oEntryType.InputCardinality + \" items of the selected type are allowable\";\n\t\t\t\t\t\toTypesCBox.setValueStateText(sValueStateText);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//required entry check on typed list\n\t\thasIncorrectCardinality: function(oFormField, oTypesCBox, sTypeKey, sInvalidI18nTextKey, sInvalidLabelText, sModelName, oModel) {\n\n\t\t\t//local data declaration\n\t\t\tvar bMatched = false;\n\t\t\tvar aInvalidFormFields = [];\n\t\t\tvar oInvalidFormField = null;\n\n\t\t\t//default model name where applicable\n\t\t\tif (!oModel) {\n\t\t\t\toModel = this._oODataModel;\n\t\t\t}\n\n\t\t\t//default model name where applicable\n\t\t\tif (!sModelName) {\n\t\t\t\tsModelName = \"Registration\";\n\t\t\t}\n\n\t\t\t//get list items\n\t\t\tvar aListItems = oFormField.oControl.getItems();\n\n\t\t\t//reset value state of type combobox\n\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.None);\n\n\t\t\t//check all required combobox entries are available in list\n\t\t\toTypesCBox.getItems().forEach(function(oCBoxItem) {\n\n\t\t\t\t//input check for required types\n\t\t\t\tvar oEntryType = oModel.getObject(oCBoxItem.getBindingContext(sModelName).getPath());\n\t\t\t\tif (oEntryType.InputCardinality === \"1\" || oEntryType.InputCardinality === \"1..*\") {\n\n\t\t\t\t\t//initialize for next loop pass\n\t\t\t\t\tbMatched = false;\n\n\t\t\t\t\t//for each entry in OData list binding\n\t\t\t\t\taListItems.forEach(function(oListItem) {\n\n\t\t\t\t\t\t//check whether type of this entry matches\n\t\t\t\t\t\tif (this._oODataModel.getProperty(oListItem.getBindingContext(\"Registration\").getPath() +\n\t\t\t\t\t\t\t\t\"/\" + sTypeKey) ===\n\t\t\t\t\t\t\toCBoxItem.getKey()) {\n\t\t\t\t\t\t\tbMatched = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t//no match found\n\t\t\t\t\tif (!bMatched) {\n\n\t\t\t\t\t\t//set type selector as invalid control where an entry does not exist for all types\n\t\t\t\t\t\toTypesCBox.setValueState(sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toTypesCBox.setValueStateText(this._oResourceBundle.getText(sInvalidI18nTextKey));\n\n\t\t\t\t\t\t//construct invalid form field\n\t\t\t\t\t\tif (!oInvalidFormField) {\n\t\t\t\t\t\t\toInvalidFormField = {\n\t\t\t\t\t\t\t\tsFormID: oFormField.sFormID,\n\t\t\t\t\t\t\t\toControl: oTypesCBox,\n\t\t\t\t\t\t\t\toLabel: new sap.m.Label({\n\t\t\t\t\t\t\t\t\ttext: sInvalidLabelText\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t//return type combobox as control containing invalid content\n\t\t\t\t\t\t\taInvalidFormFields.push(oInvalidFormField);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//return control with invalid input\n\t\t\treturn aInvalidFormFields;\n\n\t\t},\n\n\t\t//visualize 'save' before 'submit' for entity view\n\t\tvisualizeSaveBeforeSubmit: function() {\n\n\t\t\t//submit button disabled and not emphasized to hint: cannot submit  \n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", false);\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sap.m.ButtonType.Transparent);\n\n\t\t\t//save button emphasized to hint: do save first\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sap.m.ButtonType.Emphasized);\n\n\t\t},\n\n\t\t//visualize entity status \n\t\tvisualizeEntityStatus: function() {\n\n\t\t\t//re-read entity status from backend\n\t\t\tthis._oODataModel.read(this.getView().getBindingContext(\"Registration\").getPath(), {\n\n\t\t\t\t//read success handler\n\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t//adobt entity attributes for UI rendering\n\t\t\t\t\tthis.adoptEntityAttributes(\"Status\", this._oViewModel);\n\n\t\t\t\t\t//set submit button enabled state\n\t\t\t\t\tthis.setSubmitButtonEnabledState();\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//send dialog to confirm submission\n\t\tconfirmSubmission: function(oEntity, bNavigate) {\n\n\t\t\t//local data declaration\n\t\t\tvar sReferenceID;\n\n\t\t\t//get submission reference number\n\t\t\tif (oEntity) {\n\t\t\t\tsReferenceID = oEntity.LastSubmitReferenceID;\n\t\t\t} else {\n\t\t\t\tsReferenceID = \"unexpectedly not available\";\n\t\t\t}\n\n\t\t\t//construct confirmation dialog content\n\t\t\tvar oConfirmationDialogContent = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.RegistrationConfirmation\", this);\n\n\t\t\t//construct view dialog instance\t\t\t\n\t\t\tvar oRegistrationDialog = new sap.m.Dialog({\n\t\t\t\tstate: sap.ui.core.ValueState.Success,\n\t\t\t\ttitle: \"Request submitted\",\n\t\t\t\tcontentWidth: \"550px\",\n\t\t\t\tcontentHeight: \"250px\",\n\t\t\t\tdraggable: true,\n\t\t\t\tcontent: oConfirmationDialogContent,\n\n\t\t\t\t//close button and close event handler\n\t\t\t\tbeginButton: new sap.m.Button({\n\t\t\t\t\ttext: \"Close\",\n\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t//close registration dialog\n\t\t\t\t\t\toRegistrationDialog.close();\n\n\t\t\t\t\t\t//navigate where requested\n\t\t\t\t\t\tif (bNavigate) {\n\n\t\t\t\t\t\t\t//return to source of navigation where applicable\n\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\n\n\t\t\t\t\t\t\t\t//request to display the target from which navigation occured\n\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\n\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t//forget navigation data\n\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t//navigate back in history\n\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t}),\n\n\t\t\t\t//event handler for dialog destroy\n\t\t\t\tafterClose: function() {\n\t\t\t\t\toRegistrationDialog.destroy();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//include reference number into confirmation dialog text\n\t\t\tvar sHTML = sap.ui.getCore().byId(\"htmlRegistrationConfirmation\").getContent();\n\t\t\tsap.ui.getCore().byId(\"htmlRegistrationConfirmation\").setContent(sHTML.replace(\"sReferenceID\", sReferenceID));\n\n\t\t\t//open registration confirmation dialog\n\t\t\toRegistrationDialog.open();\n\n\t\t},\n\n\t\t/**\n\t\t * Checks for error messages bound in model\n\t\t * @private\n\t\t */\n\t\thasErrorMessages: function() {\n\n\t\t\t//to be implemented in extension controller derived from base controller\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Send message using message strip\n\t\t * @private\n\t\t */\n\t\tsendStripMessage: function(sText, sType) {\n\n\t\t\t//message handling\n\t\t\tthis._oMessageStrip.setText(sText);\n\t\t\tthis._oMessageStrip.setType(sType);\n\t\t\tthis._oMessageStrip.setVisible(true);\n\n\t\t},\n\n\t\t/**\n\t\t * Send message using message strip\n\t\t * @private\n\t\t */\n\t\tsendBoxMessage: function(sText, sTitle, sType) {\n\n\t\t\t//local data declaration\n\t\t\tvar oMessageIcon;\n\n\t\t\t//derive message icon\n\t\t\tswitch (sType) {\n\t\t\t\tcase \"Success\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.SUCCESS;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Warning\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.WARNING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Error\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.ERROR;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.INFORMATION;\n\t\t\t}\n\n\t\t\t//send message in message box\n\t\t\tsap.m.MessageBox.show(\n\t\t\t\tsText, {\n\t\t\t\t\ticon: oMessageIcon,\n\t\t\t\t\ttitle: sTitle,\n\t\t\t\t\tstyleClass: this.getOwnerComponent().getContentDensityClass(),\n\t\t\t\t\tactions: [sap.m.MessageBox.Action.CLOSE]\n\t\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t * Send message using message strip\n\t\t * @private\n\t\t */\n\t\tsendToastMessage: function(sText, sTitle, sType) {\n\n\t\t\t//local data declaration\n\t\t\tvar oMessageIcon;\n\n\t\t\t//derive message icon\n\t\t\tswitch (sType) {\n\t\t\t\tcase \"Success\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.SUCCESS;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Warning\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.WARNING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Error\":\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.ERROR;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\toMessageIcon = sap.m.MessageBox.Icon.INFORMATION;\n\t\t\t}\n\n\t\t\t//send message in message box\n\t\t\tsap.m.MessageToast.show(sText, {});\n\n\t\t},\n\n\t\t//set entity notification\n\t\tsetEntityNotification: function(sPath, sEntityID) {\n\n\t\t\t//where notifications are available at this stage\n\t\t\tif (this.getOwnerComponent().oNotificationList) {\n\n\t\t\t\t//set notification strip message and message popup button\n\t\t\t\tif (this.getOwnerComponent().oNotificationList.getBinding(\"items\").filter(\n\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\tpath: sPath,\n\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\tvalue1: sEntityID\n\t\t\t\t\t\t})).getLength() > 0) {\n\n\t\t\t\t\t//remove all messages from the message manager\n\t\t\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t\t\t//get first notification for this entity\n\t\t\t\t\tvar oNotificationListItem = this.getOwnerComponent().oNotificationList.getItems()[0];\n\t\t\t\t\tvar oNotification = oNotificationListItem.getBindingContext(\"Registration\").getObject();\n\n\t\t\t\t\t//get messages for this notification\n\t\t\t\t\tthis.getOwnerComponent().oMessageList.getBinding(\"items\").filter(\n\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\tpath: \"NotificatnID\",\n\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\tvalue1: oNotification.NotificatnID\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t//add messages to message popover\n\t\t\t\t\tthis.getOwnerComponent().oMessageList.getItems().forEach(function(oMessageListItem) {\n\t\t\t\t\t\tvar oMessage = oMessageListItem.getBindingContext(\"Registration\").getObject();\n\t\t\t\t\t\tthis._oMessageManager.addMessages(\n\t\t\t\t\t\t\tnew sap.ui.core.message.Message({\n\t\t\t\t\t\t\t\tmessage: oMessage.MessageText,\n\t\t\t\t\t\t\t\tdescription: \"Feedback from City of Cape Town\",\n\t\t\t\t\t\t\t\ttype: oMessage.MessageType,\n\t\t\t\t\t\t\t\tprocessor: this._oMessageProcessor\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t//set message model attribute that leading message is contained\n\t\t\t\t\tthis._oMessageManager.containsLeadingMessage = true;\n\n\t\t\t\t\t//message handling: notification text\n\t\t\t\t\tthis.sendStripMessage(oNotification.NotificationText, oNotification.NotificationSeverity);\n\n\t\t\t\t\t//keep entity notification as leading message for a while and then demote\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tthis._oMessageManager.containsLeadingMessage = false;\n\t\t\t\t\t}.bind(this), 5000);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//set entity notification\n\t\tsetEntityMessages: function(aMessages) {\n\n\t\t\t//remove all messages from the message manager\n\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t//add messages to message popover\n\t\t\taMessages.forEach(function(oMessage) {\n\t\t\t\tthis._oMessageManager.addMessages(\n\t\t\t\t\tnew sap.ui.core.message.Message({\n\t\t\t\t\t\tmessage: oMessage.MessageText,\n\t\t\t\t\t\tdescription: \"Feedback from City of Cape Town\",\n\t\t\t\t\t\tcode: oMessage.MessageCode,\n\t\t\t\t\t\ttype: oMessage.MessageType,\n\t\t\t\t\t\tprocessor: this._oMessageProcessor\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//formatter function: organisation type\n\t\tformatRelationshipTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sRelationshipTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"RelationshipTypeSet\", {\n\t\t\t\tRelationshipTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get organisation type text property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sRelationshipTypeKey + \"/RelationshipTypeText\");\n\n\t\t},\n\n\t\t//formatter function: legal entity type\n\t\tformatLegalEntityType: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sLegalEntityTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"LegalEntityTypeSet\", {\n\t\t\t\tLegalEntityTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get legal entity type text property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sLegalEntityTypeKey + \"/LegalEntityTypeText\");\n\n\t\t},\n\n\t\t//formatter function: service type ID\n\t\tformatServiceTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sServiceTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceTypeSet\", {\n\t\t\t\tServiceTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get relationship type text property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sServiceTypeKey + \"/ServiceTypeText\");\n\n\t\t},\n\n\t\t//formatter function: address type ID\n\t\tformatAddressTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sAddressTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\n\t\t\t\tAddressTypeID: sValue\n\t\t\t});\n\n\t\t\t//get address type\n\t\t\tvar oAddressType = this.getModel(\"Registration\").getProperty(sAddressTypeKey);\n\n\t\t\t//Get address type text property\n\t\t\tif (oAddressType) {\n\t\t\t\treturn oAddressType.AddressTypeText.replace(\"*\", \"\");\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: bank account purpose ID\n\t\tformatBankAccountPurposeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sBankAccountPurposeKey = \"/\" + this.getModel(\"Registration\").createKey(\"BankAccountPurposeSet\", {\n\t\t\t\tBankAccountPurposeID: sValue\n\t\t\t});\n\n\t\t\t//get bank account purpose\n\t\t\tvar oBankAccountPurpose = this.getModel(\"Registration\").getProperty(sBankAccountPurposeKey);\n\n\t\t\t//return bank account purpose text property\n\t\t\tif (oBankAccountPurpose) {\n\t\t\t\treturn oBankAccountPurpose.BankAccountPurposeText.replace(\"*\", \"\");\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: organisation ID\n\t\tformatOrganisationID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sOrganisationKey = \"/\" + this.getModel(\"Registration\").createKey(\"OrganisationSet\", {\n\t\t\t\tOrganisationID: sValue\n\t\t\t});\n\n\t\t\t//Get organisation name property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sOrganisationKey + \"/Name\");\n\n\t\t},\n\n\t\t//formatter function: ID type\n\t\tformatIDType: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sIDTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"IDTypeSet\", {\n\t\t\t\tIDTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get organisation name property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sIDTypeKey + \"/IDTypeText\");\n\n\t\t},\n\n\t\t//formatter function: entity status ID\n\t\tformatEntityStatusID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sEntityStatusIDKey = \"/\" + this.getModel(\"Registration\").createKey(\"EntityStatusSet\", {\n\t\t\t\tEntityStatusID: sValue\n\t\t\t});\n\n\t\t\t//Get data status text\n\t\t\treturn this.getModel(\"Registration\").getProperty(sEntityStatusIDKey + \"/EntityStatusText\");\n\n\t\t},\n\n\t\t//formatter function: action ID\n\t\tformatActionID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sActionIDKey = \"/\" + this.getModel(\"Registration\").createKey(\"ActionSet\", {\n\t\t\t\tActionID: sValue\n\t\t\t});\n\n\t\t\t//Get data status text\n\t\t\treturn this.getModel(\"Registration\").getProperty(sActionIDKey + \"/ActionText\");\n\n\t\t},\n\n\t\t//conversion function: date to time stamp\n\t\tconvertDateToTimeStamp: function(dDate) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!dDate) {\n\t\t\t\treturn dDate;\n\t\t\t}\n\n\t\t\t//create a timestamp \n\t\t\tvar sTimeStamp = dDate.getFullYear().toString() + dDate.getMonth().toString() + dDate.getDate().toString() + dDate.getHours().toString();\n\n\t\t\t//feedback to caller\n\t\t\treturn sTimeStamp;\n\n\t\t},\n\n\t\t//formatter function: person ID\n\t\tformatPersonID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sPersonKey = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\tPersonID: sValue\n\t\t\t});\n\n\t\t\t//get person entity\n\t\t\tvar oPerson = this.getModel(\"Registration\").getObject(sPersonKey);\n\n\t\t\t//build string identifying person\n\t\t\tif (oPerson) {\n\t\t\t\treturn oPerson.Name + \" \" + oPerson.Surname;\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: role ID\n\t\tformatRoleID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sRoleKey = \"/\" + this.getModel(\"Registration\").createKey(\"RoleSet\", {\n\t\t\t\tRoleID: sValue\n\t\t\t});\n\n\t\t\t//get role entity\n\t\t\tvar oRole = this.getModel(\"Registration\").getObject(sRoleKey);\n\n\t\t\t//build string identifying role\n\t\t\tif (oRole) {\n\t\t\t\treturn oRole.RoleText.replace(\"*\", \"\");\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: document type ID\n\t\tformatDocumentTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//create object path for an existing OData model instance\n\t\t\tvar sDocumentTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"DocumentTypeSet\", {\n\t\t\t\tDocumentTypeID: sValue\n\t\t\t});\n\n\t\t\t//cater for document types that carry a ':' in their ID\n\t\t\tsDocumentTypeKey = sDocumentTypeKey.replace(/:/, \"%3A\");\n\n\t\t\t//get role entity\n\t\t\tvar oDocumentType = this.getModel(\"Registration\").getObject(sDocumentTypeKey);\n\n\t\t\t//build string identifying role\n\t\t\tif (oDocumentType) {\n\t\t\t\treturn oDocumentType.DocumentTypeText.replace(\"*\", \"\");\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: contact type ID\n\t\tformatContactTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sContactTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"ContactTypeSet\", {\n\t\t\t\tContactTypeID: sValue\n\t\t\t});\n\n\t\t\t//get role entity\n\t\t\tvar oContactType = this.getModel(\"Registration\").getObject(sContactTypeKey);\n\n\t\t\t//build string identifying role\n\t\t\tif (oContactType) {\n\t\t\t\treturn oContactType.ContactTypeText.replace(\"*\", \"\");\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter for FileSize upload collection object attribute\n\t\tformatFileSizeAttribute: function(iFileSizeInBytes) {\n\n\t\t\t//no further processing where applicable\n\t\t\tif (!iFileSizeInBytes) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//express filesize in bytes\n\t\t\tif (iFileSizeInBytes < 1000) {\n\t\t\t\treturn Math.floor(iFileSizeInBytes) + \" Bytes\";\n\t\t\t}\n\n\t\t\t//express filesize in kilobytes\n\t\t\tif (iFileSizeInBytes < 1000000) {\n\t\t\t\treturn Math.floor((iFileSizeInBytes / 1000)) + \" KB(s)\";\n\t\t\t}\n\n\t\t\t//express filesize in megabytes\n\t\t\treturn Math.floor((iFileSizeInBytes / 1000000)) + \" MB(s)\";\n\n\t\t},\n\n\t\t//formatter function: parameter type ID\n\t\tformatParameterTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sParameterTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"ParameterTypeSet\", {\n\t\t\t\tParameterTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get parameter type text property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sParameterTypeKey + \"/ParameterTypeText\");\n\n\t\t},\n\n\t\t//formatter function: Industry ID\n\t\tformatIndustryID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sIndustryKey = \"/\" + this.getModel(\"Registration\").createKey(\"IndustrySet\", {\n\t\t\t\tIndustryID: sValue\n\t\t\t});\n\n\t\t\t//Get industry text property\n\t\t\treturn this.getModel(\"Registration\").getProperty(sIndustryKey + \"/IndustryText\");\n\n\t\t},\n\n\t\t//formatter function: Supplier ID\n\t\tformatSupplierID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sSupplierKey = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\n\t\t\t\tSupplierID: sValue\n\t\t\t});\n\n\t\t\t//Get supplier trading as name\n\t\t\treturn this.getModel(\"Registration\").getProperty(sSupplierKey + \"/TradingAsName\");\n\n\t\t},\n\n\t\t//formatter function: Declaration Type ID\n\t\tformatDeclarationTypeID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sDeclarationTypeKey = \"/\" + this.getModel(\"Registration\").createKey(\"DeclarationTypeSet\", {\n\t\t\t\tDeclarationTypeID: sValue\n\t\t\t});\n\n\t\t\t//Get declaration type name\n\t\t\treturn this.getModel(\"Registration\").getProperty(sDeclarationTypeKey + \"/DeclarationTypeText\");\n\n\t\t},\n\n\t\t//formatter function: select option\n\t\tformatBooleanSelectOption: function(sValue) {\n\t\t\tswitch (sValue) {\n\t\t\t\tcase \"X\":\n\t\t\t\tcase true:\n\t\t\t\tcase \"true\":\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t//format last update timestamp\n\t\tformatLastUpdateTimeStamp: function(dLastUpdateTimeStamp) {\n\n\t\t\t//format date for output to UI\n\t\t\tif (dLastUpdateTimeStamp && dLastUpdateTimeStamp.toLocaleDateString) {\n\t\t\t\treturn dLastUpdateTimeStamp.toLocaleDateString(\"en-us\", {\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\tminute: \"2-digit\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t//format last update timestamp with label\n\t\tformatLastUpdateTimeStampWithLabel: function(dLastUpdateTimeStamp) {\n\n\t\t\t//format date for output to UI\n\t\t\tif (dLastUpdateTimeStamp && dLastUpdateTimeStamp.toLocaleDateString) {\n\t\t\t\treturn \"Last updated: \" +\n\t\t\t\t\tdLastUpdateTimeStamp.toLocaleDateString(\"en-us\", {\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\t\tminute: \"2-digit\"\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t//formatter function: last action timestamp\n\t\tformatLastActionTimeStamp: function(dLastActionTimeStamp) {\n\n\t\t\t//local data declaration\t\t\t\n\t\t\tvar sLastActionTimeStamp = \"\";\n\n\t\t\t//action timestamp\n\t\t\tif (dLastActionTimeStamp) {\n\t\t\t\tsLastActionTimeStamp = dLastActionTimeStamp.toLocaleDateString(\"en-us\", {\n\t\t\t\t\tweekday: \"long\",\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\tday: \"numeric\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//return formatted date string\n\t\t\treturn sLastActionTimeStamp;\n\n\t\t},\n\n\t\t//formatter function: Service ID\n\t\tformatServiceID: function(sValue) {\n\n\t\t\t//no further processing where no value provided\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"Not specified\";\n\t\t\t}\n\n\t\t\t//Create object path for an existing OData model instance\n\t\t\tvar sServiceKey = \"/\" + this.getModel(\"Registration\").createKey(\"ServiceSet\", {\n\t\t\t\tServiceID: sValue\n\t\t\t});\n\n\t\t\t//get service entity\n\t\t\tvar oService = this._oODataModel.getObject(sServiceKey);\n\n\t\t\t//get service type text\n\t\t\tvar sServiceTypeText = this.formatServiceTypeID(oService.ServiceTypeID);\n\n\t\t\t//get service registered for\n\t\t\tvar sServiceRegisteredFor;\n\t\t\tif (oService.PersonID) {\n\t\t\t\tsServiceRegisteredFor = this.formatPersonID(oService.PersonID);\n\t\t\t}\n\t\t\tif (oService.OrganisationID) {\n\t\t\t\tsServiceRegisteredFor = this.formatOrganisationID(oService.OrganisationID);\n\t\t\t}\n\t\t\tif (oService.SupplierID) {\n\t\t\t\tsServiceRegisteredFor = this.formatSupplierID(oService.SupplierID);\n\t\t\t}\n\n\t\t\t//return service description\n\t\t\treturn sServiceTypeText + \" for \" + sServiceRegisteredFor;\n\n\t\t},\n\n\t\t//give hint: for Business Partner\n\t\thintForBusinessPartner: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover where applicable\n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintBusinessPartnerIDPopover\", this);\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for registering service either for person or organisation\n\t\thintForServiceCreateForPersonOrOrganisation: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover where applicable\n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintServiceCreateForPersonOrOrganisation\", this);\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for (not) adopting Business Partner\n\t\thintForAdoptBusinessPartner: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover where applicable\n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintAdoptBusinessPartnerPopover\", this);\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for chosen user ID\n\t\thintForChosenUserID: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover where applicable\n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintChosenUserIDPopover\", this);\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for bank branch code\n\t\thintForBankBranchCode: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover \n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintWithCarouselPopover\", this);\n\t\t\tthis.oHintPopover.setPlacement(sap.m.PlacementType.Right);\n\n\t\t\t//get service type combo box UI control\n\t\t\tvar oInputBankBranchCode = sap.ui.getCore().byId(\"inputBankBranchCode\");\n\n\t\t\t//get enabled state of bank branch code\n\t\t\tvar bInputBankBranchEnabled = oInputBankBranchCode.getEnabled();\n\n\t\t\t//get carousel in hint popover\n\t\t\tvar oCarousel = sap.ui.getCore().byId(\"carouselHint\");\n\n\t\t\t//carousel content depending on chosen address type\n\t\t\tswitch (bInputBankBranchEnabled) {\n\n\t\t\t\t//set carousel content where branch code editable\n\t\t\t\tcase true:\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintBankBranchCode02.png\",\n\t\t\t\t\t\talt: \"Branch code for bank not on record at City of Cape Town\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content branch code not editable\n\t\t\t\tdefault:\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintBankBranchCode01.png\",\n\t\t\t\t\t\talt: \"Universal bank branch code for electronic payments\"\n\t\t\t\t\t}));\n\n\t\t\t}\n\n\t\t\t//register close event to destroy popover\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for service type\n\t\thintForServiceType: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover \n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintWithCarouselPopover\", this);\n\n\t\t\t//get service type combo box UI control\n\t\t\tvar oCBoxServiceTypes = this.getView().byId(\"cboxServiceTypes\");\n\t\t\tif (!oCBoxServiceTypes) {\n\t\t\t\toCBoxServiceTypes = this.getView().byId(\"cboxOrganisationServiceTypes\");\n\t\t\t}\n\n\t\t\t//get value of selected service type\n\t\t\tvar sServiceTypeID = oCBoxServiceTypes.getSelectedKey();\n\n\t\t\t//get carousel in hint popover\n\t\t\tvar oCarousel = sap.ui.getCore().byId(\"carouselHint\");\n\n\t\t\t//carousel content depending on chosen address type\n\t\t\tswitch (sServiceTypeID) {\n\n\t\t\t\t//set carousel content for supplier self service\n\t\t\t\tcase \"SupplierSelfService\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceType3.png\",\n\t\t\t\t\t\talt: \"Service type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceType4.png\",\n\t\t\t\t\t\talt: \"Service scope for me or an organisation\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceTypeSSS1.png\",\n\t\t\t\t\t\talt: \"Update personal details\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceTypeSSS2.png\",\n\t\t\t\t\t\talt: \"Select organisation\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceTypeSSS3.png\",\n\t\t\t\t\t\talt: \"Select supplier account\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceTypeSSS4.png\",\n\t\t\t\t\t\talt: \"Add responsible people\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content where no service type selected\n\t\t\t\tdefault:\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceType1.png\",\n\t\t\t\t\t\talt: \"Service type info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceType2.png\",\n\t\t\t\t\t\talt: \"Service type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintServiceType3.png\",\n\t\t\t\t\t\talt: \"Service scope for me or an organisation\"\n\t\t\t\t\t}));\n\n\t\t\t}\n\n\t\t\t//register close event to destroy popover\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for address type\n\t\thintForAddressType: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover \n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintWithCarouselPopover\", this);\n\n\t\t\t//get address type UI control\n\t\t\tvar oCBoxAddressTypes = this.getView().byId(\"cboxOrganisationAddressTypes\");\n\t\t\tif (!oCBoxAddressTypes) {\n\t\t\t\toCBoxAddressTypes = this.getView().byId(\"cboxPersonAddressTypes\");\n\t\t\t\tif (!oCBoxAddressTypes) {\n\t\t\t\t\toCBoxAddressTypes = this.getView().byId(\"cboxSupplierAddressTypes\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//get selected address type\n\t\t\tvar sAddressTypeID = oCBoxAddressTypes.getSelectedKey();\n\n\t\t\t//get carousel in hint popover\n\t\t\tvar oCarousel = sap.ui.getCore().byId(\"carouselHint\");\n\n\t\t\t//carousel content depending on chosen address type\n\t\t\tswitch (sAddressTypeID) {\n\n\t\t\t\t//set carousel content for: Organisation main address\n\t\t\t\tcase \"0001\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType0001.png\",\n\t\t\t\t\t\talt: \"Address type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content for: Supplier street address\n\t\t\t\tcase \"0003\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType0003.png\",\n\t\t\t\t\t\talt: \"Address type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content for: Supplier PO Box address\n\t\t\t\tcase \"0004\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType0004.png\",\n\t\t\t\t\t\talt: \"Address type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content for: Person street address\n\t\t\t\tcase \"DEFAULT\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressTypeDEFAULT.png\",\n\t\t\t\t\t\talt: \"Address type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content where no address type selected\n\t\t\t\tdefault:\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType1.png\",\n\t\t\t\t\t\talt: \"Address type info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType2.png\",\n\t\t\t\t\t\talt: \"Address type info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintAddressType3.png\",\n\t\t\t\t\t\talt: \"Address type info\"\n\t\t\t\t\t}));\n\n\t\t\t}\n\n\t\t\t//register close event to destroy popover\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for role type\n\t\thintForRoleType: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover \n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintWithCarouselPopover\", this);\n\n\t\t\t//get role type UI control\n\t\t\tvar oCBoxRoleTypes = this.getView().byId(\"cboxPersonRoles\");\n\t\t\tif (!oCBoxRoleTypes) {\n\t\t\t\toCBoxRoleTypes = this.getView().byId(\"cboxServicePersonRoles\");\n\t\t\t}\n\n\t\t\t//get selected role type\n\t\t\tvar sRoleTypeID = oCBoxRoleTypes.getSelectedKey();\n\n\t\t\t//get carousel in hint popover\n\t\t\tvar oCarousel = sap.ui.getCore().byId(\"carouselHint\");\n\n\t\t\t//carousel content depending on chosen address type\n\t\t\tswitch (sRoleTypeID) {\n\n\t\t\t\t//set carousel content for administrator role\n\t\t\t\tcase \"01\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType01.png\",\n\t\t\t\t\t\talt: \"Role type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content for authorizer role\n\t\t\t\tcase \"03\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType03.png\",\n\t\t\t\t\t\talt: \"Role type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content for transacting person role\n\t\t\t\tcase \"05\":\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType05.png\",\n\t\t\t\t\t\talt: \"Role type additional info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//set carousel content where no role type selected\n\t\t\t\tdefault:\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType1.png\",\n\t\t\t\t\t\talt: \"Role type info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType2.png\",\n\t\t\t\t\t\talt: \"Role type info\"\n\t\t\t\t\t}));\n\t\t\t\t\toCarousel.addPage(new sap.m.Image({\n\t\t\t\t\t\tsrc: \"image/HintRoleType3.png\",\n\t\t\t\t\t\talt: \"Role type info\"\n\t\t\t\t\t}));\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t//register close event to destroy popover\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//give hint: for declaration form\n\t\thintForDeclarationForm: function(oEvent) {\n\n\t\t\t//get event source\n\t\t\tvar oHintButton = oEvent.getSource();\n\n\t\t\t//destroy hint popover where it was not previously closed\n\t\t\tif (this.oHintPopover) {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}\n\n\t\t\t//create hint popover where applicable\n\t\t\tthis.oHintPopover = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.HintDeclarationFormPopover\", this);\n\t\t\tthis.oHintPopover.attachAfterClose(function() {\n\t\t\t\tthis.oHintPopover.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oHintPopover);\n\n\t\t\t//delay because addDependent will do a async rerendering \n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.oHintPopover.openBy(oHintButton);\n\t\t\t});\n\n\t\t},\n\n\t\t//set 'enabled' state of form input controls\n\t\tsetFormInputControlsEnabled: function(aForms, bEnabled) {\n\n\t\t\t//get entity identity form inputs\n\t\t\tif (this.getIdentityFormInputs) {\n\t\t\t\tthis.aIdentityFormInputs = this.getIdentityFormInputs();\n\t\t\t}\n\n\t\t\t//for each requested form\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//get all input fields in this form\n\t\t\t\tvar aInputControls = this.getFormInputFields(oForm);\n\n\t\t\t\t//exclude entity identity form inputs where enabling\n\t\t\t\tif (bEnabled && this.aIdentityFormInputs) {\n\n\t\t\t\t\t//reduce form input controls to non-identity form inputs\n\t\t\t\t\tvar aInputControlsNonIdentity = aInputControls.filter(function(oInputControl) {\n\n\t\t\t\t\t\t//local data declaration\n\t\t\t\t\t\tvar isIdentityControl = false;\n\n\t\t\t\t\t\t//check whether this input control is an identity control\n\t\t\t\t\t\tthis.aIdentityFormInputs.forEach(function(oIdentityInputControl) {\n\t\t\t\t\t\t\tif (oInputControl.oControl === oIdentityInputControl) {\n\t\t\t\t\t\t\t\tisIdentityControl = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//input control is part of entity identity\n\t\t\t\t\t\tif (isIdentityControl) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//input control is not an identity attribute\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t//adopt non-identity input controls for setting input controls enabled state\n\t\t\t\t\taInputControls = aInputControlsNonIdentity;\n\n\t\t\t\t}\n\n\t\t\t\t//set enabled state for all input controls\n\t\t\t\taInputControls.forEach(function(item) {\n\n\t\t\t\t\t//get reference to this UI control\n\t\t\t\t\tvar oControl = item.oControl;\n\t\t\t\t\tvar sControlType = oControl.getMetadata().getName();\n\n\t\t\t\t\t//for controls allowing input or action\n\t\t\t\t\tif (sControlType === \"sap.m.Input\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.Switch\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.Select\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.CheckBox\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.ComboBox\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.RadioButton\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.MultiComboBox\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.RadioButtonGroup\" ||\n\t\t\t\t\t\tsControlType === \"sap.ui.unified.FileUploader\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.DatePicker\") {\n\n\t\t\t\t\t\t//set enabled state\n\t\t\t\t\t\toControl.setEnabled(bEnabled);\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for table and lists with header toolbar and items\n\t\t\t\t\tif (sControlType === \"sap.m.Table\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.List\") {\n\n\t\t\t\t\t\t//toggle header toolbar state where available\n\t\t\t\t\t\tvar oToolbar = oControl.getHeaderToolbar();\n\t\t\t\t\t\tif (oToolbar) {\n\t\t\t\t\t\t\toToolbar.setEnabled(bEnabled);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//get list or table items\n\t\t\t\t\t\tvar aItems = oControl.getItems();\n\n\t\t\t\t\t\t//for each table or list item\n\t\t\t\t\t\taItems.forEach(function(oItem) {\n\n\t\t\t\t\t\t\t//set list item type active or inactive\n\t\t\t\t\t\t\tswitch (bEnabled) {\n\t\t\t\t\t\t\t\tcase false:\n\t\t\t\t\t\t\t\t\toItem.setType(sap.m.ListType.Inactive);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase true:\n\t\t\t\t\t\t\t\t\toItem.setType(sap.m.ListType.Active);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//for each control in list item content aggregation\n\t\t\t\t\t\t\tif (sControlType === \"sap.m.List\") {\n\t\t\t\t\t\t\t\tvar aControls = oItem.getAggregation(\"content\");\n\t\t\t\t\t\t\t\taControls.forEach(function(oListItemControl) {\n\t\t\t\t\t\t\t\t\tif (oListItemControl.setEnabled) {\n\t\t\t\t\t\t\t\t\t\toListItemControl.setEnabled(bEnabled);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\toListItemControl.setVisible(bEnabled);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//toggle display for last cell in table \n\t\t\t\t\t\t\tif (sControlType === \"sap.m.Table\") {\n\t\t\t\t\t\t\t\tvar aCells = oItem.getAggregation(\"cells\");\n\t\t\t\t\t\t\t\taCells[aCells.length - 1].setVisible(bEnabled);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for upload collections set upload enabled state\n\t\t\t\t\tif (sControlType === \"sap.m.UploadCollection\") {\n\t\t\t\t\t\toControl.setUploadEnabled(bEnabled);\n\n\t\t\t\t\t\t//get upload collection toolbar\n\t\t\t\t\t\tvar oUploadCollectionToolbar = oControl.getToolbar();\n\t\t\t\t\t\tif (!oUploadCollectionToolbar) {\n\t\t\t\t\t\t\toUploadCollectionToolbar = oControl.getAggregation(\"toolbar\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//set enabled state for all toolbar controls\n\t\t\t\t\t\toUploadCollectionToolbar.getAggregation(\"content\").forEach(function(oToolbarControl) {\n\t\t\t\t\t\t\tif (oToolbarControl.setEnabled) {\n\t\t\t\t\t\t\t\toToolbarControl.setEnabled(bEnabled);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//set enabled state for each item in upload collection\n\t\t\t\t\t\taItems = oControl.getItems();\n\t\t\t\t\t\taItems.forEach(function(oItem) {\n\t\t\t\t\t\t\toItem.setEnableDelete(bEnabled);\n\t\t\t\t\t\t\toItem.setEnableEdit(bEnabled);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//set 'enabled' state of form action controls\n\t\tsetFormActionControlsEnabled: function(aForms, bEnabled) {\n\n\t\t\t//for each requested form\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//get all action fields in this form\n\t\t\t\tvar aActionControls = this.getFormActionFields(oForm);\n\n\t\t\t\t//set enabled state for all action controls\n\t\t\t\taActionControls.forEach(function(item) {\n\n\t\t\t\t\t//get reference to this UI control\n\t\t\t\t\tvar oControl = item.oControl;\n\t\t\t\t\tvar sControlType = oControl.getMetadata().getName();\n\n\t\t\t\t\t//for controls allowing input or action\n\t\t\t\t\tif (sControlType === \"sap.m.Button\") {\n\n\t\t\t\t\t\t//set enabled state\n\t\t\t\t\t\toControl.setEnabled(bEnabled);\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//set item type active (clickable) for list items or tables\n\t\tsetFormListItemTypeActive: function(aForms, bActive) {\n\n\t\t\t//for each requested form\n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//get all input fields in this form\n\t\t\t\tvar aInputControls = this.getFormInputFields(oForm);\n\n\t\t\t\t//set list item type\n\t\t\t\taInputControls.forEach(function(item) {\n\n\t\t\t\t\t//get reference to this UI control\n\t\t\t\t\tvar oControl = item.oControl;\n\t\t\t\t\tvar sControlType = oControl.getMetadata().getName();\n\n\t\t\t\t\t//for table and lists with header toolbar and items\n\t\t\t\t\tif (sControlType === \"sap.m.Table\" ||\n\t\t\t\t\t\tsControlType === \"sap.m.List\") {\n\n\t\t\t\t\t\t//get list or table items\n\t\t\t\t\t\tvar aItems = oControl.getItems();\n\n\t\t\t\t\t\t//for each table or list item\n\t\t\t\t\t\taItems.forEach(function(oItem) {\n\n\t\t\t\t\t\t\t//set list item type active or inactive\n\t\t\t\t\t\t\tswitch (bActive) {\n\t\t\t\t\t\t\t\tcase false:\n\t\t\t\t\t\t\t\t\toItem.setType(sap.m.ListType.Inactive);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase true:\n\t\t\t\t\t\t\t\t\toItem.setType(sap.m.ListType.Active);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//logged on person is administrator for organisation\n\t\tisAdministrator: function(sOrganisationID) {\n\n\t\t\t//construct filter for administrator responsibility in selected organisation\n\t\t\tvar oFilter = new sap.ui.model.Filter({\n\t\t\t\tand: true,\n\t\t\t\tfilters: [\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"OrganisationID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: sOrganisationID\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tpath: \"RoleID\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: \"01\" //Administrator\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t//identify whether logged on person is administrator for organisation\n\t\t\tif (this.getOwnerComponent().oResponsibilityList.getBinding(\"items\").filter(oFilter).getLength() > 0) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t},\n\n\t\t//get route ID for service create\n\t\tgetServiceRouteID: function(sServiceTypeID, sAction, sScope) {\n\n\t\t\t//decide on route depending on service type, action and scope\n\t\t\tvar sServiceCreateRouteID;\n\n\t\t\t//by service type ID\n\t\t\tswitch (sServiceTypeID) {\n\n\t\t\t\t//municipal accounts\n\t\t\t\tcase \"MunicipalAccounts\":\n\n\t\t\t\t\t//by municipal accounts service action\n\t\t\t\t\tswitch (sAction) {\n\n\t\t\t\t\t\t//create municipal accounts service\n\t\t\t\t\t\tcase \"Create\":\n\n\t\t\t\t\t\t\t//by municipal accounts service create scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//create municipal accounts service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsPersonCreate\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//create municipal accounts service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsOrganisationCreate\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Create\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//resume municipal accounts service\n\t\t\t\t\t\tcase \"Resume\":\n\n\t\t\t\t\t\t\t//by municipal accounts service create scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//resume municipal accounts service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsPersonCreateResume\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//resume municipal accounts service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsOrganisationCreateResume\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Resume\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//display municipal accounts service\n\t\t\t\t\t\tcase \"Display\":\n\n\t\t\t\t\t\t\t//by municipal accounts service display scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//display municipal accounts service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsPerson\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//display municipal accounts service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceMunicipalAccountsOrganisation\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Display\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//unknown action\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//done with municipal accounts service type\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//supplier self service\n\t\t\t\tcase \"SupplierSelfService\":\n\n\t\t\t\t\t//by municipal accounts service action\n\t\t\t\t\tswitch (sAction) {\n\n\t\t\t\t\t\t//create supplier self service\n\t\t\t\t\t\tcase \"Create\":\n\n\t\t\t\t\t\t\t//by supplier self service create scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//create supplier self service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSPersonCreate\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//create supplier self service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSOrganisationCreate\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Create\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//resume supplier self service\n\t\t\t\t\t\tcase \"Resume\":\n\n\t\t\t\t\t\t\t//by supplier self service create scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//resume supplier self service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSPersonCreateResume\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//resume supplier self service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSOrganisationCreateResume\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Resume\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//display supplier self service\n\t\t\t\t\t\tcase \"Display\":\n\n\t\t\t\t\t\t\t//by supplier self service display scope\n\t\t\t\t\t\t\tswitch (sScope) {\n\n\t\t\t\t\t\t\t\t//display supplier self service for person\n\t\t\t\t\t\t\t\tcase \"Person\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSPerson\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//display supplier self service for organisation\n\t\t\t\t\t\t\t\tcase \"Organisation\":\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"ServiceSUSOrganisation\";\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t//unknown scope\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//done with \"Display\" action\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t//unknown action\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//done with supplier self service type\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//unknown service type\n\t\t\t\tdefault:\n\t\t\t\t\tsServiceCreateRouteID = \"NotFound\";\n\n\t\t\t}\n\n\t\t\t//feedback to caller\n\t\t\treturn sServiceCreateRouteID;\n\n\t\t},\n\n\t\t//press on message popover link to set focus\n\t\tonPressMessagePopoverItemLink: function(oEvent) {\n\n\t\t\t//implemented in controller owning message\n\n\t\t},\n\n\t\t//promise to read entity from the backend\n\t\tpromiseToReadEntity: function(oContext) {\n\n\t\t\t//return promise to read entity from backend\n\t\t\treturn new Promise(function(resolve) {\n\n\t\t\t\t//set context for entity to read from input or view binding\n\t\t\t\tvar oReadContext = oContext;\n\t\t\t\tif (!oReadContext) {\n\t\t\t\t\toReadContext = this.getView().getBindingContext(\"Registration\");\n\t\t\t\t}\n\n\t\t\t\t//re-read entity status from backend\n\t\t\t\tthis._oODataModel.read(oReadContext.getPath(), {\n\n\t\t\t\t\t//read success handler\n\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t//get entity in current status\n\t\t\t\t\t\tvar oEntity = oReadContext.getObject();\n\n\t\t\t\t\t\t//read success resolves promise\n\t\t\t\t\t\tresolve(oEntity);\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//promise to visualize entity status \n\t\tpromiseToVisualizeEntityStatus: function() {\n\n\t\t\t//return promise to read entity from backend\n\t\t\treturn new Promise(function(resolve) {\n\n\t\t\t\t//re-read entity status from backend\n\t\t\t\tthis._oODataModel.read(this.getView().getBindingContext(\"Registration\").getPath(), {\n\n\t\t\t\t\t//read success handler\n\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t//get entity in its current status\n\t\t\t\t\t\tvar oEntity = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t\t\t\t//adobt entity attributes for UI rendering\n\t\t\t\t\t\tthis.adoptEntityAttributes(\"Status\", this._oViewModel);\n\n\t\t\t\t\t\t//set submit button enabled state\n\t\t\t\t\t\tthis.setSubmitButtonEnabledState();\n\n\t\t\t\t\t\t//read success resolves promise\n\t\t\t\t\t\tresolve(oEntity);\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//promise to display refreshed entity data \n\t\tpromiseToDisplayRefreshedEntity: function(oContext, sExpand) {\n\n\t\t\t//return promise to read entity from backend\n\t\t\treturn new Promise(function(resolve) {\n\n\t\t\t\t//re-read (expanded) entity from backend\n\t\t\t\tthis._oODataModel.read(oContext.getPath(), {\n\n\t\t\t\t\t//url parameters: expand \n\t\t\t\t\turlParameters: {\n\t\t\t\t\t\t\"$expand\": sExpand\n\t\t\t\t\t},\n\n\t\t\t\t\t//read success handler\n\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t//get entity in its current status\n\t\t\t\t\t\tvar oEntity = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t\t\t\t//adobt entity attributes for UI rendering\n\t\t\t\t\t\tthis.adoptEntityAttributes(\"Status\", this._oViewModel);\n\n\t\t\t\t\t\t//set submit button enabled state\n\t\t\t\t\t\tthis.setSubmitButtonEnabledState();\n\n\t\t\t\t\t\t//read success resolves promise\n\t\t\t\t\t\tresolve(oEntity);\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//cancel address maintenance\n\t\tonPressAddressCancelButton: function() {\n\n\t\t\t//close popover\n\t\t\tthis.oAddressDialog.close();\n\n\t\t},\n\n\t\t//cancel contact maintenance\n\t\tonPressContactCancelButton: function() {\n\n\t\t\t//close popover\n\t\t\tthis.oContactDialog.close();\n\n\t\t},\n\n\t\t//cancel bank account maintenance\n\t\tonPressBankAccountCancelButton: function() {\n\n\t\t\t//close popover\n\t\t\tthis.oBankAccountDialog.close();\n\n\t\t},\n\n\t\t//cancel certificate maintenance\n\t\tonPressCertificateCancelButton: function() {\n\n\t\t\t//close popover\n\t\t\tthis.oCertificateDialog.close();\n\n\t\t},\n\n\t\t//query whether user has entities in submitted status\n\t\tuserHasSubmittedEntities: function() {\n\n\t\t\t//check for people in submitted status\n\t\t\tif (this.getOwnerComponent().oPersonList.getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\tvalue1: \"1\" //Submitted\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: application data may not refresh\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t//check for organisations in submitted status\n\t\t\tif (this.getOwnerComponent().oOrganisationList.getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\tvalue1: \"1\" //Submitted\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: application data may not refresh\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t//check for suppliers in submitted status\n\t\t\tif (this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\tvalue1: \"1\" //Submitted\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: application data may not refresh\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t//check for services in submitted status\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter([\n\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\tand: false,\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\n\t\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\t\tvalue1: \"1\" //Submitted\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t]).getLength() > 0) {\n\n\t\t\t\t//feedback to caller: application data may not refresh\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t//feedback to caller: application data may refresh from ERP\n\t\t\treturn true;\n\n\t\t},\n\n\t\t//refresh user context from ERP backend\n\t\trefreshUserDataFromERP: function() {\n\n\t\t\t//check that user has no entities in status submitted\n\t\t\tif (!this.userHasSubmittedEntities()) {\n\n\t\t\t\t//message handling: application data may not be refreshed\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageUserDataMayNotRefreshFromERP\"), sap.ui.core.MessageType.Warning);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to refresh from ERP\n\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmRefreshUserERPData\"), {\n\n\t\t\t\t//message box attributes\n\t\t\t\ticon: sap.m.MessageBox.Icon.QUESTION,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"titleConfirmToRefreshDataFromERP\"),\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.NO\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t//confirmed to refresh application data from ERP\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//set view to busy\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t\t\t\t//refresh all data from ERP\n\t\t\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/refreshDataFromERP\", {\n\n\t\t\t\t\t\t\t//url paramters\n\t\t\t\t\t\t\turlParameters: {\n\t\t\t\t\t\t\t\t\"EntityType\": \"User\",\n\t\t\t\t\t\t\t\t\"EntityID\": \"null\",\n\t\t\t\t\t\t\t\t\"RefreshScope\": \"All\"\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t//on request success of ERP data refresh \n\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t//message handling where applicable\n\t\t\t\t\t\t\t\tif (oData.results && oData.results.length > 0) {\n\n\t\t\t\t\t\t\t\t\t//set refresh error strip message\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshUserERPDataFailed\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t\t//no further processing\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//get user info after application data refresh\n\t\t\t\t\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/getUserInfoFromPortal\", {\n\n\t\t\t\t\t\t\t\t\t//url parameters\n\t\t\t\t\t\t\t\t\turlParameters: {\n\t\t\t\t\t\t\t\t\t\t\"clientAppVersion\": \"'0.80'\"\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t//User details retrieved successfully\n\t\t\t\t\t\t\t\t\tsuccess: (function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t\t\t//adopt information about logged on user\n\t\t\t\t\t\t\t\t\t\tvar oUserInfo = oData.getUserInfoFromPortal;\n\n\t\t\t\t\t\t\t\t\t\t//bind with master data entities in user context\n\t\t\t\t\t\t\t\t\t\tthis.getOwnerComponent().bindMasterData();\n\n\t\t\t\t\t\t\t\t\t\t//keep track of info for logged on user\n\t\t\t\t\t\t\t\t\t\tthis.getOwnerComponent().oUserInfo = oUserInfo;\n\n\t\t\t\t\t\t\t\t\t\t//prepare model attributes for view display\n\t\t\t\t\t\t\t\t\t\tthis.prepareHomeViewModelForDisplay(oUserInfo);\n\n\t\t\t\t\t\t\t\t\t\t//set refresh success message\n\t\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshUserERPDataSucceeded\"), sap.ui.core.MessageType\n\t\t\t\t\t\t\t\t\t\t\t.Success);\n\n\t\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t\t}).bind(this)\n\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//refresh entity data from ERP backend\n\t\trefreshEntityDataFromERP: function(sEntityType, sExpand, fnCallBack) {\n\n\t\t\t//get entity in current status\n\t\t\tvar oEntity = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t//construct string of entity ID attribute\n\t\t\tvar sEntityID = sEntityType + \"ID\";\n\n\t\t\t//check entity is not in status submitted\n\t\t\tif (oEntity.EntityStatusID === \"1\") { //Submitted\n\n\t\t\t\t//message handling: refresh not allowed for submitted entity\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshNotForSubmittedEntity\").replace(\"&1\", sEntityType), sap.ui.core\n\t\t\t\t\t.MessageType.Warning);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//check entity has previously been validated\n\t\t\tif (!oEntity.isValidated) {\n\n\t\t\t\t//message handling: refresh only for entity that has previously been validated\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshOnlyForValidatedEntity\").replace(\"&1\", sEntityType), sap.ui.core\n\t\t\t\t\t.MessageType.Warning);\n\n\t\t\t\t//no further processing\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//confirmation dialog to refresh from ERP\n\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmRefreshEntityERPData\").replace(\"&1\", sEntityType), {\n\n\t\t\t\t//message box attributes\n\t\t\t\ticon: sap.m.MessageBox.Icon.QUESTION,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"titleConfirmToRefreshDataFromERP\"),\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.NO\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t//confirmed to refresh entity application data from ERP\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//set view to busy\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\n\n\t\t\t\t\t\t//refresh entity data from ERP\n\t\t\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/refreshDataFromERP\", {\n\n\t\t\t\t\t\t\t//url parameters\n\t\t\t\t\t\t\turlParameters: {\n\t\t\t\t\t\t\t\t\"EntityType\": sEntityType,\n\t\t\t\t\t\t\t\t\"EntityID\": oEntity[sEntityID],\n\t\t\t\t\t\t\t\t\"RefreshScope\": \"All\"\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t//on request success of ERP data refresh \n\t\t\t\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t\t\t\t//message handling where applicable\n\t\t\t\t\t\t\t\tif (oData.results && oData.results.length > 0) {\n\n\t\t\t\t\t\t\t\t\t//set refresh error strip message\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshEntityERPDataFailed\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t\t//no further processing\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//get binding context for entity displayed in view currently\n\t\t\t\t\t\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\n\n\t\t\t\t\t\t\t\t//display refreshed entity data and status visualization\n\t\t\t\t\t\t\t\tthis.promiseToDisplayRefreshedEntity(oContext, sExpand).then(function() {\n\n\t\t\t\t\t\t\t\t\t//execute callback funtion where provided\n\t\t\t\t\t\t\t\t\tif (fnCallBack) {\n\t\t\t\t\t\t\t\t\t\tfnCallBack();\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//set refresh error strip message\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageRefreshEntityERPDataSucceeded\"), sap.ui.core.MessageType\n\t\t\t\t\t\t\t\t\t\t.Success);\n\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//adopt viewModel attributes from entity\n\t\tadoptEntityAttributes: function(sScope, oViewModel) {\n\n\t\t\t//get entity in its current status\n\t\t\tvar oEntity = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t//depending on scope\n\t\t\tswitch (sScope) {\n\n\t\t\t\t//adopt entity status attributes\n\t\t\t\tcase \"Status\":\n\n\t\t\t\t\t//draft\n\t\t\t\t\tif (oEntity.EntityStatusID === \"0\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Warning);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-in-process\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//awaiting approval\n\t\t\t\t\tif (oEntity.EntityStatusID === \"1\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Warning);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-in-process\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//approved by City\n\t\t\t\t\tif (oEntity.EntityStatusID === \"2\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Success);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-positive\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//rejected by City\n\t\t\t\t\tif (oEntity.EntityStatusID === \"3\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Error);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-error\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//revised\n\t\t\t\t\tif (oEntity.EntityStatusID === \"4\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Warning);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-in-process\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//ready to submit\n\t\t\t\t\tif (oEntity.EntityStatusID === \"6\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Success);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://paper-plane\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//incomplete\n\t\t\t\t\tif (oEntity.EntityStatusID === \"7\") {\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityState\", sap.ui.core.ValueState.Warning);\n\t\t\t\t\t\toViewModel.setProperty(\"/statusEntityIcon\", \"sap-icon://status-in-process\");\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\n\t\t//adopt vieModel attributes from component\n\t\tadoptComponentAttributes: function(sScope, oViewModel) {\n\n\t\t\t//depending on scope\n\t\t\tswitch (sScope) {\n\n\t\t\t\t//scope: cobrowsing\n\t\t\t\tcase \"Cobrowse\":\n\n\t\t\t\t\t//cobrowse mode off by default\n\t\t\t\t\toViewModel.setProperty(\"/userInCobrowse\", false);\n\n\t\t\t\t\t//get info about currently logged on user\n\t\t\t\t\tvar oUserInfo = this.getOwnerComponent().oUserInfo;\n\n\t\t\t\t\t//cobrowse mode activated where applicable\n\t\t\t\t\tif (oUserInfo && oUserInfo.CobrowseUserID) {\n\n\t\t\t\t\t\t//set user ID that is being co-browsed\n\t\t\t\t\t\toViewModel.setProperty(\"/userInCobrowse\", true);\n\t\t\t\t\t\tvar sCobrowseUserID = this.getOwnerComponent().oUserInfo.CobrowseUserID;\n\t\t\t\t\t\toViewModel.setProperty(\"/cobrowseUserID\", sCobrowseUserID);\n\n\t\t\t\t\t\t//get access to person entity of user being co-browsed\n\t\t\t\t\t\tvar sPersonObjectPath = \"/\" + this._oODataModel.createKey(\"PersonSet\", {\n\t\t\t\t\t\t\tPersonID: oUserInfo.PersonID\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\n\n\t\t\t\t\t\t//cobrowsed user details not yet loaded from the backend\n\t\t\t\t\t\tif (!oPerson) {\n\n\t\t\t\t\t\t\t//read logged on person from the backend\n\t\t\t\t\t\t\tthis._oODataModel.read(sPersonObjectPath, {\n\n\t\t\t\t\t\t\t\t//logged on person details successfully loaded\n\t\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t\t//prepare view model for cobrowse mode\n\t\t\t\t\t\t\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//cobrowsed user details have already been loaded from the backend \n\t\t\t\t\t\tif (oPerson) {\n\n\t\t\t\t\t\t\t//provide user description as concatenated firstname and surname\n\t\t\t\t\t\t\tvar sUserDescription = oPerson.Name + \" \" + oPerson.Surname;\n\n\t\t\t\t\t\t\t//format user description to ensure title case\n\t\t\t\t\t\t\tsUserDescription = sUserDescription.toLowerCase();\n\t\t\t\t\t\t\tsUserDescription = sUserDescription.replace(/\\b[a-z]/g, function(f) {\n\t\t\t\t\t\t\t\treturn f.toUpperCase();\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//set formatted user description in view model attribute\n\t\t\t\t\t\t\toViewModel.setProperty(\"/cobrowseUserDescription\", '(' + sUserDescription + ')');\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//scope: default\t\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\t\t//create communications list item\n\t\tcreateCommsListItem: function(sId, oContext) {\n\n\t\t\t//local data declaration\n\t\t\tvar sNumberTypeText;\n\t\t\tvar aComboBoxItems = [];\n\t\t\tvar bComboBoxEnabled = false;\n\n\t\t\t//get attribute of this comms item\n\t\t\tvar oCommsEntry = this.oCommsModel.getObject(oContext.sPath);\n\t\t\tif (oCommsEntry.numberType === undefined || oCommsEntry.numberType === \"\") {\n\t\t\t\tbComboBoxEnabled = true;\n\t\t\t}\n\n\t\t\t//derive array of combobox options where not enabled\n\t\t\tif (!bComboBoxEnabled) {\n\t\t\t\tswitch (oCommsEntry.numberType) {\n\t\t\t\t\tcase \"LandLine\":\n\t\t\t\t\t\tsNumberTypeText = \"Land line\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Mobile\":\n\t\t\t\t\t\tsNumberTypeText = \"Mobile\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Fax\":\n\t\t\t\t\t\tsNumberTypeText = \"Fax\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taComboBoxItems = [\n\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\tkey: oCommsEntry.numberType,\n\t\t\t\t\t\ttext: sNumberTypeText\n\t\t\t\t\t})\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t//derive array of combobox options where enabled\n\t\t\tif (bComboBoxEnabled) {\n\n\t\t\t\t//get entity in its current state\n\t\t\t\tvar oEntity = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\n\n\t\t\t\t//compile list of remaining number types\n\t\t\t\tif (!oEntity.PhoneNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"LandLine\",\n\t\t\t\t\t\t\ttext: \"Land line\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tif (!oEntity.MobilePhoneNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"Mobile\",\n\t\t\t\t\t\t\ttext: \"Mobile phone\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tif (!oEntity.FaxNumber) {\n\t\t\t\t\taComboBoxItems.push(\n\t\t\t\t\t\tnew sap.ui.core.Item({\n\t\t\t\t\t\t\tkey: \"Fax\",\n\t\t\t\t\t\t\ttext: \"Fax\"\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//create comms list item with number type, number value and delete option\n\t\t\tvar oCommsListItem = new sap.m.CustomListItem({\n\t\t\t\ttype: \"Inactive\",\n\t\t\t\tcontent: [\n\t\t\t\t\tnew sap.m.ComboBox({\n\t\t\t\t\t\twidth: \"40%\",\n\t\t\t\t\t\tselectedKey: \"{Comms>numberType}\",\n\t\t\t\t\t\tforceSelection: false,\n\t\t\t\t\t\tchange: this.onCommsAttributesChange.bind(this),\n\t\t\t\t\t\tenabled: bComboBoxEnabled,\n\t\t\t\t\t\tselectionChange: this.onCommsAttributesLiveChange.bind(this),\n\t\t\t\t\t\titems: aComboBoxItems\n\t\t\t\t\t}),\n\t\t\t\t\tnew sap.m.Input({\n\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\tplaceholder: \"Enter your number\",\n\t\t\t\t\t\tvalue: \"{Comms>number}\",\n\t\t\t\t\t\tchange: this.onCommsAttributesChange.bind(this),\n\t\t\t\t\t\tliveChange: this.onCommsAttributesLiveChange.bind(this)\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\"),\n\t\t\t\t\tnew sap.ui.core.Icon({\n\t\t\t\t\t\tsrc: \"sap-icon://sys-cancel\",\n\t\t\t\t\t\ttooltip: \"Delete\",\n\t\t\t\t\t\tcolor: \"#E42217\",\n\t\t\t\t\t\tpress: this.onPressCommsItemDeleteButton.bind(this)\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin sapUiSmallMarginTop\")\n\t\t\t\t]\n\n\t\t\t});\n\n\t\t\t//feedback to caller\n\t\t\treturn oCommsListItem;\n\n\t\t},\n\n\t\t//on comms attributes change\n\t\tonCommsAttributesChange: function(oEvent) {\n\n\t\t\t//get changed number type and value\n\t\t\tvar sNumberType = oEvent.getSource().getParent().getAggregation(\"content\")[0].getSelectedKey();\n\t\t\tvar sNumberValue = oEvent.getSource().getParent().getAggregation(\"content\")[1].getValue();\n\n\t\t\t//disable number type combobox where available at this stage\n\t\t\tif (sNumberType) {\n\t\t\t\toEvent.getSource().getParent().getAggregation(\"content\")[0].setEnabled(false);\n\t\t\t}\n\n\t\t\t//update corresponding attribute in entity of ODATA model\n\t\t\tswitch (sNumberType) {\n\t\t\t\tcase \"LandLine\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"PhoneNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Mobile\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"MobilePhoneNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Fax\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"FaxNumber\", sNumberValue, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t},\n\n\t\t//on comms attributes change\n\t\tonCommsAttributesLiveChange: function(oEvent) {\n\n\t\t\t//to implement in controller of entity with comms\n\n\t\t},\n\n\t\t//add new communication item\n\t\tonPressAddCommunicationItemButton: function() {\n\n\t\t\t//get current comms model data\n\t\t\tvar oCommsData = this.oCommsModel.getData();\n\n\t\t\t//up to three possible comms entries\n\t\t\tif (oCommsData.items.length < 3) {\n\n\t\t\t\t//add item to comms view model\n\t\t\t\toCommsData.items.push({\n\t\t\t\t\t\"numberTypeEnabled\": true\n\t\t\t\t});\n\n\t\t\t\t//set comms model to comms list\n\t\t\t\tthis.oCommsModel.setData(oCommsData);\n\n\t\t\t}\n\n\t\t},\n\n\t\t//on press of comms item delete button\n\t\tonPressCommsItemDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar iNumberArrayIndex;\n\n\t\t\t//get current data in comms model\n\t\t\tvar oCommsData = this.oCommsModel.getData();\n\n\t\t\t//get model data index position of comms item to be deleted\n\t\t\tvar sNumberType = oEvent.getSource().getParent().getAggregation(\"content\")[0].getSelectedKey();\n\t\t\toCommsData.items.forEach(function(oNumber, iArrayIndex) {\n\t\t\t\tif (oNumber.numberType === sNumberType) {\n\t\t\t\t\tiNumberArrayIndex = iArrayIndex;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//remove number entry from model data\n\t\t\tif (iNumberArrayIndex > 0) {\n\t\t\t\toCommsData.items.splice(iNumberArrayIndex, 1);\n\t\t\t} else if (iNumberArrayIndex === 0) {\n\t\t\t\toCommsData.items.shift();\n\t\t\t} else if (iNumberArrayIndex === undefined) {\n\t\t\t\toCommsData.items.pop();\n\t\t\t}\n\n\t\t\t//update ODATA model\n\t\t\tswitch (sNumberType) {\n\t\t\t\tcase \"LandLine\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"PhoneNumber\", null, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Mobile\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"MobilePhoneNumber\", null, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Fax\":\n\t\t\t\t\tthis._oODataModel.setProperty(\"FaxNumber\", null, this.getView().getBindingContext(\"Registration\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t//set new data to comms model\n\t\t\tthis.oCommsModel.setData(oCommsData);\n\n\t\t\t//trigger live change\n\t\t\tthis.onCommsAttributesLiveChange();\n\n\t\t},\n\n\t\t//set view action controls enabled\n\t\tsetViewActionControlsEnabled: function(bEnabled) {\n\n\t\t\t//switch enabled state of check action button\n\t\t\tthis._oViewModel.setProperty(\"/btnCheckEntityEnabled\", bEnabled);\n\n\t\t\t//switch enabled state of save button\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", bEnabled);\n\t\t\t\n\t\t\t//switch enabled state of save button\n\t\t\tthis._oViewModel.setProperty(\"/btnDeleteEntityEnabled\", bEnabled);\n\n\t\t\t//switch enabled state of support menu button\n\t\t\tthis._oViewModel.setProperty(\"/mbtnSupportEnabled\", bEnabled);\n\n\t\t},\n\n\t\t//reset view for display of entity\n\t\tresetView: function(aForms) {\n\n\t\t\t//reset all messages in message manager where applicable\n\t\t\tif (this._oMessageManager) {\n\t\t\t\tthis._oMessageManager.removeAllMessages();\n\t\t\t}\n\n\t\t\t//reset value state of input controls \n\t\t\tthis.resetValueState(aForms);\n\n\t\t},\n\n\t\t//reset value state of form input fields\n\t\tresetValueState: function(aForms) {\n\n\t\t\t//reset value state of input controls \n\t\t\taForms.forEach(function(oForm) {\n\n\t\t\t\t//for each form input field\n\t\t\t\tthis.getFormInputFields(oForm).forEach(function(item) {\n\n\t\t\t\t\t//reset value state for single value input controls\n\t\t\t\t\tif (item.oControl.getMetadata().getName() !== \"sap.m.List\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.Table\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.Switch\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.CheckBox\" &&\n\t\t\t\t\t\titem.oControl.getMetadata().getName() !== \"sap.m.UploadCollection\") {\n\t\t\t\t\t\titem.oControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value state for list input controls\n\t\t\t\t\tif (item.oControl.getMetadata().getName() === \"sap.m.List\") {\n\n\t\t\t\t\t\t//in each list item reset value state for all single value input controls \n\t\t\t\t\t\titem.oControl.getItems().forEach(function(oListItem) {\n\t\t\t\t\t\t\toListItem.getAggregation(\"content\").forEach(function(oListItemControl) {\n\t\t\t\t\t\t\t\tif (oListItemControl.setValueState) {\n\t\t\t\t\t\t\t\t\toListItemControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t//terminate user action\n\t\tterminateUserAction: function() {\n\n\t\t\t//reset all changes\n\t\t\tthis._oODataModel.resetChanges();\n\n\t\t\t//forget navigation data\n\t\t\tdelete this._oNavData;\n\n\t\t\t//view is no longer busy\n\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t//remove all messages from the message manager\n\t\t\tthis._oMessageManager.removeAllMessages();\n\n\t\t\t//force exit through error dialog open on component\n\t\t\tif (this.getOwnerComponent().oErrorDialog) {\n\t\t\t\tsap.ui.getCore().byId(\"buttonErrorDialogClose\").setVisible(false);\n\t\t\t\tsap.ui.getCore().byId(\"buttonErrorDialogExit\").setVisible(true);\n\t\t\t}\n\n\t\t\t//force exit where unexpectedly no error dialog is open\n\t\t\telse {\n\t\t\t\tthis.getOwnerComponent().navigateBack(\"Home\");\n\t\t\t}\n\n\t\t},\n\n\t\t//contains responsibilities not ready for submit\n\t\thasResponsibilitiesNotReadyForSubmit: function(oResponsibilityTable) {\n\n\t\t\t//local data declaration\n\t\t\tvar aPersonNotReadyForSubmit = [];\n\n\t\t\t//for each responsibility\n\t\t\toResponsibilityTable.getItems().forEach(function(oResponsibilityItem) {\n\n\t\t\t\t//get responsibility\n\t\t\t\tvar oResponsibility = oResponsibilityItem.getBindingContext(\"Registration\").getObject();\n\n\t\t\t\t//construct object path for person\n\t\t\t\tvar sPersonObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"PersonSet\", {\n\t\t\t\t\tPersonID: oResponsibility.PersonID\n\t\t\t\t});\n\n\t\t\t\t//get person entity\n\t\t\t\tvar oPerson = this._oODataModel.getObject(sPersonObjectPath);\n\n\t\t\t\t//include in return parameter where person status unsuitable for submit\t\n\t\t\t\tif (oPerson && (\n\t\t\t\t\t\toPerson.EntityStatusID === \"0\" ||\n\t\t\t\t\t\toPerson.EntityStatusID === \"3\" ||\n\t\t\t\t\t\toPerson.EntityStatusID === \"4\" ||\n\t\t\t\t\t\toPerson.EntityStatusID === \"7\")) {\n\t\t\t\t\taPersonNotReadyForSubmit.push(oPerson);\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\n\t\t\t//feedback to caller\n\t\t\treturn aPersonNotReadyForSubmit;\n\n\t\t},\n\n\t\t//render OData error response\n\t\trenderODataErrorResponse: function(oResponse) {\n\n\t\t\t//for exception handling\n\t\t\ttry {\n\n\t\t\t\t//format response text for display in error message details\n\t\t\t\tvar oResponseText = JSON.parse(oResponse.responseText);\n\n\t\t\t\t//adopt error attributes into message\t\n\t\t\t\tvar oMessage = {};\n\t\t\t\toMessage.MessageText = oResponseText.error.message.value;\n\t\t\t\toMessage.MessageType = \"Error\";\n\n\t\t\t\t//push to messages array\n\t\t\t\tvar aMessages = [];\n\t\t\t\taMessages.push(oMessage);\n\n\t\t\t\t//set message to message popover button\n\t\t\t\tthis.setEntityMessages(aMessages);\n\n\t\t\t\t//set message model attribute that leading message is contained\n\t\t\t\tthis._oMessageManager.containsLeadingMessage = true;\n\n\t\t\t\t//keep OData error as leading message for a while and then demote\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthis._oMessageManager.containsLeadingMessage = false;\n\t\t\t\t}.bind(this), 5000);\n\n\t\t\t\t//hint to OData error response in strip message\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageErrorsInODataResponse\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//set view to no longer busy\n\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t//exception handling\n\t\t\t} catch (exception) {\n\t\t\t\t//explicitly none\n\t\t\t}\n\n\t\t},\n\n\t\t//check for and visualize errors in BatchResponses\n\t\thasODataBatchErrorResponse: function(aBatchResponses) {\n\n\t\t\t//local data declaration\n\t\t\tvar oMessage = {};\n\t\t\tvar aMessages = [];\n\n\t\t\t//no further processing where input not type compliant\n\t\t\tif (!Array.isArray(aBatchResponses)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//for each batchResponse\n\t\t\taBatchResponses.forEach(function(oBatchResponse) {\n\n\t\t\t\t//where a batchResponse is contained\n\t\t\t\tif (oBatchResponse.response) {\n\n\t\t\t\t\t//by type of HTTP ok code\n\t\t\t\t\tswitch (oBatchResponse.response.statusCode) {\n\n\t\t\t\t\t\t//where HTTP ok code is 400 \"Bad Request\"\n\t\t\t\t\t\tcase \"400\":\n\n\t\t\t\t\t\t\t//interprese backend error\n\t\t\t\t\t\t\tif (oBatchResponse.response.body) {\n\n\t\t\t\t\t\t\t\t//for exception handling\n\t\t\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t\t\t//parse response body containing error\n\t\t\t\t\t\t\t\t\tvar oResponseBody = JSON.parse(oBatchResponse.response.body);\n\n\t\t\t\t\t\t\t\t\t//construct message\n\t\t\t\t\t\t\t\t\tif (oResponseBody.error) {\n\n\t\t\t\t\t\t\t\t\t\t//adopt error attributes into message\t\n\t\t\t\t\t\t\t\t\t\toMessage.MessageText = oResponseBody.error.message.value;\n\t\t\t\t\t\t\t\t\t\toMessage.MessageCode = oResponseBody.error.code;\n\t\t\t\t\t\t\t\t\t\toMessage.MessageType = \"Error\";\n\n\t\t\t\t\t\t\t\t\t\t//push to messages array\n\t\t\t\t\t\t\t\t\t\taMessages.push(oMessage);\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//exception handling: failed to parse\n\t\t\t\t\t\t\t\t} catch (oException) {\n\t\t\t\t\t\t\t\t\t//explicitly none\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t//message handling\n\t\t\tif (aMessages.length > 0) {\n\n\t\t\t\t//set messages to message popover button\n\t\t\t\tthis.setEntityMessages(aMessages);\n\n\t\t\t\t//set message model attribute that leading message is contained\n\t\t\t\tthis._oMessageManager.containsLeadingMessage = true;\n\n\t\t\t\t//keep OData error as leading message for a while and then demote\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthis._oMessageManager.containsLeadingMessage = false;\n\t\t\t\t}.bind(this), 5000);\n\n\t\t\t\t//hint to OData error response in strip message\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageErrorsInODataResponse\"), sap.ui.core.MessageType.Error);\n\n\t\t\t\t//set view to no longer busy\n\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\n\n\t\t\t\t//feedback to caller: errors occured\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t//feedback to caller: no errors occured\n\t\t\treturn false;\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/supplier/Supplier.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/Base.controller\",\r\n\t\"capetown/gov/registration/util/DocumentRequestUtils\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, DocumentRequestUtils, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Supplier Controller\r\n\t * @description Prototype for SupplierCreate and SupplierList controllers\r\n\t * @module Supplier\r\n\t * @augments module:Base\r\n\t */\r\n\treturn BaseController.extend(\"capetown.gov.registration.controller.supplier.Supplier\", {\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPatternMatched: function(oEvent) {\r\n\r\n\t\t\t//Initialize variables\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", []);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnDeleteEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", false);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sap.m.ButtonType.Transparent);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"titleUpdateSupplier\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextSubmit\"));\r\n\r\n\t\t\t//prepare view model for cobrowse mode\r\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\r\n\r\n\t\t\t//get data provided for navigation for display of this view\r\n\t\t\tthis._oNavData = oEvent.getParameter(\"data\");\r\n\r\n\t\t\t//disable service add feature if supplier is rendered from service create\r\n\t\t\tif (/Service.*Create/.test(this._oNavData.fromTarget)) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/cboxsupplierServiceTypesVisible\", false);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/cboxsupplierServiceTypesVisible\", true);\r\n\t\t\t}\r\n\r\n\t\t\t//ensure to wait for metadata loaded when landing with deep link\r\n\t\t\tif (this._oODataModel.oMetadata.isLoaded()) {\r\n\r\n\t\t\t\t//display supplier view now\r\n\t\t\t\tthis.prepareSupplierViewForDisplay();\r\n\r\n\t\t\t\t//navigating into supplier with deep link\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//bind master data\r\n\t\t\t\tthis.getOwnerComponent().bindMasterData();\r\n\r\n\t\t\t\t//display supplier view after metadata has loaded\r\n\t\t\t\tthis._oODataModel.oMetadata.loaded().then(function() {\r\n\t\t\t\t\tthis.prepareSupplierViewForDisplay();\r\n\t\t\t\t}.bind(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//prepare view for display\r\n\t\tprepareSupplierViewForDisplay: function() {\r\n\r\n\t\t\t//Create object path for an existing OData model instance\r\n\t\t\tvar sSupplierKey = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\r\n\t\t\t\tSupplierID: this._oNavData.SupplierID\r\n\t\t\t});\r\n\r\n\t\t\t//prepare view attributes when in context of other entity\r\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.fromTarget) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextContinue\"));\r\n\t\t\t}\r\n\r\n\t\t\t//prepare view attributes when navigating to specified form\r\n\t\t\tif (this._oNavData.Form) {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityText\", this._oResourceBundle.getText(\"btnSubmitEntityTextContinue\"));\r\n\t\t\t\tthis.getView().byId(\"itabSupplier\").setSelectedKey(this._oNavData.Form);\r\n\t\t\t}\r\n\r\n\t\t\t//Set Binding context of the view to existing ODataModel instance \r\n\t\t\tthis._oODataModel.createBindingContext(sSupplierKey, null, {\r\n\t\t\t\texpand: \"toPerson,toOrganisation,toBEEClassification,toDocuments,toContacts,toBankAccounts,toAddresses,toCertificates,toDeclarations\"\r\n\t\t\t}, function(oSupplierContext) {\r\n\r\n\t\t\t\t//get supplier object in its current state\r\n\t\t\t\tif (oSupplierContext) {\r\n\t\t\t\t\tvar oSupplier = oSupplierContext.getObject();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//prepare for display where no such vendor\r\n\t\t\t\tif (!oSupplierContext || !oSupplier.SupplierID) {\r\n\r\n\t\t\t\t\t//disable view controls for input and action\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t//let controller disable entity submit button\r\n\t\t\t\t\tthis.setSubmitButtonEnabledState();\r\n\r\n\t\t\t\t\t//message handling: no such supplier in your user context\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoSupplierWithThisID\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t//view no longer busy\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t//no further processing\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//reset view for display of entity\r\n\t\t\t\tthis.resetView([\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t\t]);\r\n\r\n\t\t\t\t//set new binding context\r\n\t\t\t\tthis.getView().setBindingContext(oSupplierContext, \"Registration\");\r\n\r\n\t\t\t\t//bind BEE classification attributes as two way updates over navigational attribute is not supported\r\n\t\t\t\tvar oBEEClassification = this._oODataModel.getObject(oSupplierContext.getPath() + \"/toBEEClassification\");\r\n\t\t\t\tvar sBEEClassificationKey = \"/\" + this.getModel(\"Registration\").createKey(\"BEEClassificationSet\", {\r\n\t\t\t\t\tBEEClassificationID: oBEEClassification.BEEClassificationID\r\n\t\t\t\t});\r\n\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\").bindElement({\r\n\t\t\t\t\tpath: sBEEClassificationKey,\r\n\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//make available the array of selected industry keys\r\n\t\t\t\tif (oSupplier.IndustryKeys && oSupplier.IndustryKeys.length > 0) {\r\n\t\t\t\t\tvar aIndustryKeys = oSupplier.IndustryKeys.split(\",\");\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", aIndustryKeys);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set bank input control view model\r\n\t\t\t\tthis.setBanksModel();\r\n\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t\t\t//prepare document request document type model\r\n\t\t\t\tDocumentRequestUtils.setDocumentRequestsModel(this, \"SupplierID\");\r\n\r\n\t\t\t\t//visualize supplier entity status\r\n\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t//set entity notification where entity still in approved/ rejected status\r\n\t\t\t\tif (oSupplier.EntityStatusID === \"2\" || oSupplier.EntityStatusID === \"3\") {\r\n\t\t\t\t\tthis.setEntityNotification(\"SupplierID\", oSupplier.SupplierID);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on admin rights for this entity\r\n\t\t\t\tif (oSupplier.isAdministered) {\r\n\t\t\t\t\tthis.setViewControlsEnabled(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoAdminRightsSupplierDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set edit mode depending on entity status\r\n\t\t\t\tif (oSupplier.EntityStatusID === \"1\") { //submitted\r\n\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInSubmittedStatusSupplierDisplayOnly\"),\r\n\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//enable BEE form input under certain conditions \r\n\t\t\t\tif (this._oNavData.Form === \"B-BBEE\") {\r\n\r\n\t\t\t\t\t//for editable entity where logged on user does not have admin rights\r\n\t\t\t\t\tif (!oSupplier.isAdministered && !(oSupplier.EntityStatusID === \"1\")) {\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoAdminRightsSupplierLimitedChangesOnly\"),\r\n\t\t\t\t\t\t\tsap.ui.core.MessageType.Information);\r\n\t\t\t\t\t\tthis.setFormInputControlsEnabled([this.getView().byId(\"formSupplierBEEClassification\")], true);\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityEnabled\", true);\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/btnCheckEntityEnabled\", true);\r\n\t\t\t\t\t\tthis.setViewControlsEnabled(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//view is no longer busy\r\n\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\r\n\t\t//navigate to person\r\n\t\tonPressSupplierObjectHeaderTitle: function() {\r\n\r\n\t\t\t//get organisation related to this vendor\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//navigate to organisation\r\n\t\t\tif (oSupplier.OrganisationID) {\r\n\t\t\t\tthis.getRouter().navTo(\"Organisation\", {\r\n\t\t\t\t\tOrganisationID: oSupplier.OrganisationID\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//navigate to person\r\n\t\t\tif (oSupplier.PersonID) {\r\n\t\t\t\tthis.getRouter().navTo(\"Person\", {\r\n\t\t\t\t\tPersonID: oSupplier.OrganisationID\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//event handler for Supplier Person attributes liveChange event\r\n\t\tonSupplierAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//for change stemming from industries input\r\n\t\t\tif (/mCBoxSupplierIndustries/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//get selected industry keys\r\n\t\t\t\tvar sIndustryKeys = \"\";\r\n\t\t\t\tvar mCBoxSupplierIndustries = this.getView().byId(\"mCBoxSupplierIndustries\");\r\n\t\t\t\tvar aIndustryKeys = mCBoxSupplierIndustries.getSelectedKeys();\r\n\t\t\t\taIndustryKeys.forEach(function(sIndustryID) {\r\n\t\t\t\t\tif (sIndustryKeys !== \"\") {\r\n\t\t\t\t\t\tsIndustryKeys = sIndustryKeys + \",\" + sIndustryID;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsIndustryKeys = sIndustryID;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//adopt (possibly) changed industry keys into supplier entity\r\n\t\t\t\tthis._oODataModel.setProperty(\"IndustryKeys\", sIndustryKeys, this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//for change stemming from subcouncil attribute\r\n\t\t\tif (/cboxSubCouncil/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//filter ward by selected subcouncil\r\n\t\t\t\tthis.getView().byId(\"cboxWard\").getBinding(\r\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"WardID\",\r\n\t\t\t\t\toperator: \"StartsWith\",\r\n\t\t\t\t\tvalue1: this.getView().byId(\"cboxSubCouncil\").getSelectedKey() + \"/\"\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t//remove current ward to force new selection\r\n\t\t\t\tthis.getView().byId(\"cboxWard\").setSelectedItem(null);\r\n\r\n\t\t\t\t//set ward form element to visible\r\n\t\t\t\tthis.getView().byId(\"felemWard\").setVisible(false);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//for change stemming from 'is community supplier' attribute\r\n\t\t\tif (/switchIsCommunitySupplier/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//not a community supplier, set ui control attributes so they are not declared missing input\r\n\t\t\t\tif (!this.getView().byId(\"switchIsCommunitySupplier\").getState()) {\r\n\t\t\t\t\tthis.getView().byId(\"labelSubCouncil\").setRequired(false);\r\n\t\t\t\t\tthis.getView().byId(\"cboxSubCouncil\").setSelectedItem(null);\r\n\t\t\t\t\tthis.getView().byId(\"felemWard\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"cboxWard\").setSelectedItem(null);\r\n\r\n\t\t\t\t\t//is community supplier, set subcouncil to required\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getView().byId(\"labelSubCouncil\").setRequired(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//validate form input\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierAttributes\")], oEvent.getSource());\r\n\r\n\t\t\t//refresh view model for document input control\t\t\t\r\n\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t},\r\n\r\n\t\t//Supplier address validation\r\n\t\tonAddressAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//toggle region visibility depending on country selected\r\n\t\t\tif (/cboxAddressCountries/.test(oEvent.getSource().getId())) {\r\n\t\t\t\tif (sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey() !== \"ZA\") {\r\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressRegions\").setSelectedKey(null);\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//validate form input\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//Supplier certificate validation\r\n\t\tonCertificateAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//flag certificate expiry date as invalid where applicable\r\n\t\t\tif (oEvent.getSource().getId() === \"dpickCertificateExpiryDate\") {\r\n\t\t\t\toEvent.getSource().hasInvalidEntry = false;\r\n\t\t\t\tvar bDateIsValid = oEvent.getParameters().valid;\r\n\t\t\t\tif (!bDateIsValid) {\r\n\t\t\t\t\toEvent.getSource().hasInvalidEntry = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//validate form input\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formCertificate\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//checks whether supplier attribute input is duplicate\r\n\t\tisDuplicateInputSupplierAttribute: function(sUIControlID, sAttributeID) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar bIsDuplicate;\r\n\r\n\t\t\t//check for possible supplier duplicate by income tax number\r\n\t\t\tif (this.getView().byId(sUIControlID).getValue()) {\r\n\r\n\t\t\t\t//get candidates that could be duplicates by income tax number\r\n\t\t\t\tvar aDuplicateCandidates = this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tand: true,\r\n\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: sAttributeID,\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: this.getView().byId(sUIControlID).getValue()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})).getContexts();\r\n\r\n\t\t\t\t//further checks for duplicate candidates\r\n\t\t\t\tif (aDuplicateCandidates.length > 0) {\r\n\r\n\t\t\t\t\t//for each duplicate candidate\r\n\t\t\t\t\taDuplicateCandidates.forEach(function(oContext) {\r\n\r\n\t\t\t\t\t\t//get supplier attributes\r\n\t\t\t\t\t\tvar oSupplier = oContext.getObject();\r\n\r\n\t\t\t\t\t\t//candidate is confirmed duplicate where sole proprietor\r\n\t\t\t\t\t\tif (!oSupplier.OrganisationID) {\r\n\t\t\t\t\t\t\tbIsDuplicate = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//duplicate candidate is supplier organisation\r\n\t\t\t\t\t\tif (oSupplier.OrganisationID) {\r\n\r\n\t\t\t\t\t\t\t//create key to organisation in OData model\r\n\t\t\t\t\t\t\tvar sOrganisationKey = this._oODataModel.createKey(\"OrganisationSet\", {\r\n\t\t\t\t\t\t\t\tOrganisationID: oSupplier.OrganisationID\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//get attributes of underlying organisation\r\n\t\t\t\t\t\t\tvar oOrganisation = this._oODataModel.getObject(\"/\" + sOrganisationKey);\r\n\r\n\t\t\t\t\t\t\t//candidate is confirmed duplicate as underlying organisation is headoffice \r\n\t\t\t\t\t\t\tif (oOrganisation && oOrganisation.RelationshipTypeID === \"01\") {\r\n\t\t\t\t\t\t\t\tbIsDuplicate = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn bIsDuplicate;\r\n\r\n\t\t},\r\n\r\n\t\t//check whether form input contains duplicate entry\r\n\t\tisDuplicateInput: function(aForms) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aDuplicateInputFormFields = [];\r\n\r\n\t\t\t//validate form input\r\n\t\t\taForms.forEach(function(oForm) {\r\n\r\n\t\t\t\t//get form ID for further reference\r\n\t\t\t\tvar sFormID = oForm.getId().match(/[^-]*$/)[0];\r\n\r\n\t\t\t\t//supplier attributes form\r\n\t\t\t\tif (/formSupplierAttributes/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//check for possible supplier duplicate by trading as name\r\n\t\t\t\t\tif (this.getView().byId(\"inputTradingAsName\").getValue() && this.getOwnerComponent().oSupplierList.getBinding(\"items\").filter(\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tand: true,\r\n\t\t\t\t\t\t\t\tfilters: [new sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\")\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"NE\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: \"T\" //Transient\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\t\t\tpath: \"TradingAsName\",\r\n\t\t\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\t\t\tvalue1: this.getView().byId(\"inputTradingAsName\").getValue()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t})).getLength() > 0) {\r\n\r\n\t\t\t\t\t\t//set value state and message for duplicate supplier trading as name\r\n\t\t\t\t\t\tvar oFormField = {};\r\n\t\t\t\t\t\toFormField.sFormID = sFormID;\r\n\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputTradingAsName\");\r\n\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateSupplierTradingAsName\"));\r\n\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//where an income tax number has been provided\r\n\t\t\t\t\tif (this.getView().byId(\"inputIncomeTaxNumber\").getValue()) {\r\n\r\n\t\t\t\t\t\t//check for possible supplier duplicate by income tax number\r\n\t\t\t\t\t\tif (this.isDuplicateInputSupplierAttribute(\"inputIncomeTaxNumber\", \"IncomeTaxNbr\")) {\r\n\r\n\t\t\t\t\t\t\t//user already has a supplier with this income tax number\r\n\t\t\t\t\t\t\toFormField = {};\r\n\t\t\t\t\t\t\toFormField.sFormID = sFormID;\r\n\t\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputIncomeTaxNumber\");\r\n\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateSupplierIncomeTaxNumber\"));\r\n\t\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//where a VAT registration number has been provided\r\n\t\t\t\t\tif (this.getView().byId(\"inputVATRegistrationNumber\").getValue()) {\r\n\r\n\t\t\t\t\t\t//check for possible supplier duplicate by income tax number\r\n\t\t\t\t\t\tif (this.isDuplicateInputSupplierAttribute(\"inputVATRegistrationNumber\", \"VATRegistrationNbr\")) {\r\n\r\n\t\t\t\t\t\t\t//user already has a supplier with this income tax number\r\n\t\t\t\t\t\t\toFormField = {};\r\n\t\t\t\t\t\t\toFormField.sFormID = sFormID;\r\n\t\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputVATRegistrationNumber\");\r\n\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateSupplierVATRegistrationNumber\"));\r\n\t\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//where an CSD number has been provided\r\n\t\t\t\t\tif (this.getView().byId(\"inputCSDNumber\").getValue()) {\r\n\r\n\t\t\t\t\t\t//check for possible supplier duplicate by income tax number\r\n\t\t\t\t\t\tif (this.isDuplicateInputSupplierAttribute(\"inputCSDNumber\", \"CSDNumber\")) {\r\n\r\n\t\t\t\t\t\t\t//user already has a supplier with this income tax number\r\n\t\t\t\t\t\t\toFormField = {};\r\n\t\t\t\t\t\t\toFormField.sFormID = sFormID;\r\n\t\t\t\t\t\t\toFormField.oControl = this.getView().byId(\"inputCSDNumber\");\r\n\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"messageDuplicateSupplierCSDNumber\"));\r\n\t\t\t\t\t\t\taDuplicateInputFormFields.push(oFormField);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn aDuplicateInputFormFields;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\t\thasInvalidInput: function(aForms, oControl) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aInvalidFormFields = [];\r\n\r\n\t\t\t//validate form input\r\n\t\t\taForms.forEach(function(oForm) {\r\n\r\n\t\t\t\t//get all form fields\r\n\t\t\t\tvar aFormFields = this.getFormInputFields(oForm);\r\n\r\n\t\t\t\t//reduce validation to requested control where applicable\r\n\t\t\t\tif (oControl) {\r\n\t\t\t\t\tvar aFormFieldsTmp = aFormFields;\r\n\t\t\t\t\taFormFields = [];\r\n\t\t\t\t\tfor (var i = 0; i < aFormFieldsTmp.length; i = i + 1) {\r\n\t\t\t\t\t\tif (aFormFieldsTmp[i].oControl === oControl) {\r\n\t\t\t\t\t\t\taFormFields.push(aFormFieldsTmp[i]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier attributes\r\n\t\t\t\tif (/formSupplierAttributes/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//verify Central Supplier Database Number\r\n\t\t\t\t\t\t\tcase \"inputCSDNumber\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered value is a valid CSD number\r\n\t\t\t\t\t\t\t\tif (oFormField.oControl.getValue() && !this.isValidCSDRegistrationNumber(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidCSDRegistrationNumberEntry\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//only allowed to set maximum of 5 industries\r\n\t\t\t\t\t\t\tcase \"mCBoxSupplierIndustries\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered value is a number\r\n\t\t\t\t\t\t\t\tif (this._oViewModel.getProperty(\"/aIndustryKeys\").length > 5) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputMaxFiveIndustries\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//VAT registration number\r\n\t\t\t\t\t\t\tcase \"inputVATRegistrationNumber\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered number is a valid business partner ID\r\n\t\t\t\t\t\t\t\tif (oFormField.oControl.getValue() && !this.isValidVATRegistrationNumber(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidVATRegistrationNumberEntry\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier documents form\r\n\t\t\t\tif (/formSupplierDocuments/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of supplier person documents\r\n\t\t\t\t\t\t\tcase \"ucSupplierDocUploadCollection\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxSupplierDocumentTypes\"), \"DocumentType\", \"invalidInvalidDocuments\", \"Document types\", \"DocumentInputControl\",\r\n\t\t\t\t\t\t\t\t\tthis.getView().getModel(\"DocumentInputControl\")));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier contact form\r\n\t\t\t\tif (/formContact/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//phone and fax numbers\r\n\t\t\t\t\t\t\tcase \"inputContactFaxNumber\":\r\n\t\t\t\t\t\t\tcase \"inputContactPhoneNumber\":\r\n\t\t\t\t\t\t\tcase \"inputContactMobileNumber\":\r\n\r\n\t\t\t\t\t\t\t\t//check telephone number contains only digits after stripping all non numeric content\r\n\t\t\t\t\t\t\t\tif (oFormField.oControl.getValue() !== \"\" && !this.isValidPhoneNumber(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidPhoneNumberEntry\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//email address\r\n\t\t\t\t\t\t\tcase \"inputContactEMailAddress\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered value is a valid south african postal code\r\n\t\t\t\t\t\t\t\tif (!this.isValidEMailAddress(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidEMailAddressEntry\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier BEE classification form\r\n\t\t\t\tif (/formSupplierBEEClassification/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//percentage\r\n\t\t\t\t\t\t\tcase \"inputBOwnPercentage\":\r\n\t\t\t\t\t\t\tcase \"inputBWOwnPercentage\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered values are valid percentage values\r\n\t\t\t\t\t\t\t\tif (isNaN(oFormField.oControl.getValue()) || oFormField.oControl.getValue() > 100 || oFormField.oControl.getValue() < 0) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(\"Enter a valid percentage value\");\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//certificate expiry date input\r\n\t\t\t\t\t\t\tcase \"inputBEEClassifExpiryDate\":\r\n\t\t\t\t\t\t\t\tif (oFormField.oControl.hasInvalidEntry) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputDate\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier contacts form\r\n\t\t\t\tif (/formSupplierContacts/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of supplier contacts\r\n\t\t\t\t\t\t\tcase \"tabSupplierContacts\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxSupplierContactTypes\"),\r\n\t\t\t\t\t\t\t\t\t\"ContactTypeID\", \"invalidInvalidContacts\", \"Contact types\"));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//address\r\n\t\t\t\tif (/formAddress/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//Postal code\r\n\t\t\t\t\t\t\tcase \"inputAddressPostalCode\":\r\n\t\t\t\t\t\t\tcase \"inputAddressPOBoxPostalCode\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered value is a valid south african postal code\r\n\t\t\t\t\t\t\t\tif (isNaN(oFormField.oControl.getValue()) || oFormField.oControl.getValue().length !== 4) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(\"This does not seem to be a valid postal code\");\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier addresses form\r\n\t\t\t\tif (/formSupplierAddresses/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of organisation addresses\r\n\t\t\t\t\t\t\tcase \"tabSupplierAddresses\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxSupplierAddressTypes\"),\r\n\t\t\t\t\t\t\t\t\t\"AddressTypeID\", \"invalidInvalidAddresses\", \"Address types\"));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//bank account form\r\n\t\t\t\tif (/formBankAccount/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//bank account number must be ... a number\r\n\t\t\t\t\t\t\tcase \"inputBankAccountNumber\":\r\n\r\n\t\t\t\t\t\t\t\t//check entered value is a number\r\n\t\t\t\t\t\t\t\tif (isNaN(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputNotANumber\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//branch code must be a six digit number\t\r\n\t\t\t\t\t\t\tcase \"inputBankBranchCode\":\r\n\t\t\t\t\t\t\t\tif (!this.isValidBankBranchCode(oFormField.oControl.getValue())) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputBankBranchCode\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier bank accounts form\r\n\t\t\t\tif (/formSupplierBankAccounts/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of supplier bank accounts\r\n\t\t\t\t\t\t\tcase \"tabSupplierBankAccounts\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxBankAccountPurpose\"),\r\n\t\t\t\t\t\t\t\t\t\"BankAccountPurposeID\", \"invalidInvalidBankAccounts\", \"Account purpose\"));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//certificate form\r\n\t\t\t\tif (/formCertificate/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//certificate expiry date input\r\n\t\t\t\t\t\t\tcase \"dpickCertificateExpiryDate\":\r\n\t\t\t\t\t\t\t\tif (oFormField.oControl.hasInvalidEntry) {\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\t\t\t\t\t\toFormField.oControl.setValueStateText(this._oResourceBundle.getText(\"invalidInputDate\"));\r\n\t\t\t\t\t\t\t\t\taInvalidFormFields.push(oFormField);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier certificates form\r\n\t\t\t\tif (/formSupplierCertificates/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of supplier certificates\r\n\t\t\t\t\t\t\tcase \"tabSupplierCertificates\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxSupplierCertificateTypes\"),\r\n\t\t\t\t\t\t\t\t\t\"CertificateTypeID\", \"invalidInvalidCertificates\", \"Certificate types\"));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//supplier declarations form\r\n\t\t\t\tif (/formSupplierDeclarations/.test(oForm.getId())) {\r\n\r\n\t\t\t\t\t//for each field on this form\r\n\t\t\t\t\taFormFields.forEach(function(oFormField) {\r\n\r\n\t\t\t\t\t\t//by field\r\n\t\t\t\t\t\tswitch (oFormField.sId) {\r\n\r\n\t\t\t\t\t\t\t//table of supplier certificates\r\n\t\t\t\t\t\t\tcase \"tabSupplierDeclarations\":\r\n\t\t\t\t\t\t\t\taInvalidFormFields = aInvalidFormFields.concat(this.hasIncorrectCardinality(oFormField, this.getView().byId(\r\n\t\t\t\t\t\t\t\t\t\t\"cboxSupplierDeclarationTypes\"),\r\n\t\t\t\t\t\t\t\t\t\"DeclarationTypeID\", \"invalidInvalidDeclarations\", \"Declaration types\"));\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t//unvalidated fields\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this));\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn aInvalidFormFields;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Person\r\n\t\t */\r\n\t\tonUploadCollectionChange: function(oEvent) {\r\n\r\n\t\t\t//Get upload collection from event source\r\n\t\t\tvar oUploadCollection = oEvent.getSource();\r\n\t\t\tvar oCBoxDocumentTypes = this.getView().byId(\"cboxSupplierDocumentTypes\");\r\n\r\n\t\t\t//Get attributes of file just uploaded\r\n\t\t\tvar oParameters = oEvent.getParameters();\r\n\r\n\t\t\t//Add upload collection parameter pertaining to security token\r\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\tvalue: \"securityTokenFromModel\"\r\n\t\t\t});\r\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\r\n\r\n\t\t\t//Prevent instant upload by FileUploader (line 970, debug source)\r\n\t\t\toUploadCollection._oFileUploader.setEnabled(false);\r\n\r\n\t\t\t//check that another document of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxDocumentTypes, \"DocumentType\")) {\r\n\t\t\t\toUploadCollection.fireUploadTerminated(oParameters.files[0].name);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create file reader and file reader event handler\r\n\t\t\tvar oFileReader = new FileReader();\r\n\t\t\toFileReader.onload = (function() {\r\n\r\n\t\t\t\t//get file content read\r\n\t\t\t\tvar sDocumentContent = oFileReader.result;\r\n\t\t\t\tsDocumentContent = sDocumentContent.split(\",\")[1];\r\n\r\n\t\t\t\t//get new upload collection item and set status\r\n\t\t\t\tvar oUploadCollectionItem = oUploadCollection.aItems[0];\r\n\t\t\t\toUploadCollectionItem._percentUploaded = 100;\r\n\t\t\t\toUploadCollectionItem._status = \"display\";\r\n\r\n\t\t\t\t//set binding context for new upload collection item\r\n\t\t\t\tthis._oODataModel.setProperty(\"FileData\", sDocumentContent, oFileReader.oContext);\r\n\r\n\t\t\t\t//submit changes to get correct document key\t\t\t\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//success event handler\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//raise event upload complete\r\n\t\t\t\t\t\toUploadCollection.fireUploadComplete();\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Show draft is saving\t\t\t\r\n\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t}).bind(this);\r\n\r\n\t\t\t//create new entry in the OData model's DocumentSet\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"DocumentSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tDocumentID: this.getUUID(),\r\n\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tFileName: oParameters.files[0].name,\r\n\t\t\t\t\tFileType: oParameters.files[0].type,\r\n\t\t\t\t\tFileSize: oParameters.files[0].size.toString(),\r\n\t\t\t\t\tDocumentType: this.getView().byId(\"cboxSupplierDocumentTypes\").getSelectedItem().getKey(),\r\n\t\t\t\t\tMimeType: oParameters.files[0].type,\r\n\t\t\t\t\tDocumentRequestID: \"null\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//provide file reader with binding context\r\n\t\t\toFileReader.oContext = oContext;\r\n\r\n\t\t\t//invoke reading of content of file just uploaded\r\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxSupplierDocumentTypesChange: function(oEvent) {\r\n\r\n\t\t\t//get reference to document upload UI controls\r\n\t\t\tvar oCBoxSupplierDocumentTypes = oEvent.getSource();\r\n\t\t\tvar oUploadCollection = this.getView().byId(\"ucSupplierDocUploadCollection\");\r\n\r\n\t\t\t//disable upload collection upload when no document type selected\r\n\t\t\tif (oCBoxSupplierDocumentTypes.getSelectedItem() === null) {\r\n\t\t\t\toUploadCollection.setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//check whether another document of the selected type may be loaded\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(oUploadCollection, oCBoxSupplierDocumentTypes, \"DocumentType\",\r\n\t\t\t\t\t\"DocumentInputControl\", this.getView().getModel(\"DocumentInputControl\"))) {\r\n\t\t\t\toUploadCollection.setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable upload collection upload when document type selected\r\n\t\t\toUploadCollection.setUploadEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for supplier \r\n\t\tonSupplierDocumentUploadComplete: function() {\r\n\r\n\t\t\t//reset supplier document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxSupplierDocumentTypes = this.getView().byId(\"cboxSupplierDocumentTypes\");\r\n\t\t\toCBoxSupplierDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxSupplierDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//check whether supplier documents are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierDocuments\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of person document\r\n\t\tonDocumentDeleted: function(oEvent) {\r\n\r\n\t\t\t//reset supplier document upload collection for next interaction\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxSupplierDocumentTypes = this.getView().byId(\"cboxSupplierDocumentTypes\");\r\n\t\t\toCBoxSupplierDocumentTypes.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxSupplierDocumentTypes.setSelectedKey(null);\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//check whether supplier documents are still valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierDocuments\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on pressing check button to verify user input\r\n\t\tonPressSupplierCheckInputButton: function() {\r\n\r\n\t\t\t//set supplier document type set in view\r\n\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t\t//check user input\r\n\t\t\tvar oIncorrectInput = this.hasIncorrectInput([\r\n\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t], null); //No specific control\r\n\r\n\t\t\t//message handling: user input checked with errors\r\n\t\t\tif (oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: user input checked with no finding\r\n\t\t\tif (!oIncorrectInput) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedNoFindings\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Success);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonPressSupplierSaveButton: function(oEvent) {\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput([\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//message handling: no unsaved changes where applicable\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoUnsavedModelChanges\"), sap.ui.core.MessageType.Success);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//submit changes made to model content\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//update success handler\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//visualize person entity status\r\n\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"updateModelChangeSuccessful\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t//invoke request for substantiating document if any\t\t\t\t\t\r\n\t\t\t\t\tDocumentRequestUtils.refreshAndInvokeDocumentRequestDialog(this, \"SupplierID\");\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonPressSupplierSubmitButton: function(oEvent) {\r\n\r\n\t\t\t//message handling: invalid form input where applicable\r\n\t\t\tif (this.hasIncorrectInput([\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageInputCheckedWithErrors\"),\r\n\t\t\t\t\tsap.ui.core.MessageType.Error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//dialog handling: request substantiating documents where applicable\r\n\t\t\tif (DocumentRequestUtils.hasOpenDocumentRequests()) {\r\n\r\n\t\t\t\t//invoke request for substantiating document if any\t\t\t\t\t\r\n\t\t\t\tDocumentRequestUtils.invokeDocumentRequestDialog(this, \"SupplierID\");\r\n\r\n\t\t\t\t//no further processing now\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//submit and navigate back where in context of other entity \r\n\t\t\tif (this._oNavData.ServiceIDOrigin || this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t//submit supplier and navigate\r\n\t\t\t\tthis.submitSupplier({\r\n\t\t\t\t\tnavigate: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//submit and close window where navigating with form\r\n\t\t\t} else if (this._oNavData.Form) {\r\n\r\n\t\t\t\t//submit supplier and close\r\n\t\t\t\tthis.submitSupplier({\r\n\t\t\t\t\twindowAction: \"close\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//send confirmation dialog before submit\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//confirmation dialog to submit\r\n\t\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageConfirmSubmitChanges\"), {\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\t\tsap.m.MessageBox.Action.NO\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t//on confirmation dialog close\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\r\n\t\t\t\t\t\t//submit wizard content for posting\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t\t//submit supplier and remain on view\r\n\t\t\t\t\t\t\tthis.submitSupplier({\r\n\t\t\t\t\t\t\t\tnavigate: false\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on BEE classification attributes live change\r\n\t\tonBEEClassificationAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//reset form input upon BEE classification type change\r\n\t\t\tif (/cboxBEEClassificationType/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//reset form input to gather new input\r\n\t\t\t\tthis.resetFormInput(this.getView().byId(\"formSupplierBEEClassification\"), oEvent.getSource());\r\n\r\n\t\t\t\t//set attribute visibility by BEE classification type to prepare incorrect input check\r\n\t\t\t\tthis.setBEEClassificationAttributesVisibility(oEvent.getSource().getSelectedKey());\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//reset related form fields upon BEE verifier type change\r\n\t\t\tif (/cboxBEEVerifierType/.test(oEvent.getSource().getId())) {\r\n\t\t\t\tthis.getView().byId(\"inputBEECertificateNumber\").setValue(\"\");\r\n\t\t\t\tthis.getView().byId(\"cboxBEECertificateAgency\").setValue(null);\r\n\t\t\t\tthis.getView().byId(\"inputBEEVerifierRegistrationNbr\").setValue(\"\");\r\n\t\t\t\tthis.getView().byId(\"inputBEEVerifierName\").setValue(\"\");\r\n\t\t\t}\r\n\r\n\t\t\t//flag BEE certificate expiry date as invalid where applicable\r\n\t\t\tif (/inputBEEClassifExpiryDate/.test(oEvent.getSource().getId())) {\r\n\t\t\t\toEvent.getSource().hasInvalidEntry = false;\r\n\t\t\t\tvar bDateIsValid = oEvent.getParameters().valid;\r\n\t\t\t\tif (!bDateIsValid) {\r\n\t\t\t\t\toEvent.getSource().hasInvalidEntry = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//check whether supplier BEE classification attributes are valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierBEEClassification\")], oEvent.getSource());\r\n\r\n\t\t\t//refresh view model for document input control\t\t\t\r\n\t\t\tthis.setSupplierDocumentTypesModel();\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier addresses\r\n\t\tonUpdateFinishedTableSupplierAddresses: function(oEvent) {\r\n\r\n\t\t\t//check whether supplier addresses are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierAddresses\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier contacts\r\n\t\tonUpdateFinishedTableSupplierContacts: function(oEvent) {\r\n\r\n\t\t\t//check whether supplier contacts are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierContacts\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxSupplierContactTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable contact add button if no contact type selected\r\n\t\t\tvar oCBoxSupplierContactTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxSupplierContactTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnSupplierContactAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of supplier contact\r\n\t\t\tthis.getView().byId(\"btnSupplierContactAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add contact for this supplier\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressSupplierContactAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxContactTypes = this.getView().byId(\"cboxSupplierContactTypes\");\r\n\r\n\t\t\t//contact type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxContactTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set contact type selection combobox value state and text\r\n\t\t\t\toCBoxContactTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxContactTypes.setValueStateText(\"Select contact type you want to add\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another contact of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabSupplierContacts\"), oCBoxContactTypes, \"ContactTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to select new or existing person\r\n\t\t\tthis.oContactDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.ContactDialog\", this);\r\n\t\t\tthis.oContactDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oContactDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oContactDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formContact\"));\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popContactFormTitle\", \"Add contact\");\r\n\r\n\t\t\t//phone number to be required (alternatively mobile number can be entered)\r\n\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", true);\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering\r\n\t\t\tthis.oContactDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//Supplier contact validation\r\n\t\tonContactAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//control required state of mobile number attributes: one is sufficient\r\n\t\t\tif (/inputContactPhoneNumber/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//toggle mobile number required state \r\n\t\t\t\tif (oEvent.getSource().getValue()) {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactMobileNumberRequired\", false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactMobileNumberRequired\", true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//control required state of phone number attributes: one is sufficient\r\n\t\t\tif (/inputContactMobileNumber/.test(oEvent.getSource().getId())) {\r\n\r\n\t\t\t\t//toggle phone number required state\r\n\t\t\t\tif (oEvent.getSource().getValue()) {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/inputContactPhoneNumberRequired\", true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check whether contact form entry has incorrect input\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formContact\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//delete supplier contact\r\n\t\tonPressSupplierContactDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//get context pointing to service for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get service attributes\r\n\t\t\tvar oContact = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for contact deletion\r\n\t\t\tvar sConfirmationText = \"Delete contact for \" + this.formatContactTypeID(oContact.ContactTypeID) + \"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this service\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on press on supplier contact\r\n\t\tonPressSupplierContactListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create popover to select new or existing person\r\n\t\t\tthis.oContactDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.ContactDialog\", this);\r\n\t\t\tthis.oContactDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oContactDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oContactDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oContactDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set contact form content\r\n\t\t\tvar oContact = this.oContactDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"inputContactName\").setValue(oContact.ContactName);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactEMailAddress\").setValue(oContact.eMailAddress);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactPhoneNumber\").setValue(oContact.PhoneNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactFaxNumber\").setValue(oContact.FaxNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputContactMobileNumber\").setValue(oContact.MobilePhoneNumber);\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popContactFormTitle\", \"Contact\");\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oContactDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//add contact for supplier\r\n\t\tonPressContactConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formContact\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oContactDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set contact attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"ContactName\", sap.ui.getCore().byId(\"inputContactName\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"eMailAddress\", sap.ui.getCore().byId(\"inputContactEMailAddress\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"PhoneNumber\", sap.ui.getCore().byId(\"inputContactPhoneNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"FaxNumber\", sap.ui.getCore().byId(\"inputContactFaxNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"MobilePhoneNumber\", sap.ui.getCore().byId(\"inputContactMobileNumber\").getValue(), this.oContactDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oContactDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close contact popover\r\n\t\t\t\tthis.oContactDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's contact set\r\n\t\t\tthis._oODataModel.createEntry(\"ContactSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tContactID: this.getUUID(),\r\n\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tContactTypeID: this.getView().byId(\"cboxSupplierContactTypes\").getSelectedKey(),\r\n\t\t\t\t\teMailAddress: sap.ui.getCore().byId(\"inputContactEMailAddress\").getValue(),\r\n\t\t\t\t\tContactName: sap.ui.getCore().byId(\"inputContactName\").getValue(),\r\n\t\t\t\t\tPhoneNumber: sap.ui.getCore().byId(\"inputContactPhoneNumber\").getValue(),\r\n\t\t\t\t\tFaxNumber: sap.ui.getCore().byId(\"inputContactFaxNumber\").getValue(),\r\n\t\t\t\t\tMobilePhoneNumber: sap.ui.getCore().byId(\"inputContactMobileNumber\").getValue()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct address key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close popover\r\n\t\t\t\t\tif (this.oContactDialog && this.oContactDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oContactDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxSupplierAddressTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable address add button if no address type selected\r\n\t\t\tvar oCBoxSupplierAddressTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxSupplierAddressTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnSupplierAddressAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of supplier address\r\n\t\t\tthis.getView().byId(\"btnSupplierAddressAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add responsibility for this supplier\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressSupplierAddressAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxAddressTypes = this.getView().byId(\"cboxSupplierAddressTypes\");\r\n\r\n\t\t\t//address type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxAddressTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set role selection combobox value state and text\r\n\t\t\t\toCBoxAddressTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxAddressTypes.setValueStateText(\"Select an address type for adding an address\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another addresses of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabSupplierAddresses\"), oCBoxAddressTypes, \"AddressTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to capture new address\r\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\r\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oAddressDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formAddress\"));\r\n\r\n\t\t\t//get reference to entity of selected address type \r\n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\r\n\t\t\t\tAddressTypeID: oCBoxAddressTypes.getSelectedKey()\r\n\t\t\t});\r\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\r\n\r\n\t\t\t//filter adress category by filter requested in address type where applicable\r\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\r\n\t\t\t\t//filter address category by outgoing filter of the address type\r\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t//default address category to outgoing address type filter argument\r\n\t\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddressType.OutgoingFilterArgument);\r\n\t\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setEnabled(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//default country South Africa\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(\"ZA\");\r\n\r\n\t\t\t//set contact form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Add address\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\r\n\r\n\t\t\t//open address dialog \r\n\t\t\tthis.oAddressDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//confirm address for supplier\r\n\t\tonPressAddressConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formAddress\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oAddressDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set address attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"AddressCategoryID\", sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"StreetName\", sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"HouseNumber\", sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"BuildingFloorFlat\", sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"PostalCode\", sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"City\", sap.ui.getCore().byId(\"inputAddressCity\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"RegionID\", sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"CountryID\", sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxNumber\", sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"POBoxPostalCode\", sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(), this.oAddressDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oAddressDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close address popover\r\n\t\t\t\tthis.oAddressDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's AddressSet\r\n\t\t\tthis._oODataModel.createEntry(\"AddressSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tAddressID: this.getUUID(),\r\n\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tAddressTypeID: this.getView().byId(\"cboxSupplierAddressTypes\").getSelectedKey(),\r\n\t\t\t\t\tAddressCategoryID: sap.ui.getCore().byId(\"cboxAddressCategory\").getSelectedKey(),\r\n\t\t\t\t\tRegionID: sap.ui.getCore().byId(\"cboxAddressRegions\").getSelectedKey(),\r\n\t\t\t\t\tStreetName: sap.ui.getCore().byId(\"inputAddressStreetName\").getValue(),\r\n\t\t\t\t\tHouseNumber: sap.ui.getCore().byId(\"inputAddressHouseNumber\").getValue(),\r\n\t\t\t\t\tBuildingFloorFlat: sap.ui.getCore().byId(\"inputBuildingFloorFlat\").getValue(),\r\n\t\t\t\t\tPostalCode: sap.ui.getCore().byId(\"inputAddressPostalCode\").getValue(),\r\n\t\t\t\t\tCity: sap.ui.getCore().byId(\"inputAddressCity\").getValue(),\r\n\t\t\t\t\tPOBoxNumber: sap.ui.getCore().byId(\"inputAddressPOBoxNumber\").getValue(),\r\n\t\t\t\t\tPOBoxPostalCode: sap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").getValue(),\r\n\t\t\t\t\tCountryID: sap.ui.getCore().byId(\"cboxAddressCountries\").getSelectedKey()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to get correct address key\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//refresh document request model\t\t\t\t\r\n\t\t\t\t\tDocumentRequestUtils.refreshDocumentRequestModel(this, \"SupplierID\");\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close popover where applicable\r\n\t\t\t\t\tif (this.oAddressDialog && this.oAddressDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oAddressDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for address list item\r\n\t\tcreateSupplierAddressListItem: function(sId, oAddressContext) {\r\n\r\n\t\t\t//for each entry in the 'toResponsibilities' responsibility set collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//get address object\r\n\t\t\tvar oAddress = oAddressContext.getObject();\r\n\r\n\t\t\t//textual description of address type\r\n\t\t\tvar sAddressTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\r\n\t\t\t\tAddressTypeID: this._oODataModel.getProperty(\"AddressTypeID\", oAddressContext)\r\n\t\t\t});\r\n\t\t\tvar sAddressTypeText = this._oODataModel.getProperty(sAddressTypeObjectPath + \"/AddressTypeText\");\r\n\t\t\tif (sAddressTypeText) {\r\n\t\t\t\tsAddressTypeText = sAddressTypeText.replace(\"*\", \"\");\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sAddressTypeText\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of address category \r\n\t\t\tvar sAddressCategoryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressCategorySet\", {\r\n\t\t\t\tAddressCategoryID: oAddress.AddressCategoryID\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sAddressCategoryObjectPath + \"/AddressCategoryText\")\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//Street or PO Box number\r\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.HouseNumber + \" \" + oAddress.StreetName\r\n\t\t\t\t}), 999);\r\n\t\t\t} else {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: \"PO Box \" + oAddress.POBoxNumber\r\n\t\t\t\t}), 999);\r\n\t\t\t}\r\n\r\n\t\t\t//Postal code (Street or PO Box)\r\n\t\t\tif (oAddress.AddressCategoryID === \"Street\") {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.PostalCode\r\n\t\t\t\t}), 999);\r\n\t\t\t} else {\r\n\t\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\t\ttext: oAddress.POBoxPostalCode\r\n\t\t\t\t}), 999);\r\n\t\t\t}\r\n\r\n\t\t\t//City\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oAddress.City\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//create region key for region indicated on address\r\n\t\t\tvar sRegionObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"RegionSet\", {\r\n\t\t\t\tRegionID: this._oODataModel.getProperty(\"RegionID\", oAddressContext)\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sRegionObjectPath + '/RegionText')\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//create country key for country indicated on address\r\n\t\t\tvar sCountryObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"CountrySet\", {\r\n\t\t\t\tCountryID: this._oODataModel.getProperty(\"CountryID\", oAddressContext)\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this._oODataModel.getProperty(sCountryObjectPath + '/CountryText')\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressSupplierAddressDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//on press on supplier address\r\n\t\tonPressSupplierAddressListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create popover to edit address\r\n\t\t\tthis.oAddressDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.AddressDialog\", this);\r\n\t\t\tthis.oAddressDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oAddressDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oAddressDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oAddressDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set address form content\r\n\t\t\tvar oAddress = this.oAddressDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").setSelectedKey(oAddress.AddressCategoryID);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressStreetName\").setValue(oAddress.StreetName);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressHouseNumber\").setValue(oAddress.HouseNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputBuildingFloorFlat\").setValue(oAddress.BuildingFloorFlat);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPostalCode\").setValue(oAddress.PostalCode);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressCity\").setValue(oAddress.City);\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressRegions\").setSelectedKey(oAddress.RegionID);\r\n\t\t\tsap.ui.getCore().byId(\"cboxAddressCountries\").setSelectedKey(oAddress.CountryID);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxNumber\").setValue(oAddress.POBoxNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputAddressPOBoxPostalCode\").setValue(oAddress.POBoxPostalCode);\r\n\r\n\t\t\t//get reference to entity of selected address type \r\n\t\t\tvar sObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"AddressTypeSet\", {\r\n\t\t\t\tAddressTypeID: oAddress.AddressTypeID\r\n\t\t\t});\r\n\t\t\tvar oAddressType = this._oODataModel.getProperty(sObjectPath);\r\n\r\n\t\t\t//filter adress category by filter requested in address type where applicable\r\n\t\t\tif (oAddressType.OutgoingFilterArgument) {\r\n\t\t\t\tsap.ui.getCore().byId(\"cboxAddressCategory\").getBinding(\"items\").filter(\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tpath: \"AddressCategoryID\",\r\n\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\tvalue1: oAddressType.OutgoingFilterArgument\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t//set address form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popAddressFormTitle\", \"Address\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxAddressCountriesEnabled\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/felemAddressRegionsVisible\", true);\r\n\r\n\t\t\t//open address dialog \r\n\t\t\tthis.oAddressDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonPressSupplierAddressDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to responsibility for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get address attributes\r\n\t\t\tvar oAddress = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete \" + this.formatAddressTypeID(oAddress.AddressTypeID) + \" of \" + this.formatOrganisationID(oAddress.OrganisationID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this organisation\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxBankAccountPurposeChange: function(oEvent) {\r\n\r\n\t\t\t//disable bank account add button if no bank account purpose selected\r\n\t\t\tvar oCBoxBankAccountPurpose = oEvent.getSource();\r\n\t\t\tif (oCBoxBankAccountPurpose.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnBankAccountAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of supplier contact\r\n\t\t\tthis.getView().byId(\"btnBankAccountAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add contact for this supplier\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressBankAccountAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxBankAccountPurpose = this.getView().byId(\"cboxBankAccountPurpose\");\r\n\r\n\t\t\t//account purpose needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxBankAccountPurpose.getSelectedKey()) {\r\n\r\n\t\t\t\t//set account purpose selection combobox value state and text\r\n\t\t\t\toCBoxBankAccountPurpose.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxBankAccountPurpose.setValueStateText(\"Select contact type you want to add\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another account for the selected purpose is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabSupplierBankAccounts\"), oCBoxBankAccountPurpose,\r\n\t\t\t\t\t\"BankAccountPurposeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to create new bank account\r\n\t\t\tthis.oBankAccountDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.BankAccountDialog\", this);\r\n\t\t\tthis.oBankAccountDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oBankAccountDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oBankAccountDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formBankAccount\"));\r\n\r\n\t\t\t//set bank account popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popBankAccountFormTitle\", \"Bank account\");\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oBankAccountDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//Bank account attributes live change\r\n\t\tonBankAccountAttributesLiveChange: function(oEvent) {\r\n\r\n\t\t\t//visualize 'save' before 'submit' \r\n\t\t\tthis.visualizeSaveBeforeSubmit();\r\n\r\n\t\t\t//determine whether present bank has a default branch\r\n\t\t\tvar sDefaultBankBranchID = SupplierUtils.getDefaultBankBranchID(sap.ui.getCore().byId(\"cboxBanks\").getSelectedKey());\r\n\r\n\t\t\t//for change stemming from bank input, set the bank's default branch\r\n\t\t\tif (/cboxBanks/.test(oEvent.getSource().getId()) && sDefaultBankBranchID) {\r\n\t\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setValue(sDefaultBankBranchID);\r\n\t\t\t}\r\n\r\n\t\t\t//toggle branch code enabled state depending on whether default branch code present\r\n\t\t\tif (sDefaultBankBranchID) {\r\n\t\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setEnabled(false);\r\n\t\t\t} else {\r\n\t\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setEnabled(true);\r\n\t\t\t}\r\n\r\n\t\t\t//local variable declaration for 'is local account (Basic Bank Account ID)'\r\n\t\t\tvar isBBANAccountID = sap.ui.getCore().byId(\"cboxBankAccountIDTypes\").getSelectedKey() === \"BBAN\" ? true : false;\r\n\r\n\t\t\t//reset form input when foreign bank account selected\r\n\t\t\tif (!isBBANAccountID) {\r\n\t\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formBankAccount\"));\r\n\t\t\t\tsap.ui.getCore().byId(\"cboxBankAccountIDTypes\").setSelectedKey(\"IBAN\");\r\n\t\t\t}\r\n\r\n\t\t\t//set form input to invisible to ensure it is not declared missing input\r\n\t\t\tsap.ui.getCore().byId(\"felemBankAccountType\").setVisible(isBBANAccountID);\r\n\t\t\tsap.ui.getCore().byId(\"felemBank\").setVisible(isBBANAccountID);\r\n\t\t\tsap.ui.getCore().byId(\"felemBankBranchCode\").setVisible(isBBANAccountID);\r\n\t\t\tsap.ui.getCore().byId(\"felemBankAccountNumber\").setVisible(isBBANAccountID);\r\n\t\t\tsap.ui.getCore().byId(\"felemBankAccountHolderName\").setVisible(isBBANAccountID);\r\n\r\n\t\t\t//check whether bank account form entry has incorrect input\r\n\t\t\tthis.hasIncorrectInput([sap.ui.getCore().byId(\"formBankAccount\")], oEvent.getSource());\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for address list item\r\n\t\tcreateBankAccountListItem: function(sId, oBankAccountContext) {\r\n\r\n\t\t\t//for each entry in the 'toResponsibilities' responsibility set collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//get address object\r\n\t\t\tvar oBankAccount = oBankAccountContext.getObject();\r\n\r\n\t\t\t//textual description of bank account purpose\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: this.formatBankAccountPurposeID(this._oODataModel.getProperty(\"BankAccountPurposeID\", oBankAccountContext)),\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of bank\r\n\t\t\tvar sBankObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"BankSet\", {\r\n\t\t\t\tBankID: this._oODataModel.getProperty(\"BankID\", oBankAccountContext)\r\n\t\t\t});\r\n\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oBankAccount.BankAccountIDTypeID === \"BBAN\" ? this._oODataModel.getProperty(sBankObjectPath + '/BankText') : \"Foreign bank\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//branch code\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oBankAccount.BankAccountIDTypeID === \"BBAN\" ? oBankAccount.BranchID : \"Not applicable\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//textual description of bank account type \r\n\t\t\tvar sBankAccountTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"BankAccountTypeSet\", {\r\n\t\t\t\tBankAccountTypeID: oBankAccount.BankAccountTypeID\r\n\t\t\t});\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oBankAccount.BankAccountIDTypeID === \"BBAN\" ? this._oODataModel.getProperty(sBankAccountTypeObjectPath +\r\n\t\t\t\t\t'/BankAccountTypeText') : \"Not applicable\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//bank account number\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oBankAccount.BankAccountIDTypeID === \"BBAN\" ? oBankAccount.AccountNumber : \"Not applicable\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//bank account holder name\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oBankAccount.BankAccountIDTypeID === \"BBAN\" ? oBankAccount.AccountHolderName : \"Not applicable\",\r\n\t\t\t\tmaxLines: 1\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressSupplierBankAccountDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier bank accounts\r\n\t\tonUpdateFinishedTableSupplierBankAccounts: function(oEvent) {\r\n\r\n\t\t\t//check whether supplier bank accounts are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierBankAccounts\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//add bank account for supplier\r\n\t\tonPressBankAccountConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formBankAccount\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oBankAccountDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set bank account attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"BankAccountIDTypeID\", sap.ui.getCore().byId(\"cboxBankAccountIDTypes\").getSelectedKey(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"BankAccountTypeID\", sap.ui.getCore().byId(\"cboxBankAccountTypes\").getSelectedKey(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"BankID\", sap.ui.getCore().byId(\"cboxBanks\").getSelectedKey(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"BranchID\", sap.ui.getCore().byId(\"inputBankBranchCode\").getValue(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"AccountNumber\", sap.ui.getCore().byId(\"inputBankAccountNumber\").getValue(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"AccountHolderName\", sap.ui.getCore().byId(\"inputBankAccountHolderName\").getValue(), this.oBankAccountDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oBankAccountDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close bank account popover\r\n\t\t\t\tthis.oBankAccountDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's bank account set\r\n\t\t\tthis._oODataModel.createEntry(\"BankAccountSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tBankAccountID: this.getUUID(),\r\n\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tBankAccountPurposeID: this.getView().byId(\"cboxBankAccountPurpose\").getSelectedKey(),\r\n\t\t\t\t\tBankAccountIDTypeID: sap.ui.getCore().byId(\"cboxBankAccountIDTypes\").getSelectedKey(),\r\n\t\t\t\t\tBankAccountTypeID: sap.ui.getCore().byId(\"cboxBankAccountTypes\").getSelectedKey(),\r\n\t\t\t\t\tBankID: sap.ui.getCore().byId(\"cboxBanks\").getSelectedKey(),\r\n\t\t\t\t\tBranchID: sap.ui.getCore().byId(\"inputBankBranchCode\").getValue(),\r\n\t\t\t\t\tAccountNumber: sap.ui.getCore().byId(\"inputBankAccountNumber\").getValue(),\r\n\t\t\t\t\tAccountHolderName: sap.ui.getCore().byId(\"inputBankAccountHolderName\").getValue()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to establish bank account ODATA relationship to this supplier\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//refresh document request model\t\t\t\t\r\n\t\t\t\t\tDocumentRequestUtils.refreshDocumentRequestModel(this, \"SupplierID\");\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close bank account popover\r\n\t\t\t\t\tif (this.oBankAccountDialog && this.oBankAccountDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oBankAccountDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonPressSupplierBankAccountDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to bank account for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get bank account attributes\r\n\t\t\tvar oBankAccount = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete account \" + oBankAccount.AccountNumber + \" of \" + this.formatSupplierID(oBankAccount.SupplierID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this bank account\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on press on bank account list item\r\n\t\tonPressBankAccountListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create popover to select new or existing bank account\r\n\t\t\tthis.oBankAccountDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.BankAccountDialog\", this);\r\n\t\t\tthis.oBankAccountDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oBankAccountDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\r\n\t\t\t//add bank account popover as view dependant\r\n\t\t\tthis.getView().addDependent(this.oBankAccountDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oBankAccountDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set bank account form content\r\n\t\t\tvar oBankAccount = this.oBankAccountDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"cboxBankAccountIDTypes\").setSelectedKey(oBankAccount.BankAccountIDTypeID);\r\n\t\t\tsap.ui.getCore().byId(\"cboxBankAccountTypes\").setSelectedKey(oBankAccount.BankAccountTypeID);\r\n\t\t\tsap.ui.getCore().byId(\"cboxBanks\").setSelectedKey(oBankAccount.BankID);\r\n\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setValue(oBankAccount.BranchID);\r\n\t\t\tsap.ui.getCore().byId(\"inputBankAccountNumber\").setValue(oBankAccount.AccountNumber);\r\n\t\t\tsap.ui.getCore().byId(\"inputBankAccountHolderName\").setValue(oBankAccount.AccountHolderName);\r\n\r\n\t\t\t//toggle branch code enabled state depending on whether bank has default branch code\r\n\t\t\tvar sDefaultBankBranchID = SupplierUtils.getDefaultBankBranchID(oBankAccount.BankID);\r\n\t\t\tif (sDefaultBankBranchID) {\r\n\t\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setEnabled(false);\r\n\t\t\t} else {\r\n\t\t\t\tsap.ui.getCore().byId(\"inputBankBranchCode\").setEnabled(true);\r\n\t\t\t}\r\n\r\n\t\t\t//set bank account form popover title\r\n\t\t\tthis._oViewModel.setProperty(\"/popBankAccountFormTitle\", \"Bank account\");\r\n\r\n\t\t\t//delay because addDependent will do a async rerendering\r\n\t\t\tthis.oBankAccountDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for certificate list item\r\n\t\tcreateSupplierCertificateListItem: function(sId, oCertificateContext) {\r\n\r\n\t\t\t//for each entry in the collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//get certificate entity\r\n\t\t\tvar oCertificate = oCertificateContext.getObject();\r\n\r\n\t\t\t//textual description of certificate type\r\n\t\t\tvar sCertificateTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"CertificateTypeSet\", {\r\n\t\t\t\tCertificateTypeID: this._oODataModel.getProperty(\"CertificateTypeID\", oCertificateContext)\r\n\t\t\t});\r\n\t\t\tvar sCertificateTypeText = this._oODataModel.getProperty(sCertificateTypeObjectPath + '/CertificateTypeText');\r\n\t\t\tif (sCertificateTypeText) {\r\n\t\t\t\tsCertificateTypeText = sCertificateTypeText.replace(\"*\", \"\");\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sCertificateTypeText\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//certificate number\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: oCertificate.CertificateNumber\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//certificate expiry date\r\n\t\t\tvar sCertificateExpiryDate;\r\n\t\t\tif (oCertificate.CertificateExpiryDate) {\r\n\t\t\t\tsCertificateExpiryDate = oCertificate.CertificateExpiryDate.toLocaleDateString(\"en-us\", {\r\n\t\t\t\t\tweekday: \"long\",\r\n\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\tmonth: \"short\",\r\n\t\t\t\t\tday: \"numeric\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sCertificateExpiryDate\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//certificate attributes\r\n\t\t\tvar sCertificateAttributes = \"\";\r\n\t\t\tif (oCertificate.CertificateAttributes) {\r\n\r\n\t\t\t\t//for exception handling\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t//parse certificate attributes string\r\n\t\t\t\t\tvar oCertificateAttributes = JSON.parse(oCertificate.CertificateAttributes);\r\n\r\n\t\t\t\t\t//for each certificate attribute\r\n\t\t\t\t\tfor (var sAttribute in oCertificateAttributes) {\r\n\t\t\t\t\t\tif (sCertificateAttributes !== \"\") {\r\n\t\t\t\t\t\t\tsCertificateAttributes += \"\\n\"; //new line\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsCertificateAttributes += sAttribute + \": \" + oCertificateAttributes[sAttribute];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//exception handling: invalid JSON received\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t//no action, certificate attributes will not be visualized\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sCertificateAttributes\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressSupplierCertificateDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonPressSupplierCertificateDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to bank account for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get certificate attributes\r\n\t\t\tvar oCertificate = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for certificate deletion\r\n\t\t\tsConfirmationText = \"Delete certificate \" + oCertificate.CertificateNumber + \" of \" + this.formatSupplierID(oCertificate.SupplierID) +\r\n\t\t\t\t\"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this certificate\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete certificate from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxSupplierCertificateTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable bank account add button if no bank account purpose selected\r\n\t\t\tvar oCBoxSupplierCertificateTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxSupplierCertificateTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnSupplierCertificateAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of supplier certifcate\r\n\t\t\tthis.getView().byId(\"btnSupplierCertificateAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier certificates\r\n\t\tonUpdateFinishedTableSupplierCertificates: function(oEvent) {\r\n\r\n\t\t\t//check whether supplier certificates are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierCertificates\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Add contact for this supplier\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\tonPressSupplierCertificateAddButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxCertificateTypes = this.getView().byId(\"cboxSupplierCertificateTypes\");\r\n\r\n\t\t\t//certificate type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxCertificateTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set certificate type selection combobox value state and text\r\n\t\t\t\toCBoxCertificateTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxCertificateTypes.setValueStateText(\"Select certificate type you want to add\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another certificate for the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabSupplierCertificates\"), oCBoxCertificateTypes,\r\n\t\t\t\t\t\"CertificateTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//create popover to create new certificate\r\n\t\t\tthis.oCertificateDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.CertificateDialog\", this);\r\n\t\t\tthis.oCertificateDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oCertificateDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oCertificateDialog);\r\n\r\n\t\t\t//initialize input fields\r\n\t\t\tthis.resetFormInput(sap.ui.getCore().byId(\"formCertificate\"));\r\n\r\n\t\t\t//perpare view model attributes \r\n\t\t\tthis._oViewModel.setProperty(\"/popCertificateFormTitle\", \"Certificate\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxCertificateTypesSelectedKey\", oCBoxCertificateTypes.getSelectedKey());\r\n\r\n\t\t\t// delay because addDependent will do a async rerendering \r\n\t\t\tthis.oCertificateDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//add certificate for supplier\r\n\t\tonPressCertificateConfirmButton: function() {\r\n\r\n\t\t\t//Check for missing or invalid input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formCertificate\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//construct certificate attributes values\r\n\t\t\tvar oCertificateAttributes = {};\r\n\t\t\tswitch (this._oViewModel.getProperty(\"/cboxCertificateTypesSelectedKey\")) {\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\r\n\t\t\t//no further processing required where binding context exists\r\n\t\t\tif (this.oCertificateDialog.oBindingContext) {\r\n\r\n\t\t\t\t//set bank account attributes form content\r\n\t\t\t\tthis._oODataModel.setProperty(\"CertificateNumber\", sap.ui.getCore().byId(\"inputCertificateNumber\").getValue(), this.oCertificateDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\t\t\t\tthis._oODataModel.setProperty(\"CertificateExpiryDate\", sap.ui.getCore().byId(\"dpickCertificateExpiryDate\").getDateValue(), this.oCertificateDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//set certificate ODATA entity attribute value\r\n\t\t\t\tthis._oODataModel.setProperty(\"CertificateAttributes\", JSON.stringify(oCertificateAttributes), this.oCertificateDialog\r\n\t\t\t\t\t.oBindingContext);\r\n\r\n\t\t\t\t//reset reference to binding context being edited\t\r\n\t\t\t\tthis.oCertificateDialog.oBindingContext = null;\r\n\r\n\t\t\t\t//close bank account popover\r\n\t\t\t\tthis.oCertificateDialog.close();\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//create new entry in the OData model's certificate set\r\n\t\t\tthis._oODataModel.createEntry(\"CertificateSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tCertificateID: this.getUUID(),\r\n\t\t\t\t\tCertificateTypeID: this.getView().byId(\"cboxSupplierCertificateTypes\").getSelectedKey(),\r\n\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\tCertificateNumber: sap.ui.getCore().byId(\"inputCertificateNumber\").getValue(),\r\n\t\t\t\t\tCertificateExpiryDate: sap.ui.getCore().byId(\"dpickCertificateExpiryDate\").getDateValue(),\r\n\t\t\t\t\tCertificateAttributes: JSON.stringify(oCertificateAttributes)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//submit changes to establish bank account ODATA relationship to this supplier\t\t\t\r\n\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t//success event handler\r\n\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t//refresh document request model\t\t\t\t\r\n\t\t\t\t\tDocumentRequestUtils.refreshDocumentRequestModel(this, \"SupplierID\");\r\n\r\n\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t//close popover\r\n\t\t\t\t\tif (this.oCertificateDialog && this.oCertificateDialog.isOpen()) {\r\n\t\t\t\t\t\tthis.oCertificateDialog.close();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//Show draft is saving\t\t\t\r\n\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t},\r\n\r\n\t\t//on press on certificate list item\r\n\t\tonPressSupplierCertificateListItem: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxCertificateTypes = this.getView().byId(\"cboxSupplierCertificateTypes\");\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//create popover to present attributes of existing certificate\r\n\t\t\tthis.oCertificateDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.CertificateDialog\", this);\r\n\t\t\tthis.oCertificateDialog.attachAfterClose(function() {\r\n\t\t\t\tthis.oCertificateDialog.destroy();\r\n\t\t\t}.bind(this));\r\n\t\t\tthis.getView().addDependent(this.oCertificateDialog);\r\n\r\n\t\t\t//keep track of binding context of this list item for update from popover content on close\r\n\t\t\tthis.oCertificateDialog.oBindingContext = oListItem.getBindingContext(\"Registration\");\r\n\r\n\t\t\t//set bank account form content\r\n\t\t\tvar oCertificate = this.oCertificateDialog.oBindingContext.getObject();\r\n\t\t\tsap.ui.getCore().byId(\"inputCertificateNumber\").setValue(oCertificate.CertificateNumber);\r\n\t\t\tsap.ui.getCore().byId(\"dpickCertificateExpiryDate\").setDateValue(oCertificate.CertificateExpiryDate);\r\n\r\n\t\t\t//perpare view model attributes \r\n\t\t\tthis._oViewModel.setProperty(\"/popCertificateFormTitle\", \"Certificate\");\r\n\t\t\tthis._oViewModel.setProperty(\"/cboxCertificateTypesSelectedKey\", oCertificate.CertificateTypeID);\r\n\r\n\t\t\t//construct certificate attributes values\r\n\t\t\tif (oCertificate.CertificateAttributes) {\r\n\t\t\t\tvar oCertificateAttributes = JSON.parse(oCertificate.CertificateAttributes);\r\n\t\t\t\tswitch (oCertificate.CertificateTypeID) {\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//delay because addDependent will do a async rerendering \r\n\t\t\tthis.oCertificateDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//check whether this supplier is related to other entities\t\t\r\n\t\tisRelated: function(oSupplierContext) {\r\n\r\n\t\t\t//check for relationship to service\r\n\t\t\tif (this.getOwnerComponent().oServiceList.getBinding(\"items\").filter([\r\n\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"SupplierID\",\r\n\t\t\t\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\t\t\t\tvalue1: oSupplierContext.getProperty(\"SupplierID\")\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tnew sap.ui.model.Filter({\r\n\t\t\t\t\t\t\t\tpath: \"EntityStatusID\",\r\n\t\t\t\t\t\t\t\toperator: \"BT\",\r\n\t\t\t\t\t\t\t\tvalue1: \"0\", //Draft\r\n\t\t\t\t\t\t\t\tvalue2: \"4\" //Revised\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tand: true\r\n\t\t\t\t\t})\r\n\t\t\t\t]).getLength() > 0) {\r\n\r\n\t\t\t\t//feedback to caller: supplier is related\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//feedback to caller: supplier is not related\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t//Factory function for declaration list item\r\n\t\tcreateSupplierDeclarationListItem: function(sId, oDeclarationContext) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sDeclarationUrl;\r\n\r\n\t\t\t//for each entry in the collection\r\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\r\n\t\t\t\ttype: \"Active\",\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\r\n\t\t\t//get declaration and supplier entities in current status\r\n\t\t\tvar oDeclaration = oDeclarationContext.getObject();\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//create Url to render supplier declaration by Portal supplier ID\r\n\t\t\tif (!oSupplier.VendorID) {\r\n\t\t\t\tsDeclarationUrl = window.location.origin + \"/coct/ui5/zsupdec/index.html?GUID=\" + oSupplier.SupplierID;\r\n\t\t\t}\r\n\r\n\t\t\t//create Url to render supplier declaration by ERP supplier ID\r\n\t\t\tif (oSupplier.VendorID) {\r\n\t\t\t\tsDeclarationUrl = window.location.origin + \"/coct/ui5/zsupdec/index.html?SupplierID=\" + oSupplier.VendorID;\r\n\t\t\t}\r\n\r\n\t\t\t//textual description of declaration type\r\n\t\t\tvar sDeclarationTypeObjectPath = \"/\" + this.getModel(\"Registration\").createKey(\"DeclarationTypeSet\", {\r\n\t\t\t\tDeclarationTypeID: this._oODataModel.getProperty(\"DeclarationTypeID\", oDeclarationContext)\r\n\t\t\t});\r\n\t\t\tvar sDeclarationTypeText = this._oODataModel.getProperty(sDeclarationTypeObjectPath + \"/DeclarationTypeText\");\r\n\t\t\tif (sDeclarationTypeText) {\r\n\t\t\t\tsDeclarationTypeText = sDeclarationTypeText.replace(\"*\", \"\");\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sDeclarationTypeText\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//last declaration update timestamp\r\n\t\t\tvar sLastUpdateTimeStamp;\r\n\t\t\tif (oDeclaration.LastUpdateTimeStamp) {\r\n\t\t\t\tsLastUpdateTimeStamp = oDeclaration.LastUpdateTimeStamp.toLocaleTimeString(\"en-us\", {\r\n\t\t\t\t\tweekday: \"long\",\r\n\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\tmonth: \"short\",\r\n\t\t\t\t\tday: \"numeric\",\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t\tsecond: \"numeric\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sLastUpdateTimeStamp\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//certificate expiry date\r\n\t\t\tvar sDeclarationExpiryDate;\r\n\t\t\tif (oDeclaration.ExpiryDate) {\r\n\t\t\t\tsDeclarationExpiryDate = oDeclaration.ExpiryDate.toLocaleDateString(\"en-us\", {\r\n\t\t\t\t\tweekday: \"long\",\r\n\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\tmonth: \"short\",\r\n\t\t\t\t\tday: \"numeric\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\r\n\t\t\t\ttext: sDeclarationExpiryDate\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//delete button\r\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\r\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\r\n\t\t\t\ttooltip: \"Delete\",\r\n\t\t\t\tcolor: \"#E42217\",\r\n\t\t\t\tpress: (this.onPressSupplierDeclarationDeleteButton).bind(this)\r\n\t\t\t}), 999);\r\n\r\n\t\t\t//return column list item instance for rendering in UI\r\n\t\t\treturn oColumnListItem;\r\n\r\n\t\t},\r\n\r\n\t\t//on delete of a supplier declaration\r\n\t\tonPressSupplierDeclarationDeleteButton: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar sConfirmationText;\r\n\r\n\t\t\t//get context pointing to declaration for deletion\r\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get declaration attributes\r\n\t\t\tvar oDeclaration = this._oODataModel.getObject(oContext.getPath());\r\n\r\n\t\t\t//build confirmation text for responsibility service deletion\r\n\t\t\tsConfirmationText = \"Delete \" + this.formatDeclarationTypeID(oDeclaration.DeclarationTypeID) + \" of \" + this.formatSupplierID(\r\n\t\t\t\toDeclaration.SupplierID) + \"?\";\r\n\r\n\t\t\t//confirmation dialog to delete this bank account\r\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//visualize organisation entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxSupplierDeclarationTypesChange: function(oEvent) {\r\n\r\n\t\t\t//disable declaration add button if no declaration type selected\r\n\t\t\tvar oCBoxSupplierDeclarationTypes = oEvent.getSource();\r\n\t\t\tif (oCBoxSupplierDeclarationTypes.getSelectedItem() === null) {\r\n\t\t\t\tthis.getView().byId(\"btnSupplierDeclarationAdd\").setEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable creation of supplier declaration\r\n\t\t\tthis.getView().byId(\"btnSupplierDeclarationAdd\").setEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//adding a supplier declaration\r\n\t\tonPressSupplierDeclarationAddButton: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxSupplierDeclarationTypes = this.getView().byId(\"cboxSupplierDeclarationTypes\");\r\n\r\n\t\t\t//declaration type needs to be specified to proceed with creation\r\n\t\t\tif (!oCBoxSupplierDeclarationTypes.getSelectedKey()) {\r\n\r\n\t\t\t\t//set contact type selection combobox value state and text\r\n\t\t\t\toCBoxSupplierDeclarationTypes.setValueState(sap.ui.core.ValueState.Error);\r\n\t\t\t\toCBoxSupplierDeclarationTypes.setValueStateText(\"Select declaration type you want to add\");\r\n\r\n\t\t\t\t//no further processing at this moment\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//check that another declaration of the selected type is allowable\r\n\t\t\tif (!this.isCardinalityOfNextEntryAllowable(this.getView().byId(\"tabSupplierDeclarations\"), oCBoxSupplierDeclarationTypes,\r\n\t\t\t\t\t\"DeclarationTypeID\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//open declaration dialog for declaration add\r\n\t\t\tthis.openDeclarationDialog({\r\n\t\t\t\ttitle: \"titleAddSupplierDeclaration\",\r\n\t\t\t\tconfirm: this.onPressDeclarationAddConfirmButton\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//on press on declaration list item\r\n\t\tonPressSupplierDeclarationListItem: function(oEvent) {\r\n\r\n\t\t\t//get event source\r\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\r\n\t\t\t//get declaration in current status\r\n\t\t\tvar oDeclaration = oListItem.getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//open declaration dialog for declaration update\r\n\t\t\tthis.openDeclarationDialog({\r\n\t\t\t\ttitle: \"titleUpdateSupplierDeclaration\",\r\n\t\t\t\tconfirm: this.onPressDeclarationUpdateConfirmButton,\r\n\t\t\t\tdeclaration: oDeclaration\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//open declaration dialog\r\n\t\topenDeclarationDialog: function(oParameters) {\r\n\r\n\t\t\t//construct declaration dialog content\r\n\t\t\tvar oDeclarationDialogContent = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.Declaration\", this);\r\n\r\n\t\t\t//construct declaration dialog instance\t\t\t\r\n\t\t\tthis.oDeclarationDialog = new sap.m.Dialog({\r\n\t\t\t\ttype: sap.m.DialogType.Standard,\r\n\t\t\t\ttitle: this._oResourceBundle.getText(oParameters.title),\r\n\t\t\t\tcontentWidth: \"550px\",\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tcontent: oDeclarationDialogContent,\r\n\r\n\t\t\t\t//buttons\r\n\t\t\t\tbuttons: [\r\n\r\n\t\t\t\t\t//close declaration dialog\r\n\t\t\t\t\tnew sap.m.Button({\r\n\t\t\t\t\t\ttype: \"Transparent\",\r\n\t\t\t\t\t\ttext: \"Close\",\r\n\t\t\t\t\t\tpress: function() {\r\n\r\n\t\t\t\t\t\t\t//close declaration dialog\r\n\t\t\t\t\t\t\tthis.oDeclarationDialog.close();\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t}),\r\n\r\n\t\t\t\t\t//confirm declaration dialog\r\n\t\t\t\t\tnew sap.m.Button({\r\n\t\t\t\t\t\ttype: \"Emphasized\",\r\n\t\t\t\t\t\ttext: \"Confirm\",\r\n\t\t\t\t\t\tpress: oParameters.confirm.bind(this)\r\n\r\n\t\t\t\t\t}),\r\n\r\n\t\t\t\t\t//help button\r\n\t\t\t\t\tnew sap.m.Button({\r\n\t\t\t\t\t\ttype: \"Transparent\",\r\n\t\t\t\t\t\ticon: \"sap-icon://sys-help\",\r\n\t\t\t\t\t\ttooltip: \"Help\",\r\n\t\t\t\t\t\tpress: function(oEvent) {\r\n\r\n\t\t\t\t\t\t\t//render hint\r\n\t\t\t\t\t\t\tthis.hintForDeclarationForm(oEvent);\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//event handler for dialog destroy\r\n\t\t\t\tafterClose: function() {\r\n\r\n\t\t\t\t\t//destroy declaration dialog\r\n\t\t\t\t\tthis.oDeclarationDialog.destroy();\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t\t//keep track of declaration in update\r\n\t\t\tthis.oDeclarationDialog.oDeclaration = oParameters.declaration;\r\n\r\n\t\t\t//open dialog\r\n\t\t\tthis.oDeclarationDialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t//open supplier declaration UI5 application for this supplier\r\n\t\topenSupplierDeclaration: function() {\r\n\r\n\t\t\t//fill in declaration in new browser window, submit and confirm\r\n\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmitDeclarationAndConfirm\"), sap.ui.core.MessageType.Information);\r\n\r\n\t\t\t//compute Url to supplier declaration for this supplier\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//open another window with supplier declaration form\r\n\t\t\tswitch (oSupplier.VendorID) {\r\n\r\n\t\t\t\t//navigate with portal internal Supplier ID\r\n\t\t\t\tcase null:\r\n\t\t\t\tcase undefined:\r\n\t\t\t\tcase \"\":\r\n\t\t\t\t\twindow.open(window.location.origin + \"/coct/ui5/zsupdec/index.html?GUID=\" + oSupplier.SupplierID);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//navigate with ECC vendor ID\r\n\t\t\t\tdefault:\r\n\t\t\t\t\twindow.open(window.location.origin + \"/coct/ui5/zsupdec/index.html?SupplierID=\" + oSupplier.VendorID);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on change of file uploader for declaration\r\n\t\tonFileUploadDeclarationChange: function(oEvent) {\r\n\r\n\t\t\t//check for missing input\r\n\t\t\tif (this.hasIncorrectInput([sap.ui.getCore().byId(\"formDeclaration\")])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//get attributes of file just uploaded\r\n\t\t\tvar oParameters = oEvent.getParameters();\r\n\r\n\t\t\t//create file reader and file reader event handler\r\n\t\t\tvar oFileReader = new FileReader();\r\n\t\t\toFileReader.onload = (function() {\r\n\r\n\t\t\t\t//get file content read\r\n\t\t\t\tvar sDeclarationData = oFileReader.result;\r\n\t\t\t\tthis.oDeclarationPopover.declarationData = sDeclarationData.split(\",\")[1];\r\n\r\n\t\t\t}).bind(this);\r\n\r\n\t\t\t//invoke reading of content of file just uploaded\r\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\r\n\r\n\t\t},\r\n\r\n\t\t//confirm adding declaration for supplier\r\n\t\tonPressDeclarationAddConfirmButton: function() {\r\n\r\n\t\t\t//hide message strip\r\n\t\t\tthis._oMessageStrip.setVisible(false);\r\n\r\n\t\t\t//compute declaration expiry date\r\n\t\t\tvar dateExpiry = new Date();\r\n\t\t\tdateExpiry.setFullYear(dateExpiry.getFullYear() + 1);\r\n\r\n\t\t\t//check that supplier declaration now exists\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateDeclaration\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"ParentEntityID\": this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\"),\r\n\t\t\t\t\t\"ParentEntityType\": \"Supplier\",\r\n\t\t\t\t\t\"DeclarationTypeID\": \"SupplierDeclaration\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//receiving delarations existance check result\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//no supplier declaration on record\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoSupplierDeclarationOnRecord\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//create new entry in the OData model's declaration set\r\n\t\t\t\t\tthis._oODataModel.createEntry(\"DeclarationSet\", {\r\n\t\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\t\tDeclarationID: this.getUUID(),\r\n\t\t\t\t\t\t\tSupplierID: this._oODataModel.getProperty(\"SupplierID\", this.getView().getBindingContext(\"Registration\")),\r\n\t\t\t\t\t\t\tDeclarationTypeID: this.getView().byId(\"cboxSupplierDeclarationTypes\").getSelectedKey(),\r\n\t\t\t\t\t\t\tLastUpdateTimeStamp: new Date(),\r\n\t\t\t\t\t\t\tExpiryDate: dateExpiry\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//submit changes to get correct declaration key\t\t\t\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//success event handler\r\n\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t\t\t//close declaration dialog\r\n\t\t\t\t\t\t\tif (this.oDeclarationDialog.isOpen()) {\r\n\t\t\t\t\t\t\t\tthis.oDeclarationDialog.close();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//Show draft is saving\t\t\t\r\n\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t//confirm adding declaration for supplier\r\n\t\tonPressDeclarationUpdateConfirmButton: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oLatestDeclaration;\r\n\t\t\tvar sSupplierReferenceID;\r\n\t\t\tvar sSupplierReferenceType;\r\n\r\n\t\t\t//assert condition for declaration confirm\r\n\t\t\tif (this.oDeclarationDialog.oDeclaration) {\r\n\r\n\t\t\t\t//get supplier currently displayed\r\n\t\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t\t//prepare function call to 'getLatestDeclaration'\r\n\t\t\t\tif (oSupplier.VendorID) {\r\n\t\t\t\t\tsSupplierReferenceID = oSupplier.VendorID;\r\n\t\t\t\t\tsSupplierReferenceType = \"VendorID\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!oSupplier.VendorID) {\r\n\t\t\t\t\tsSupplierReferenceID = oSupplier.SupplierID;\r\n\t\t\t\t\tsSupplierReferenceType = \"SupplierID\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set view to no longer busy\r\n\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t\t//get latest supplier declaration and inspect time of last update\r\n\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/getLatestDeclaration\", {\r\n\r\n\t\t\t\t\t//url parameters\r\n\t\t\t\t\turlParameters: {\r\n\t\t\t\t\t\t\"ReferenceID\": sSupplierReferenceID,\r\n\t\t\t\t\t\t\"ReferenceType\": sSupplierReferenceType\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t//success handler: received declaration details\r\n\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t\t//assert processing conditions\r\n\t\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t\t//access latest declaration\r\n\t\t\t\t\t\t\toLatestDeclaration = oData.results[0];\r\n\r\n\t\t\t\t\t\t\t//where declaration for this supplier was updated\r\n\t\t\t\t\t\t\tif (oLatestDeclaration.LastUpdateTimeStamp > this.oDeclarationDialog.oDeclaration.LastUpdateTimeStamp) {\r\n\r\n\t\t\t\t\t\t\t\t//construct attribute path for declaration entity being updated\r\n\t\t\t\t\t\t\t\tvar sDeclarationAttributePath = \"/\" + this.getModel(\"Registration\").createKey(\"DeclarationSet\", {\r\n\t\t\t\t\t\t\t\t\tDeclarationID: this.oDeclarationDialog.oDeclaration.DeclarationID\r\n\t\t\t\t\t\t\t\t}) + \"/LastUpdateTimeStamp\";\r\n\r\n\t\t\t\t\t\t\t\t//set last update timestamp on this declaration\r\n\t\t\t\t\t\t\t\tthis._oODataModel.setProperty(sDeclarationAttributePath, new Date());\r\n\r\n\t\t\t\t\t\t\t\t//submit change to supplier\t\t\t\r\n\t\t\t\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t\t\t\t//success callback function\r\n\t\t\t\t\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}.bind(this),\r\n\r\n\t\t\t\t\t//error handler callback function\r\n\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//close declaration dialog\r\n\t\t\tif (this.oDeclarationDialog.isOpen()) {\r\n\t\t\t\tthis.oDeclarationDialog.close();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//on update finished of table of supplier declarations\r\n\t\tonUpdateFinishedTableSupplierDeclarations: function(oEvent) {\r\n\r\n\t\t\t//check whether supplier declarations are now valid\r\n\t\t\tthis.hasIncorrectInput([this.getView().byId(\"formSupplierDeclarations\")]);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//open declaration form template\r\n\t\tonPressDeclarationTemplateOpenButton: function() {\r\n\r\n\t\t\t//Create object path for declaration stream instance\r\n\t\t\tvar sDeclarationStreamPath = this._oODataModel.sServiceUrl + \"/\" +\r\n\t\t\t\tthis.getModel(\"Registration\").createKey(\"DeclarationStreamSet\", {\r\n\t\t\t\t\tDeclarationID: this.getUUID()\r\n\t\t\t\t});\r\n\t\t\tvar sDeclarationUrl = sDeclarationStreamPath + \"/$value\";\r\n\r\n\t\t\t//open new window with declaration form template\r\n\t\t\twindow.open(sDeclarationUrl);\r\n\r\n\t\t},\r\n\r\n\t\t//set document type input control\r\n\t\tsetSupplierDocumentTypesModel: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar bDocumentExists;\r\n\r\n\t\t\t//get supplier in its current state\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//only process if supplier available at this stage\r\n\t\t\tif (oSupplier) {\r\n\r\n\t\t\t\t//get document input control model as initialized during 'onInit'\r\n\t\t\t\tvar oDocumentTypeSetModel = SupplierUtils.getDocumentTypeSetModel(this.getOwnerComponent());\r\n\r\n\t\t\t\t//get documents currently available for this supplier\r\n\t\t\t\tvar aDocumentListItems = this.getView().byId(\"ucSupplierDocUploadCollection\").getItems();\r\n\r\n\t\t\t\t//where document type set is available at this moment\r\n\t\t\t\tif (oDocumentTypeSetModel) {\r\n\r\n\t\t\t\t\t//modify client data to suit current supplier\r\n\t\t\t\t\tvar aSupplierDocumentTypeSet = oDocumentTypeSetModel.oData.DocumentTypeSet.filter(function(oDocumentType, index, array) {\r\n\r\n\t\t\t\t\t\t//document type must be applicable to supplier\r\n\t\t\t\t\t\tif (oDocumentType.DocumentTypeScope === \"5\") {\r\n\r\n\t\t\t\t\t\t\t//establish whether document of this type exists\r\n\t\t\t\t\t\t\tbDocumentExists = false;\r\n\t\t\t\t\t\t\taDocumentListItems.forEach(function(oDocumentListItem) {\r\n\t\t\t\t\t\t\t\tvar oDocument = this._oODataModel.getObject(oDocumentListItem.getBindingContext(\"Registration\").getPath());\r\n\t\t\t\t\t\t\t\tif (oDocument && oDocument.DocumentType === oDocumentType.DocumentTypeID) {\r\n\t\t\t\t\t\t\t\t\tbDocumentExists = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t\t//remove type entry when required document is present\r\n\t\t\t\t\t\t\tif ((oDocumentType.InputCardinality === \"1\" || oDocumentType.InputCardinality === \"0..1\") && bDocumentExists === true) {\r\n\t\t\t\t\t\t\t\toDocumentType.DocumentTypeText = oDocumentType.DocumentTypeText.replace(\"* \", \"\");\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//add asteriks to document type text when required document is not present\r\n\t\t\t\t\t\t\tif (oDocumentType.InputCardinality === \"1\" && bDocumentExists === false && !/\\*/.test(oDocumentType.DocumentTypeText)) {\r\n\t\t\t\t\t\t\t\toDocumentType.DocumentTypeText = \"* \" + oDocumentType.DocumentTypeText;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//document with filter argument\r\n\t\t\t\t\t\t\tif (oDocumentType.FilterArgument) {\r\n\r\n\t\t\t\t\t\t\t\t//by document type scope qualifier\r\n\t\t\t\t\t\t\t\tswitch (oDocumentType.FilterArgument) {\r\n\t\t\t\t\t\t\t\t\tcase \"CSDNumber\":\r\n\t\t\t\t\t\t\t\t\t\tif (oSupplier.CSDNumber) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"VATRegistrationNbr\":\r\n\t\t\t\t\t\t\t\t\t\tif (oSupplier.VATRegistrationNbr) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"hasAddress\":\r\n\t\t\t\t\t\t\t\t\t\tvar aAddressListItems = this.getView().byId(\"tabSupplierAddresses\").getItems();\r\n\t\t\t\t\t\t\t\t\t\tif (aAddressListItems.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"hasBankAccount\":\r\n\t\t\t\t\t\t\t\t\t\tvar aBankAccountListItems = this.getView().byId(\"tabSupplierBankAccounts\").getItems();\r\n\t\t\t\t\t\t\t\t\t\tif (aBankAccountListItems.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"hasBEEClassification\":\r\n\t\t\t\t\t\t\t\t\t\tif (this.getView().byId(\"cboxBEEClassificationType\").getSelectedKey() !== \"N\") {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"isCommunitySupplier\":\r\n\t\t\t\t\t\t\t\t\t\tif (oSupplier.isCommunitySupplier) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"OrganisationID\":\r\n\t\t\t\t\t\t\t\t\t\tif (oSupplier.OrganisationID) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcase \"hasCertificate:SIRA\":\r\n\t\t\t\t\t\t\t\t\tcase \"hasCertificate:CIDB\":\r\n\t\t\t\t\t\t\t\t\tcase \"hasCertificate:COIDA\":\r\n\t\t\t\t\t\t\t\t\t\tvar bCertificateExists = false;\r\n\t\t\t\t\t\t\t\t\t\tvar aFilterArgumentParts = oDocumentType.FilterArgument.split(\":\");\r\n\t\t\t\t\t\t\t\t\t\tif (aFilterArgumentParts.length !== 2) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvar aCertificateListItems = this.getView().byId(\"tabSupplierCertificates\").getItems();\r\n\t\t\t\t\t\t\t\t\t\taCertificateListItems.forEach(function(oCertificateListItem) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar oCertificate = this._oODataModel.getObject(oCertificateListItem.getBindingContext(\"Registration\").getPath());\r\n\t\t\t\t\t\t\t\t\t\t\tif (oCertificate && oCertificate.CertificateTypeID === aFilterArgumentParts[1]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbCertificateExists = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t\t\t\t\treturn bCertificateExists;\r\n\r\n\t\t\t\t\t\t\t\t\t\t//default switch: document type not included in filtered list\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//document type qualifies\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//document type does not qualify\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t//document requirements overruled for validated supplier\r\n\t\t\t\t\tif (oSupplier.isValidated) {\r\n\r\n\t\t\t\t\t\t//for each supplier document type\r\n\t\t\t\t\t\taSupplierDocumentTypeSet.forEach(function(oDocumentType) {\r\n\r\n\t\t\t\t\t\t\t//by document type cardinality\r\n\t\t\t\t\t\t\tswitch (oDocumentType.InputCardinality) {\r\n\r\n\t\t\t\t\t\t\t\t//exactly one cardinality\r\n\t\t\t\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\t\t\t\toDocumentType.InputCardinality = \"0..1\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t//one to many cardinality\r\n\t\t\t\t\t\t\t\tcase \"1..*\":\r\n\t\t\t\t\t\t\t\t\toDocumentType.InputCardinality = \"0..*\";\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//visualize that document types for a validated entity are not obligatory\r\n\t\t\t\t\t\t\toDocumentType.DocumentTypeText = oDocumentType.DocumentTypeText.replace(\"* \", \"\");\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//Create new document type input control model\r\n\t\t\t\t\tvar oSupplierDocumentTypeSetModel = new JSONModel({\r\n\t\t\t\t\t\t\"DocumentTypeSet\": aSupplierDocumentTypeSet\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//make client model available for list binding\r\n\t\t\t\t\tthis.getView().setModel(oSupplierDocumentTypeSetModel, \"DocumentInputControl\");\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//set submit button enabled state\r\n\t\tsetSubmitButtonEnabledState: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar bBtnSubmitEntityEnabled = false;\r\n\t\t\tvar sBtnSaveEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\tvar sBtnSubmitEntityType = sap.m.ButtonType.Transparent;\r\n\r\n\t\t\t//save button transparent where no changes present\r\n\t\t\tif (!this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tsBtnSaveEntityType = sap.m.ButtonType.Transparent;\r\n\t\t\t}\r\n\r\n\t\t\t//get view binding context\r\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\r\n\r\n\t\t\t//get entity in its current state\r\n\t\t\tif (oContext) {\r\n\t\t\t\tvar oEntity = this._oODataModel.getObject(oContext.getPath());\r\n\t\t\t}\r\n\r\n\t\t\t//submit button enabled and emphasized for valid input on draft, revised or ready entity\r\n\t\t\tif (oEntity &&\r\n\t\t\t\t(oEntity.EntityStatusID === \"0\" ||\r\n\t\t\t\t\toEntity.EntityStatusID === \"4\" ||\r\n\t\t\t\t\toEntity.EntityStatusID === \"6\") &&\r\n\t\t\t\t!this._oODataModel.hasPendingChanges() &&\r\n\t\t\t\tthis.isValid([\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t\t])) {\r\n\t\t\t\tsBtnSubmitEntityType = sap.m.ButtonType.Emphasized;\r\n\t\t\t\tbBtnSubmitEntityEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t//set submit button enabled state and type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityEnabled\", bBtnSubmitEntityEnabled);\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSubmitEntityType\", sBtnSubmitEntityType);\r\n\r\n\t\t\t//set save button type\r\n\t\t\tthis._oViewModel.setProperty(\"/btnSaveEntityType\", sBtnSaveEntityType);\r\n\r\n\t\t},\r\n\r\n\t\t//set view controls enabled\r\n\t\tsetViewControlsEnabled: function(bEnabled) {\r\n\r\n\t\t\t//construct array for form input to enable\r\n\t\t\tvar aForms = [\r\n\t\t\t\tthis.getView().byId(\"formSupplierContacts\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierAddresses\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierAttributes\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierCertificates\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierBankAccounts\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierDeclarations\"),\r\n\t\t\t\tthis.getView().byId(\"formSupplierDocuments\")\r\n\t\t\t];\r\n\r\n\t\t\t//switch supplier view input controls enabled state\r\n\t\t\tthis.setFormInputControlsEnabled(aForms, bEnabled);\r\n\r\n\t\t\t//switch supplier view action controls enabled state\r\n\t\t\tthis.setFormActionControlsEnabled(aForms, bEnabled);\r\n\r\n\t\t\t//switch view action controls enabled state\r\n\t\t\tthis.setViewActionControlsEnabled(bEnabled);\r\n\r\n\t\t},\r\n\r\n\t\t//set bank model for input control\r\n\t\tsetBanksModel: function() {\r\n\r\n\t\t\t//get bank set model as initialized during 'onInit'\r\n\t\t\tvar oBankSetModel = SupplierUtils.getBankSetModel(this.getOwnerComponent());\r\n\r\n\t\t\t//where bank set model is available at this moment\r\n\t\t\tif (oBankSetModel) {\r\n\t\t\t\tthis.getView().setModel(oBankSetModel, \"BankInputControl\");\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//submit supplier\r\n\t\tsubmitSupplier: function(oAfterSubmit) {\r\n\r\n\t\t\t//set view to busy\r\n\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t//backend validate supplier before submission\r\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/validateSupplier\", {\r\n\r\n\t\t\t\t//url paramters\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"SupplierID\": this.getView().getBindingContext(\"Registration\").getProperty(\"SupplierID\"),\r\n\t\t\t\t\t\"CRUDActionID\": \"Update\"\r\n\t\t\t\t},\r\n\r\n\t\t\t\t//on receipt of supplier validation messages\r\n\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t//Local data declaration\r\n\t\t\t\t\tvar sTargetStatus = \"1\"; //Submitted\r\n\t\t\t\t\tvar sStatusAction = \"1\"; //Submitted for approval\r\n\r\n\t\t\t\t\t//message handling where applicable\r\n\t\t\t\t\tif (oData.results && oData.results.length > 0) {\r\n\r\n\t\t\t\t\t\t//set entity messages\r\n\t\t\t\t\t\tthis.setEntityMessages(oData.results);\r\n\r\n\t\t\t\t\t\t//set validation error strip message\r\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageEntityValidationFailed\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t//no further processing\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//Amend target entity status for this submit where applicable\r\n\t\t\t\t\tif (this._oNavData.fromTarget) {\r\n\t\t\t\t\t\tsTargetStatus = \"6\"; //Ready\r\n\t\t\t\t\t\tsStatusAction = \"6\"; //Ready for submission\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//set last action and entity status as submitted\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"EntityStatusID\", sTargetStatus, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionID\", sStatusAction, this.getView().getBindingContext(\"Registration\"));\r\n\t\t\t\t\tthis._oODataModel.setProperty(\"LastActionTimeStamp\", new Date(), this.getView().getBindingContext(\"Registration\"));\r\n\r\n\t\t\t\t\t//submit changes made to model content\r\n\t\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t\t//update success handler\r\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\r\n\r\n\t\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//close this window where requested\r\n\t\t\t\t\t\t\tif (oAfterSubmit.windowAction === \"close\") {\r\n\r\n\t\t\t\t\t\t\t\t//visualize person entity status\r\n\t\t\t\t\t\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t\t\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmittedSuccessfully\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t\t\t\t//disable view to await review workflow feedback\r\n\t\t\t\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t//close window containing view\r\n\t\t\t\t\t\t\t\twindow.close();\r\n\r\n\t\t\t\t\t\t\t\t//no further processing here\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//navigate where requested\r\n\t\t\t\t\t\t\tif (oAfterSubmit.navigate) {\r\n\r\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\r\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\r\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//remain on this view where requested\r\n\t\t\t\t\t\t\tif (!oAfterSubmit.navigate) {\r\n\r\n\t\t\t\t\t\t\t\t//visualize supplier entity status and confirm submission\r\n\t\t\t\t\t\t\t\tthis.promiseToVisualizeEntityStatus().then(function(oEntity) {\r\n\r\n\t\t\t\t\t\t\t\t\t//message handling: updated successfully\r\n\t\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSubmittedSuccessfully\"), sap.ui.core.MessageType.Success);\r\n\r\n\t\t\t\t\t\t\t\t\t//disable view to await review workflow feedback\r\n\t\t\t\t\t\t\t\t\tthis.setViewControlsEnabled(false);\r\n\r\n\t\t\t\t\t\t\t\t\t//set view to no longer busy\r\n\t\t\t\t\t\t\t\t\tthis.getModel(\"viewModel\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\t\t\t//dialog to confirm submission\r\n\t\t\t\t\t\t\t\t\tthis.confirmSubmission(oEntity, false);\r\n\r\n\t\t\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}.bind(this)\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonDocumentRequestUploadCollectionChange: function(oEvent) {\r\n\r\n\t\t\t//Get upload collection from event source\r\n\t\t\tvar oUploadCollection = oEvent.getSource();\r\n\t\t\tvar oCBoxDocumentRequests = sap.ui.getCore().byId(\"cboxDocumentRequests\");\r\n\t\t\tvar sDocumentTypeID = oCBoxDocumentRequests.getSelectedKey();\r\n\r\n\t\t\t//Get attributes of file just uploaded\r\n\t\t\tvar oParameters = oEvent.getParameters();\r\n\r\n\t\t\t//Prevent instant upload by FileUploader (line 970, debug source)\r\n\t\t\toUploadCollection._oFileUploader.setEnabled(false);\r\n\r\n\t\t\t//create file reader and file reader event handler\r\n\t\t\tvar oFileReader = new FileReader();\r\n\t\t\toFileReader.onload = (function() {\r\n\r\n\t\t\t\t//get file content read\r\n\t\t\t\tvar sDocumentContent = oFileReader.result;\r\n\t\t\t\tsDocumentContent = sDocumentContent.split(\",\")[1];\r\n\r\n\t\t\t\t//get new upload collection item and set status\r\n\t\t\t\tvar oUploadCollectionItem = oUploadCollection.aItems[0];\r\n\t\t\t\toUploadCollectionItem._percentUploaded = 100;\r\n\t\t\t\toUploadCollectionItem._status = \"display\";\r\n\r\n\t\t\t\t//set binding context for new upload collection item\r\n\t\t\t\tthis._oODataModel.setProperty(\"FileData\", sDocumentContent, oFileReader.oContext);\r\n\r\n\t\t\t\t//submit changes to get correct document key\t\t\t\r\n\t\t\t\tthis._oODataModel.submitChanges({\r\n\r\n\t\t\t\t\t//success event handler\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\r\n\t\t\t\t\t\t//show draft is saved\r\n\t\t\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\t\t\toDraftIndicator.showDraftSaved();\r\n\t\t\t\t\t\toDraftIndicator.clearDraftState();\r\n\r\n\t\t\t\t\t\t//inspect batchResponses for errors and visualize\r\n\t\t\t\t\t\tif (this.hasODataBatchErrorResponse(oData.__batchResponses)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//raise event upload complete\r\n\t\t\t\t\t\toUploadCollection.fireUploadComplete();\r\n\r\n\t\t\t\t\t\t//get documents of this supplier\r\n\t\t\t\t\t\tvar aDocuments = this._oODataModel.getProperty(this.getView().getBindingContext(\"Registration\").getPath() +\r\n\t\t\t\t\t\t\t\"/toDocuments\");\r\n\r\n\t\t\t\t\t\t//remove each of the documents of the requested type\r\n\t\t\t\t\t\taDocuments.forEach(function(sDocumentKey) {\r\n\r\n\t\t\t\t\t\t\t//construct path to existing supplier document\r\n\t\t\t\t\t\t\tvar oDocument = this._oODataModel.getProperty(\"/\" + sDocumentKey);\r\n\r\n\t\t\t\t\t\t\t//remove existing document where its type matches the one just uploaded\r\n\t\t\t\t\t\t\tif (oDocument && oDocument.DocumentType === sDocumentTypeID && !oDocument.DocumentRequestID) {\r\n\t\t\t\t\t\t\t\tthis._oODataModel.remove(\"/\" + sDocumentKey, {});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}.bind(this));\r\n\r\n\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Show draft is saving\t\t\t\r\n\t\t\t\tvar oDraftIndicator = this.getView().byId(\"draftIndSupplier\");\r\n\t\t\t\toDraftIndicator.showDraftSaving();\r\n\r\n\t\t\t}).bind(this);\r\n\r\n\t\t\t//get supplier in current state\r\n\t\t\tvar oSupplier = this.getView().getBindingContext(\"Registration\").getObject();\r\n\r\n\t\t\t//flag document request as uploaded and get document request ID\t\t\r\n\t\t\tvar oDocumentRequestsModel = DocumentRequestUtils.getDocumentRequestsModel();\r\n\t\t\tvar aDocumentRequests = oDocumentRequestsModel.getData().DocumentRequestSet.filter(function(oDocumentRequest) {\r\n\t\t\t\tif (oDocumentRequest.DocumentTypeID === oCBoxDocumentRequests.getSelectedItem().getKey()) {\r\n\t\t\t\t\toDocumentRequest.Uploaded = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//create new entry in the OData model's DocumentSet\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"DocumentSet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tDocumentID: this.getUUID(),\r\n\t\t\t\t\tDocumentType: sDocumentTypeID,\r\n\t\t\t\t\tSupplierID: oSupplier.SupplierID,\r\n\t\t\t\t\tFileName: oParameters.files[0].name,\r\n\t\t\t\t\tFileType: oParameters.files[0].type,\r\n\t\t\t\t\tFileSize: oParameters.files[0].size.toString(),\r\n\t\t\t\t\tDocumentRequestID: aDocumentRequests[0].DocumentRequestID,\r\n\t\t\t\t\tMimeType: oParameters.files[0].type\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//provide file reader with binding context\r\n\t\t\toFileReader.oContext = oContext;\r\n\r\n\t\t\t//invoke reading of content of file just uploaded\r\n\t\t\toFileReader.readAsDataURL(oParameters.files[0]);\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *@memberOf capetown.gov.registration.controller.Supplier\r\n\t\t */\r\n\t\tonCBoxDocumentRequestsChange: function(oEvent) {\r\n\r\n\t\t\t//get reference to document upload UI controls\r\n\t\t\tvar oCBoxDocumentRequests = oEvent.getSource();\r\n\t\t\tvar oUploadCollection = sap.ui.getCore().byId(\"ucDocumentRequestUploadCollection\");\r\n\r\n\t\t\t//disable upload collection upload when no document type selected\r\n\t\t\tif (oCBoxDocumentRequests.getSelectedItem() === null) {\r\n\t\t\t\toUploadCollection.setUploadEnabled(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//enable upload collection upload when document type selected\r\n\t\t\toUploadCollection.setUploadEnabled(true);\r\n\r\n\t\t},\r\n\r\n\t\t//on completion of document upload for document request \r\n\t\tonDocumentRequestUploadComplete: function() {\r\n\r\n\t\t\t//reset document request document upload collection for next interaction\r\n\t\t\tsap.ui.getCore().byId(\"ucDocumentRequestUploadCollection\").setUploadEnabled(false);\r\n\t\t\tvar oCBoxDocumentRequests = sap.ui.getCore().byId(\"cboxDocumentRequests\");\r\n\t\t\toCBoxDocumentRequests.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxDocumentRequests.setSelectedKey(null);\r\n\r\n\t\t\t//reduce document requests to those not yet uploaded\r\n\t\t\toCBoxDocumentRequests.getBinding(\"items\").filter(new sap.ui.model.Filter(\"Uploaded\", \"EQ\", false));\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//on deletion of document request\r\n\t\tonDocumentRequestDeleted: function(oEvent) {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar oCBoxDocumentRequests = sap.ui.getCore().byId(\"cboxDocumentRequests\");\r\n\r\n\t\t\t//refresh document request client model\r\n\t\t\tDocumentRequestUtils.setDocumentRequestsModel(this, \"SupplierID\", false);\r\n\r\n\t\t\t//reset document request upload collection for next interaction\r\n\t\t\tsap.ui.getCore().byId(\"ucDocumentRequestUploadCollection\").setUploadEnabled(false);\r\n\t\t\toCBoxDocumentRequests.setValueState(sap.ui.core.ValueState.None);\r\n\t\t\toCBoxDocumentRequests.setSelectedKey(null);\r\n\r\n\t\t\t//call base controller file deletion event handler\r\n\t\t\tthis.onFileDeleted(oEvent);\r\n\r\n\t\t\t//visualize organisation entity status\r\n\t\t\tthis.visualizeEntityStatus();\r\n\r\n\t\t},\r\n\r\n\t\t//filter function: has document request ID\r\n\t\thasDocumentRequestID: function(sDocumentRequestID) {\r\n\r\n\t\t\t//has document request ID that is not initial\r\n\t\t\tif (sDocumentRequestID) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//press on message popover link to set focus\r\n\t\tonPressMessagePopoverItemLink: function(oEvent) {\r\n\r\n\t\t\t//get icon tabbar or wizard holding forms\r\n\t\t\tvar oIconTabBar = this.getView().byId(\"itabSupplier\");\r\n\t\t\tvar oWizSupplierCreate = this.getView().byId(\"wizSupplierCreate\");\r\n\r\n\t\t\t//where icon tabbar present\r\n\t\t\tif (oIconTabBar) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formSupplierAttributes\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Attributes\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierAddresses\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Addresses\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierDocuments\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Documents\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierBEEClassification\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"B-BBEE\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierContacts\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Contacts\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierBankAccounts\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Accounts\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierCertificates\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Certificates\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierDeclarations\":\r\n\t\t\t\t\t\toIconTabBar.setSelectedKey(\"Declarations\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//where supplier create wizard is present\r\n\t\t\tif (oWizSupplierCreate) {\r\n\r\n\t\t\t\t//open icon tab containing form related to message\r\n\t\t\t\tswitch (oEvent.getSource().getTarget()) {\r\n\t\t\t\t\tcase \"formSupplierAttributes\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierAttributes\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierAddresses\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierAddresses\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierDocuments\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierDocuments\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierBEEClassification\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierBEEClassification\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierContacts\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierContacts\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierBankAccounts\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierBankAccounts\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierCertificates\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierCertificates\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formSupplierDeclarations\":\r\n\t\t\t\t\t\toWizSupplierCreate.goToStep(this.getView().byId(\"wizstepSupplierDeclarations\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//set BEE classificatin attributes depending on classification type\r\n\t\tsetBEEClassificationAttributesVisibility: function(sBEEClassificationTypeID) {\r\n\r\n\t\t\t//processing depending on BEE classification type\r\n\t\t\tswitch (sBEEClassificationTypeID) {\r\n\r\n\t\t\t\t//non contributor\r\n\t\t\t\tcase \"N\":\r\n\t\t\t\t\tthis.getView().byId(\"felemBEELevel\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBOwnPercentage\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBWOwnPercentage\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEClassifExpiryDate\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateNumber\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateAgency\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierType\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierRegistrationNbr\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierName\").setVisible(false);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//where exempted micro enterprise\r\n\t\t\t\tcase \"EME\":\r\n\t\t\t\t\tthis.getView().byId(\"felemBEELevel\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBWOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEClassifExpiryDate\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateNumber\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateAgency\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierType\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierRegistrationNbr\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierName\").setVisible(false);\r\n\t\t\t\t\tif (this.getView().byId(\"cboxBEEVerifierType\").getSelectedKey() === \"EME VERIFIER\") {\r\n\t\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierRegistrationNbr\").setVisible(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierName\").setVisible(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//where qualifying small enterprise\r\n\t\t\t\tcase \"QSE\":\r\n\t\t\t\t\tthis.getView().byId(\"felemBEELevel\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBWOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEClassifExpiryDate\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierType\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateNumber\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateAgency\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierRegistrationNbr\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierName\").setVisible(false);\r\n\t\t\t\t\tif (this.getView().byId(\"cboxBEEVerifierType\").getSelectedKey() === \"EME VERIFIER\") {\r\n\t\t\t\t\t\tthis.getView().byId(\"felemBEECertificateNumber\").setVisible(true);\r\n\t\t\t\t\t\tthis.getView().byId(\"felemBEECertificateAgency\").setVisible(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//for other BEE classification types\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.getView().byId(\"felemBEELevel\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBWOwnPercentage\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEClassifExpiryDate\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateNumber\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEECertificateAgency\").setVisible(true);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierType\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierRegistrationNbr\").setVisible(false);\r\n\t\t\t\t\tthis.getView().byId(\"felemBEEVerifierName\").setVisible(false);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//collate entity identity form inputs\r\n\t\tgetIdentityFormInputs: function() {\r\n\r\n\t\t\t//local data declaration\r\n\t\t\tvar aIdentityFormInputs = [];\r\n\t\t\t\r\n\t\t\t//add all form input representing entity identity\r\n\t\t\taIdentityFormInputs.push(this.getView().byId(\"inputVendorID\"));\r\n\r\n\t\t\t//feedback to caller\r\n\t\t\treturn aIdentityFormInputs;\r\n\r\n\t\t},\r\n\r\n\t\t//handle support menu item press\r\n\t\tonPressSupportMenuItem: function(oEvent) {\r\n\r\n\t\t\t//get selected menu item\r\n\t\t\tvar oSupportMenuItem = oEvent.getParameter(\"item\");\r\n\r\n\t\t\t//define function for callback after entity data refresh\r\n\t\t\tvar fnCallBack = function() {\r\n\r\n\t\t\t\t//get supplier in current status\r\n\t\t\t\tvar oSupplier = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath());\r\n\r\n\t\t\t\t//filter ward with supplier subcouncil attribute\r\n\t\t\t\tthis.getView().byId(\"cboxWard\").getBinding(\r\n\t\t\t\t\t\"items\").filter(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"WardID\",\r\n\t\t\t\t\toperator: \"StartsWith\",\r\n\t\t\t\t\tvalue1: oSupplier.SubCouncilID + \"/\"\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t//refresh BEE classification binding\r\n\t\t\t\tvar oBEEClassification = this._oODataModel.getObject(this.getView().getBindingContext(\"Registration\").getPath() +\r\n\t\t\t\t\t\"/toBEEClassification\");\r\n\t\t\t\tvar sBEEClassificationKey = \"/\" + this.getModel(\"Registration\").createKey(\"BEEClassificationSet\", {\r\n\t\t\t\t\tBEEClassificationID: oBEEClassification.BEEClassificationID\r\n\t\t\t\t});\r\n\t\t\t\tthis.getView().byId(\"formSupplierBEEClassification\").bindElement({\r\n\t\t\t\t\tpath: sBEEClassificationKey,\r\n\t\t\t\t\tmodel: \"Registration\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//make available the array of selected industry keys\r\n\t\t\t\tif (oSupplier.IndustryKeys && oSupplier.IndustryKeys.length > 0) {\r\n\t\t\t\t\tvar aIndustryKeys = oSupplier.IndustryKeys.split(\",\");\r\n\t\t\t\t\tthis._oViewModel.setProperty(\"/aIndustryKeys\", aIndustryKeys);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//refresh table of related entities as refreshed data might hold no result for association\r\n\t\t\t\tthis.getView().byId(\"tabSupplierBankAccounts\").getBinding(\"items\").refresh();\r\n\t\t\t\tthis.getView().byId(\"tabSupplierAddresses\").getBinding(\"items\").refresh();\r\n\t\t\t\tthis.getView().byId(\"tabSupplierContacts\").getBinding(\"items\").refresh();\r\n\t\t\t\tthis.getView().byId(\"tabSupplierCertificates\").getBinding(\"items\").refresh();\r\n\t\t\t\tthis.getView().byId(\"tabSupplierDeclarations\").getBinding(\"items\").refresh();\r\n\t\t\t\tif (this.getView().byId(\"tabSupplierPersonDocuments\")) {\r\n\t\t\t\t\tthis.getView().byId(\"tabSupplierPersonDocuments\").getBinding(\"items\").refresh();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.getView().byId(\"tabSupplierOrganisationDocuments\")) {\r\n\t\t\t\t\tthis.getView().byId(\"tabSupplierOrganisationDocuments\").getBinding(\"items\").refresh();\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\t//refresh supplier data from ERP backend\r\n\t\t\tif (/mitemSupportRefreshSupplier/.test(oSupportMenuItem.getId())) {\r\n\t\t\t\tthis.refreshEntityDataFromERP(\"Supplier\",\r\n\t\t\t\t\t\"toPerson,toOrganisation,toBEEClassification,toDocuments,toContacts,toBankAccounts,toAddresses,toCertificates,toDeclarations\",\r\n\t\t\t\t\tfnCallBack);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t//hint for industry key\r\n\t\tonPressHintForIndustryKey: function() {\r\n\r\n\t\t\t//render industry key listing with description in new browser tab\r\n\t\t\twindow.open(\r\n\t\t\t\t\"http://resource.capetown.gov.za/documentcentre/Documents/Forms%2C%20notices%2C%20tariffs%20and%20lists/SCM%20419%20V4_Annex%20B%20-%20Industry%20Key%20List.pdf\",\r\n\t\t\t\t\"Industry key listing\");\r\n\r\n\t\t},\r\n\t\t\r\n\t\t//handle supplier delete button press\r\n\t\tonPressSupplierDeleteButton: function(){\r\n\r\n\t\t\t//get context pointing to supplier for deletion\r\n\t\t\tvar oContext = this.getView().getBindingContext(\"Registration\");\r\n\t\t\t\r\n\t\t\t//get supplier attributes\r\n\t\t\tvar oSupplier = this._oODataModel.getObject(oContext.getPath());\r\n\t\t\t\r\n\t\t\t//check supplier is not in submitted status\r\n\t\t\tif(oSupplier.EntityStatusID === \"1\"){\r\n\t\t\t\t\r\n\t\t\t\t//message handling: no delete for submitted entity\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSubmittedSupplierEntity\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t//check whether this supplier is still related\r\n\t\t\tif (this.isRelated(oContext)) {\r\n\r\n\t\t\t\t//message handling: no delated for related entity\r\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageNoDeleteOfSupplierRelatedEntity\"), sap.ui.core.MessageType.Error);\r\n\r\n\t\t\t\t//no further processing\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//confirmation dialog to delete this supplier\r\n\t\t\tsap.m.MessageBox.confirm(\"Delete supplier trading as \" + oSupplier.TradingAsName + \"?\", {\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\r\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\r\n\t\t\t\t//on confirmation dialog close\r\n\t\t\t\tonClose: (function(oAction) {\r\n\r\n\t\t\t\t\t//user choice: proceed with deletion\r\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\r\n\r\n\t\t\t\t\t\t//delete service from backend\r\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\r\n\r\n\t\t\t\t\t\t\t//service entity deleted successfully\r\n\t\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\t\t//message handling\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setText(this._oResourceBundle.getText(\"deleteModelEntitySuccessful\"));\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setType(sap.ui.core.MessageType.Success);\r\n\t\t\t\t\t\t\t\tthis._oMessageStrip.setVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\r\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//return to caller where navigation was with 'display', i.e. without hash change\r\n\t\t\t\t\t\t\t\tif (this._oNavData && this._oNavData.fromTarget) {\r\n\r\n\t\t\t\t\t\t\t\t\t//returning from navigation without hash change\r\n\t\t\t\t\t\t\t\t\tthis.getRouter().getTargets().display(this._oNavData.fromTarget, {\r\n\t\t\t\t\t\t\t\t\t\t\"returningFrom\": this._oNavData.toTarget\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t//forget source of navigation\r\n\t\t\t\t\t\t\t\t\tdelete this._oNavData.fromTarget;\r\n\r\n\t\t\t\t\t\t\t\t\t//return to caller where navigation was with matched route pattern\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t//navigate back in history\r\n\t\t\t\t\t\t\t\t\tthis.onNavBack(\"Home\");\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//failed to delete supplier entity\r\n\t\t\t\t\t\t\terror: function(oError){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//render error in OData response \r\n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}.bind(this)\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).bind(this)\r\n\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/supplier/SupplierPersonCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/supplier/SupplierCreate.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(SupplierCreateController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierCreateController.extend(\"capetown.gov.registration.controller.supplier.SupplierPersonCreate\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"SupplierPersonCreate\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tchkPersonDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkOrganisationDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oSupplierWizard = this.getView().byId(\"wizSupplierCreate\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() { \r\n\t\t\t\t\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/util/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(UI5Object, MessageBox, JSONModel) {\n\t\"use strict\";\n\n\t/**\n\t * @class ErrorHandler\n\t * @description Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t * @public\n\t */\n\treturn UI5Object.extend(\"com.rbgapps.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * @method Constructor\n\t\t * @inner\n\t\t */\n\t\tconstructor: function(oComponent) {\n\n\t\t\t//initialize variables\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel(\"Registration\");\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"messageServiceErrorHasOccured\");\n\n\t\t\t//failed to get metadata\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\tthis.showMetadataError(oParams.response.message);\n\t\t\t}, this);\n\n\t\t\t//attach to request failure event\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\n\n\t\t},\n\n\t\t/**\n\t\t * Event Handler for Request Fail event\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {object} oEvent an event containing the response data\n\t\t * @private\n\t\t */\n\t\tonRequestFailed: function(oEvent) {\n\n\t\t\t//get request failure context\n\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\tthis.showServiceError(oParams.response);\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * @method showMetadataError\n\t\t * @description Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * @description The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\tshowMetadataError: function(sMessageDetails) {\n\n\t\t\t//get backend connection error message text\n\t\t\tvar sMessage = this._oComponent.getModel(\"i18n\").getResourceBundle().getText(\"messageBackendConnectionErrorOccured\");\n\n\t\t\t//construct default message details text where applicable\n\t\t\tif (!sMessageDetails) {\n\t\t\t\tsMessageDetails = this._oComponent.getModel(\"i18n\").getResourceBundle().getText(\"messageMetaDataErrorOccured\");\n\t\t\t}\n\n\t\t\t//show error dialog\t\t\t\t\n\t\t\tthis._oComponent.showErrorDialog(sMessage, sMessageDetails, \"Backend or connection error occured\");\n\n\t\t},\n\n\t\t/**\n\t\t * Shows error dialog when a service call has failed.\n\t\t * @param {object} oResponse a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\tshowServiceError: function(oResponse) {\n\n\t\t\t//local data declaration\n\t\t\tvar sMessage;\n\t\t\tvar sMessageDetails = \"\";\n\n\t\t\t//get backend connection error message text\n\t\t\tsMessage = this._oComponent.getModel(\"i18n\").getResourceBundle().getText(\"messageBackendConnectionErrorOccured\");\n\n\t\t\t//for exception handling\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t//format response text for display in error message details\n\t\t\t\tvar oResponseText = JSON.parse(oResponse.responseText);\n\t\t\t\tsMessageDetails = oResponseText.error.message.value;\n\n\t\t\t} catch (exception) {\n\t\t\t\t\n\t\t\t\t//no network connection\n\t\t\t\tif (oResponse.statusCode === 0) {\n\t\t\t\t\tsMessageDetails = \"Your browser is currently unable to connect to City of Cape Town. Check your network connection\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//a server error occured\n\t\t\t\tif (oResponse.statusCode === 500) {\n\t\t\t\t\tsMessageDetails = \"An unexpected backend error occured\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//default where message details could not be derived\n\t\t\t\tif (sMessageDetails === \"\") {\n\t\t\t\t\tsMessageDetails = \"An unexpected connection or backend error occured\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*skip error dialog for errors stemming from certain 'busi' exceptions.\n\t\t\t  Those errors are handled in BaseController.hasODataBatchErrorResponse\n\t\t\t  which in turn is called in the 'success' callback function of any\n\t\t\t  OData action*/\n\t\t\tif(oResponseText && oResponseText.error){\n\t\t\t\t\n\t\t\t\t//missing authorization for requested action\n\t\t\t\tif(oResponseText.error.code === \"ZREG_UI5/129\"){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t//show error dialog\t\t\t\t\n\t\t\tthis._oComponent.showErrorDialog(sMessage, sMessageDetails, \"Backend or connection error occured\");\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/supplier/SupplierOrganisationCreate.controller.js": "sap.ui.define([\r\n\t\"capetown/gov/registration/controller/supplier/SupplierCreate.controller\",\r\n\t\"capetown/gov/registration/util/SupplierUtils\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(SupplierCreateController, SupplierUtils, JSONModel) {\r\n\t\"use strict\";\r\n\treturn SupplierCreateController.extend(\"capetown.gov.registration.controller.supplier.SupplierOrganisationCreate\", {\r\n\r\n\t\t//initialization of this controller\r\n\t\tonInit: function() {\r\n\r\n\t\t\t//initialize\r\n\t\t\tthis.initialize();\r\n\r\n\t\t\t//hook into route matched to adopt parameters for UI rendering\r\n\t\t\tthis.getRouter().getTarget(\"SupplierOrganisationCreate\").attachDisplay(this.onPatternMatched, this);\r\n\r\n\t\t\t//set view model for controlling UI attributes\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\",\r\n\t\t\t\taIndustryKeys: [],\r\n\t\t\t\tpopContactFormTitle: \"\",\r\n\t\t\t\tpopCertificateFormTitle: \"\",\r\n\t\t\t\tpopBankAccountFormTitle: \"\",\r\n\t\t\t\tstatusSupplierIcon: \"\",\r\n\t\t\t\tstatusSupplierState: sap.ui.core.ValueState.None,\r\n\t\t\t\tchkPersonDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tchkOrganisationDataAccuracyDeclarationSelected: false,\r\n\t\t\t\tcboxCertificateTypesSelectedKey: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\t\t\t//keep track of wizard control\r\n\t\t\tthis._oSupplierWizard = this.getView().byId(\"wizSupplierCreate\");\r\n\t\t\t\r\n\t\t\t//get bank set for bank account maintenance\r\n\t\t\tSupplierUtils.retrieveBankSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t//get document type set for document input controler\r\n\t\t\tSupplierUtils.retrieveDocumentTypeSetModel(this.getOwnerComponent());\r\n\t\t\t\r\n\t\t\t/*attach to document upload collection binding 'DataReceived' event\r\n\t\t\t  to cater for refresh of document input control when documents are\r\n\t\t\t  uploaded or deleted. This is required because the UI list binding \r\n\t\t\t  for the upload collection 'items' aggregation is no yet refreshed\r\n\t\t\t  at the time method 'onSupplierDocumentUploadComplete' and method\r\n\t\t\t  'onDocumentDeleted' are executed. */\r\n\t\t\tthis.getView().byId(\"ucSupplierDocUploadCollection\").getBinding(\"items\").attachDataReceived(function() { \r\n\t\t\t\t\r\n\t\t\t\t//prepare document input control view model\r\n\t\t\t\tthis.setSupplierDocumentTypesModel();\r\n\t\t\t\t\r\n\t\t\t}, this);\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"capetown/gov/registration/controller/NotificationList.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/Base.controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\treturn BaseController.extend(\"capetown.gov.registration.controller.NotificationList\", {\n\n\t\t//Initialization of this controller\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"NotificationList\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set models: view model\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\ttableNoDataText: this.getResourceBundle().getText(\"tableNoDataText\"),\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getView().setModel(oViewModel, \"viewModel\");\n\t\t\tthis._oViewModel = oViewModel;\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.NotificationList\n\t\t */\n\t\tonPatternMatched: function(oEvent) {\n\n\t\t\t//Initialize variables\n\t\t\tthis._oMessageStrip.setVisible(false);\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//trigger refresh of list\n\t\t\tthis.getView().byId(\"tabNotificationList\").getBinding(\"items\").refresh();\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.NotificationList\n\t\t * Event handler for 'Press' on NotificationList\n\t\t */\n\t\tonPressNotificationListItem: function(oEvent) {\n\n\t\t\t//prepare object path to be passed on to target\n\t\t\tvar oListItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\tvar oContext = oListItem.getBindingContext(\"Registration\");\n\t\t\tvar oNotification = oContext.getObject();\n\n\t\t\t//Navigate to person view\n\t\t\tif (oNotification.PersonID) {\n\t\t\t\tthis.getRouter().navTo(\"Person\", {\n\t\t\t\t\tPersonID: oNotification.PersonID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Navigate to organisation view\n\t\t\tif (oNotification.OrganisationID) {\n\t\t\t\tthis.getRouter().navTo(\"Organisation\", {\n\t\t\t\t\tOrganisationID: oNotification.OrganisationID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Navigate to service view\n\t\t\tif (oNotification.ServiceID) {\n\t\t\t\tthis.getRouter().navTo(\"Service\", {\n\t\t\t\t\tServiceID: oNotification.ServiceID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Navigate to supplier view\n\t\t\tif (oNotification.SupplierID) {\n\n\t\t\t\t//get supplier entity\n\t\t\t\tvar sSupplierKey = \"/\" + this.getModel(\"Registration\").createKey(\"SupplierSet\", {\n\t\t\t\t\tSupplierID: oNotification.SupplierID\n\t\t\t\t});\n\t\t\t\tvar oSupplier = this._oODataModel.getObject(sSupplierKey);\n\n\t\t\t\t//supplier organisation\n\t\t\t\tif (oSupplier.OrganisationID) {\n\t\t\t\t\tthis.getRouter().navTo(\"SupplierOrganisation\", {\n\t\t\t\t\t\tSupplierID: oNotification.SupplierID\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//supplier person\n\t\t\t\tif (oSupplier.PersonID) {\n\t\t\t\t\tthis.getRouter().navTo(\"SupplierPerson\", {\n\t\t\t\t\t\tSupplierID: oNotification.SupplierID\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//Render broadcast notification in popover\n\t\t\tif (!oNotification.ServiceID &&\n\t\t\t\t!oNotification.SupplierID &&\n\t\t\t\t!oNotification.PersonID &&\n\t\t\t\t!oNotification.OrganisationID) {\n\n\t\t\t\t//by notification severity\n\t\t\t\tswitch (oNotification.NotificationSeverity) {\n\n\t\t\t\t\t//send as success message\t\n\t\t\t\t\tcase \"Success\":\n\t\t\t\t\t\tsap.m.MessageBox.success(oNotification.NotificationText);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//send as information message\t\n\t\t\t\t\tcase \"Information\":\n\t\t\t\t\t\tsap.m.MessageBox.information(oNotification.NotificationText);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//send as warning message\t\n\t\t\t\t\tcase \"Warning\":\n\t\t\t\t\t\tsap.m.MessageBox.warning(oNotification.NotificationText);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t//send as error message\t\n\t\t\t\t\tcase \"Error\":\n\t\t\t\t\t\tsap.m.MessageBox.error(oNotification.NotificationText);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//delete Notification\n\t\tonPressNotificationDeleteButton: function(oEvent) {\n\n\t\t\t//local data declaration\n\t\t\tvar sConfirmationText;\n\n\t\t\t//get context pointing to person for deletion\n\t\t\tvar oContext = oEvent.getSource().getParent().getBindingContext(\"Registration\");\n\n\t\t\t//get Notification attributes\n\t\t\tvar oNotification = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//build confirmation text for person notification deletion\n\t\t\tif (oNotification.PersonID) {\n\t\t\t\tsConfirmationText = \"Delete notification for \" + this.formatPersonID(oNotification.PersonID) + \"?\";\n\t\t\t}\n\n\t\t\t//build confirmation text for organisation notification deletion\n\t\t\tif (oNotification.OrganisationID) {\n\t\t\t\tsConfirmationText = \"Delete notification for \" + this.formatOrganisationID(\n\t\t\t\t\toNotification.OrganisationID) + \"?\";\n\t\t\t}\n\n\t\t\t//build confirmation text for supplier notification deletion\n\t\t\tif (oNotification.SupplierID) {\n\t\t\t\tsConfirmationText = \"Delete notification for \" + this.formatSupplierID(oNotification.SupplierID) + \"?\";\n\t\t\t}\n\n\t\t\t//build confirmation text for service notification deletion\n\t\t\tif (oNotification.ServiceID) {\n\t\t\t\tsConfirmationText = \"Delete notification for \" + this.formatServiceID(oNotification.ServiceID) + \"?\";\n\t\t\t}\n\n\t\t\t//build confirmation text for broadcast notification\n\t\t\tif (!oNotification.ServiceID &&\n\t\t\t\t!oNotification.SupplierID &&\n\t\t\t\t!oNotification.PersonID &&\n\t\t\t\t!oNotification.OrganisationID) {\n\t\t\t\tsConfirmationText = \"Delete the selected notification?\";\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete this notification\n\t\t\tsap.m.MessageBox.confirm(sConfirmationText, {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//delete notification from backend\n\t\t\t\t\t\tthis._oODataModel.remove(oContext.getPath(), {\n\n\t\t\t\t\t\t\t//notification entity deleted successfully\n\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t//message handling: deleted successfully\n\t\t\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"deleteModelEntitySuccessful\"), sap.ui.core.MessageType.Success);\n\n\t\t\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//failed to delete notification entity\n\t\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//render error in OData response \n\t\t\t\t\t\t\t\tthis.renderODataErrorResponse(oError);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//factory function for notification list item\n\t\tcreateNotificationListItem: function(sId, oContext) {\n\n\t\t\t//local data declaration\n\t\t\tvar sNotificationType;\n\t\t\tvar sNotificationForEntity;\n\n\t\t\t//get entity\n\t\t\tvar oNotification = this._oODataModel.getObject(oContext.getPath());\n\n\t\t\t//instantiate new column list item\n\t\t\tvar oColumnListItem = new sap.m.ColumnListItem({\n\t\t\t\ttype: \"Active\",\n\t\t\t\tbusy: false\n\t\t\t});\n\n\t\t\t//determine notification type and entity referred \n\t\t\tif (oNotification.OrganisationID) {\n\t\t\t\tsNotificationType = \"Organisation\";\n\t\t\t\tsNotificationForEntity = this.formatOrganisationID(oNotification.OrganisationID);\n\t\t\t}\n\t\t\tif (oNotification.PersonID) {\n\t\t\t\tsNotificationType = \"Person\";\n\t\t\t\tsNotificationForEntity = this.formatPersonID(oNotification.PersonID);\n\t\t\t}\n\t\t\tif (oNotification.SupplierID) {\n\t\t\t\tsNotificationType = \"Supplier\";\n\t\t\t\tsNotificationForEntity = this.formatSupplierID(oNotification.SupplierID);\n\t\t\t}\n\t\t\tif (oNotification.ServiceID) {\n\t\t\t\tsNotificationType = \"Service\";\n\t\t\t\tsNotificationForEntity = this.formatServiceID(oNotification.ServiceID);\n\t\t\t}\n\t\t\tif (!sNotificationType) {\n\t\t\t\tsNotificationType = \"Broadcast\";\n\t\t\t\tsNotificationForEntity = \"Me\";\n\t\t\t}\n\n\t\t\t//Notification type value\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: sNotificationType\n\t\t\t}), 999);\n\n\t\t\t//'Notification for entity' cell\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: sNotificationForEntity\n\t\t\t}), 999);\n\n\t\t\t//notification severity\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: oNotification.NotificationSeverity\n\t\t\t}), 999);\n\n\t\t\t//notification text \n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: oNotification.NotificationText, //.substring(0, 41) + \"...\"\n\t\t\t\tmaxLines: 1\n\t\t\t}), 999);\n\n\t\t\t//action timestamp\n\t\t\tvar sNotifiedAt;\n\t\t\tif (oNotification.NotifiedAt) {\n\t\t\t\tsNotifiedAt = oNotification.NotifiedAt.toLocaleDateString(\"en-us\", {\n\t\t\t\t\tweekday: \"long\",\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\tday: \"numeric\"\n\t\t\t\t});\n\t\t\t}\n\t\t\toColumnListItem.insertCell(new sap.m.Text({\n\t\t\t\ttext: sNotifiedAt\n\t\t\t}), 999);\n\n\t\t\t//delete button\n\t\t\toColumnListItem.insertCell(new sap.ui.core.Icon({\n\t\t\t\tsrc: \"sap-icon://sys-cancel\",\n\t\t\t\ttooltip: \"Delete\",\n\t\t\t\tcolor: \"#E42217\",\n\t\t\t\tpress: (this.onPressNotificationDeleteButton).bind(this)\n\t\t\t}), 999);\n\n\t\t\t//return column list item instance for rendering in UI\n\t\t\treturn oColumnListItem;\n\n\t\t},\n\n\t\t//delete selected notifications\n\t\tonPressSelectedNotificationsDeleteButton: function() {\n\n\t\t\t//get selected notification items\n\t\t\tvar aNotificationListItems = this.getView().byId(\"tabNotificationList\").getSelectedItems();\n\n\t\t\t//message handling: select notications\n\t\t\tif (aNotificationListItems.length === 0) {\n\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"messageSelectNotificationsForDelete\"), sap.ui.core.MessageType.Warning);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//confirmation dialog to delete selected notification(s)\n\t\t\tsap.m.MessageBox.confirm(this.getResourceBundle().getText(\"messageDeleteSelectedNotifications\"), {\n\t\t\t\tactions: [\n\t\t\t\t\tsap.m.MessageBox.Action.YES,\n\t\t\t\t\tsap.m.MessageBox.Action.CANCEL\n\t\t\t\t],\n\n\t\t\t\t//on confirmation dialog close\n\t\t\t\tonClose: (function(oAction) {\n\n\t\t\t\t\t//user choice: proceed with deletion\n\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.YES) {\n\n\t\t\t\t\t\t//prepare view: set to busy\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\n\n\t\t\t\t\t\t//for each notification to be deleted\n\t\t\t\t\t\taNotificationListItems.forEach(function(oNotificationListItem) {\n\n\t\t\t\t\t\t\t//delete notification from backend\n\t\t\t\t\t\t\tthis._oODataModel.remove(oNotificationListItem.getBindingContext(\"Registration\").getPath(), {});\n\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t\t//post processing after successful updating in the backend\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t//message handling: selected notifications have been deleted\n\t\t\t\t\t\tthis.sendStripMessage(this.getResourceBundle().getText(\"deleteNotificationsSuccessful\"), sap.ui.core.MessageType.Success);\n\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/controller/Home.controller.js": "sap.ui.define([\n\t\"capetown/gov/registration/controller/Base.controller\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\treturn BaseController.extend(\"capetown.gov.registration.controller.Home\", {\n\n\t\t//initialization\n\t\tonInit: function() {\n\n\t\t\t//initialize\n\t\t\tthis.initialize();\n\n\t\t\t//set deferred change groups\n\t\t\tthis.setDeferredChangeGroups();\n\n\t\t\t//hook into route matched to adopt parameters for UI rendering\n\t\t\tthis.getRouter().getRoute(\"Home\").attachMatched(this.onPatternMatched, this);\n\n\t\t\t//set view model for controlling UI attributes\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tnotificationListTileNumber: 0,\n\t\t\t\torganisationListTileNumber: 0,\n\t\t\t\tnotificationListTileBusy: false,\n\t\t\t\torganisationListTileBusy: false,\n\t\t\t\tsupplierListTileNumber: 0,\n\t\t\t\tsupplierListTileBusy: false,\n\t\t\t\tpersonListTileNumber: 0,\n\t\t\t\tpersonListTileBusy: false,\n\t\t\t\tserviceListTileNumber: 0,\n\t\t\t\tserviceListTileBusy: false,\n\t\t\t\tdraftsTileNumber: 0,\n\t\t\t\tdraftsTileBusy: false,\n\t\t\t\tuserInCobrowse: false,\n\t\t\t\tratingValue: 0\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonPatternMatched: function() {\n\n\t\t\t//hide the message strip on this view\n\t\t\tthis._oMessageStrip.setVisible(false);\n\n\t\t\t//set tiles to busy where applicable\n\t\t\tthis._oViewModel.setProperty(\"/myAccountTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/personListTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/organisationListTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/supplierListTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/serviceListTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/notificationListTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/draftsTileBusy\", true);\n\t\t\tthis._oViewModel.setProperty(\"/mbtnSupportEnabled\", false);\n\n\t\t\t//get user info (stage 1)\n\t\t\tthis.getUserInfo();\n\n\t\t},\n\n\t\t//get attributes of logged on user\n\t\tgetUserInfo: function() {\n\n\t\t\t//local data declaration\n\t\t\tvar oUserInfo;\n\n\t\t\t//read logged on user and bind to related person context\n\t\t\tthis.getModel(\"Registration\").callFunction(\"/getUserInfoFromPortal\", {\n\n\t\t\t\t//url parameters\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"clientAppVersion\": \"'0.80'\"\n\t\t\t\t},\n\n\t\t\t\t//User details retrieved successfully\n\t\t\t\tsuccess: (function(oData, oResponse) {\n\n\t\t\t\t\t//user context\n\t\t\t\t\toUserInfo = oData.getUserInfoFromPortal;\n\n\t\t\t\t\t//get master data\n\t\t\t\t\tthis.getOwnerComponent().bindMasterData();\n\n\t\t\t\t\t//keep track of the user context\n\t\t\t\t\tthis.getOwnerComponent().oUserInfo = oUserInfo;\n\n\t\t\t\t\t//set attribute for last user context update\n\t\t\t\t\tthis._oViewModel.setProperty(\"/lastUserContextUpdate\", oUserInfo.LastUpdate);\n\n\t\t\t\t\t//for first time Portal logon retrieve user context from ERP \n\t\t\t\t\tif (oUserInfo.IsInitialLogon === true) {\n\n\t\t\t\t\t\t//show intro\n\t\t\t\t\t\tthis.showIntroDialog();\n\n\t\t\t\t\t\t//get user context from ERP backend\n\t\t\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/getUserInfoFromERP\", {\n\n\t\t\t\t\t\t\t//User details retrieved successfully from ERP backend\n\t\t\t\t\t\t\tsuccess: (function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t//user context\n\t\t\t\t\t\t\t\toUserInfo = oData.getUserInfoFromERP;\n\n\t\t\t\t\t\t\t\t//get master data\n\t\t\t\t\t\t\t\tthis.getOwnerComponent().bindMasterData();\n\n\t\t\t\t\t\t\t\t//keep track of the user context\n\t\t\t\t\t\t\t\tthis.getOwnerComponent().oUserInfo = oUserInfo;\n\n\t\t\t\t\t\t\t\t//prepare view model attributes for display\n\t\t\t\t\t\t\t\tthis.prepareHomeViewModelForDisplay(oUserInfo);\n\n\t\t\t\t\t\t\t\t//message handling: application is ready for use\n\t\t\t\t\t\t\t\tthis.sendAppReadyMessage();\n\n\t\t\t\t\t\t\t}).bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//synchronize user context with information on record in ERP\n\t\t\t\t\tif (oUserInfo.DoSynchWithERP && !this.getOwnerComponent().bSynchedWithERP) {\n\n\t\t\t\t\t\t//refresh all data from ERP\n\t\t\t\t\t\tthis.getModel(\"Registration\").callFunction(\"/synchronizeWithERP\", {\n\n\t\t\t\t\t\t\t//on request success of synchronization with ERP \n\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\t\t\t\t//keep track that synchronize with ERP was done\n\t\t\t\t\t\t\t\tthis.getOwnerComponent().bSynchedWithERP = true;\n\n\t\t\t\t\t\t\t\t//user context\n\t\t\t\t\t\t\t\toUserInfo = oData.synchronizeWithERP;\n\n\t\t\t\t\t\t\t\t//get master data\n\t\t\t\t\t\t\t\tthis.getOwnerComponent().bindMasterData();\n\n\t\t\t\t\t\t\t\t//keep track of the user context\n\t\t\t\t\t\t\t\tthis.getOwnerComponent().oUserInfo = oUserInfo;\n\n\t\t\t\t\t\t\t\t//set attribute for last user context update\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/lastUserContextUpdate\", oUserInfo.LastUpdate);\n\n\t\t\t\t\t\t\t\t//prepare view model attributes for display\n\t\t\t\t\t\t\t\tthis.prepareHomeViewModelForDisplay(oUserInfo);\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//prepare view model attributes for display where applicable\n\t\t\t\t\tif (!oUserInfo.IsInitialLogon && !(oUserInfo.DoSynchWithERP &&\n\t\t\t\t\t\t\t!this.getOwnerComponent().bSynchedWithERP)) {\n\t\t\t\t\t\tthis.prepareHomeViewModelForDisplay(oUserInfo);\n\t\t\t\t\t}\n\n\t\t\t\t}).bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonPersonListTilePress: function() {\n\t\t\t\n\t\t\t//local data declaration\n\t\t\tvar aPersonBindingContexts = [];\n\n\t\t\t//get access to person list contexts\n\t\t\taPersonBindingContexts = this.getOwnerComponent().oPersonList.getBinding(\"items\").filter(\n\t\t\t\tnew sap.ui.model.Filter({\n\t\t\t\t\tpath: \"PersonID\",\n\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\tvalue1: this.getOwnerComponent().oUserInfo.PersonID\n\t\t\t\t})).getContexts();\n\n\t\t\t//depending on number of people of this user\n\t\t\tswitch (aPersonBindingContexts.length) {\n\n\t\t\t\t//user has exactly one person\n\t\t\t\tcase 1:\n\n\t\t\t\t\t//display the one person of this user\n\t\t\t\t\tthis.displayTheOnePerson(aPersonBindingContexts[0]);\n\n\t\t\t\t\t//no further processing here\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//user has more than one person\n\t\t\t\tdefault:\n\n\t\t\t\t\t//navigate to person list view\n\t\t\t\t\tthis.getRouter().navTo(\"PersonList\");\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonOrganisationListTilePress: function() {\n\t\t\t\n\t\t\t//local data declaration\n\t\t\tvar aOrganisationBindingContexts = [];\n\n\t\t\t//get access to organisation list contexts\n\t\t\taOrganisationBindingContexts = this.getOwnerComponent().oOrganisationList.getBinding(\"items\").getContexts();\n\n\t\t\t//depending on number of organisations of this user\n\t\t\tswitch (aOrganisationBindingContexts.length) {\n\n\t\t\t\t//user has exactly one organisation\n\t\t\t\tcase 1:\n\n\t\t\t\t\t//diaplay the one organisation of this user\n\t\t\t\t\tthis.displayTheOneOrganisation(aOrganisationBindingContexts[0]);\n\n\t\t\t\t\t//no further processing here\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//user has more than one organisation\n\t\t\t\tdefault:\n\n\t\t\t\t\t//navigate to organisation list view\n\t\t\t\t\tthis.getRouter().navTo(\"OrganisationList\");\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonSupplierListTilePress: function() {\n\t\t\t\n\t\t\t//local data declaration\n\t\t\tvar aSupplierBindingContexts = [];\n\n\t\t\t//get access to supplier list contexts\n\t\t\taSupplierBindingContexts = this.getOwnerComponent().oSupplierList.getBinding(\"items\").getContexts();\n\n\t\t\t//depending on number of suppliers of this user\n\t\t\tswitch (aSupplierBindingContexts.length) {\n\n\t\t\t\t//user has exactly one supplier\n\t\t\t\tcase 1:\n\n\t\t\t\t\t//diaplay the one supplier of this user\n\t\t\t\t\tthis.displayTheOneSupplier(aSupplierBindingContexts[0]);\n\n\t\t\t\t\t//no further processing here\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t//user has more than one supplier\n\t\t\t\tdefault:\n\n\t\t\t\t\t//navigate to supplier list view\n\t\t\t\t\tthis.getRouter().navTo(\"SupplierList\");\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonServiceListTilePress: function() {\n\n\t\t\t//navigate to service list view\n\t\t\tthis.getRouter().navTo(\"ServiceList\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonNotificationListTilePress: function() {\n\n\t\t\t//navigate to notification list view\n\t\t\tthis.getRouter().navTo(\"NotificationList\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonPersonTilePress: function() {\n\n\t\t\t//navigate to user profile\n\t\t\tthis.getRouter().navTo(\"Person\");\n\n\t\t},\n\n\t\t/**\n\t\t *@memberOf capetown.gov.registration.controller.Home\n\t\t */\n\t\tonDraftsTilePress: function() {\n\n\t\t\t//navigate to drafts view\n\t\t\tthis.getRouter().navTo(\"Drafts\");\n\n\t\t},\n\n\t\t//informing that app is ready for use\n\t\tsendAppReadyMessage: function() {\n\n\t\t\t//message handling: informing that app is ready for use\n\t\t\tthis.sendStripMessage(\"We have retrieved your user context. Your application is ready for use...\", sap.ui.core.MessageType.Success);\n\n\t\t},\n\n\t\t//show City of Cape Town privacy policy page\n\t\tshowPrivacyPolicy: function() {\n\n\t\t\t//open another window with privacy policy page\n\t\t\twindow.open(\"http://www.capetown.gov.za/General/Privacy\", \"Privacy policy\");\n\n\t\t},\n\n\t\t//show City of Cape Town terms of use page\n\t\tshowTermsOfUse: function() {\n\n\t\t\t//open another window with terms of use page\n\t\t\twindow.open(\"http://www.capetown.gov.za/General/Terms-of-use\", \"Terms of use\");\n\n\t\t},\n\n\t\t//show intro dialog\n\t\tshowIntroDialog: function() {\n\n\t\t\t//create dialog for renderting intro\n\t\t\tthis.oIntroDialog = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.IntroDialog\", this);\n\t\t\tthis.oIntroDialog.attachAfterClose(function() {\n\t\t\t\tthis.oIntroDialog.destroy();\n\t\t\t}.bind(this));\n\t\t\tthis.getView().addDependent(this.oIntroDialog);\n\n\t\t\t//open registration confirmation dialog\n\t\t\tthis.oIntroDialog.open();\n\n\t\t},\n\n\t\t//show City of Cape Town user guide for supplier self service\n\t\tshowUserGuide: function() {\n\n\t\t\t//open another window with the user guide\n\t\t\twindow.open(\n\t\t\t\t\"http://resource.capetown.gov.za/documentcentre/Documents/Procedures,%20guidelines%20and%20regulations/Getting%20Started%20Supplier%20Online%20Registration.pdf\",\n\t\t\t\t\"User guide\");\n\n\t\t},\n\n\t\t//close intro dialog\n\t\tonPressCloseIntroDialogButton: function() {\n\n\t\t\t//close registration confirmation dialog\n\t\t\tthis.oIntroDialog.close();\n\n\t\t},\n\n\t\t//gather feedback related to app rating\n\t\tgatherRatingFeedback: function(oEvent) {\n\n\t\t\t//create new rating entry\n\t\t\tvar oRatingContext = this._oODataModel.createEntry(\"RatingSet\", {\n\t\t\t\tproperties: {\n\t\t\t\t\tRatingID: this.getUUID(),\n\t\t\t\t\tRatingValue: this.getView().byId(\"ratingIndicator\").getValue().toString(),\n\t\t\t\t\tRatingTimeStamp: new Date()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//construct rating dialog content\n\t\t\tvar oRatingPopoverContent = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.Rating\", this);\n\n\t\t\t//construct dialog instance\tto collect rating feedback\t\t\n\t\t\tthis.oRatingPopover = new sap.m.ResponsivePopover({\n\t\t\t\tplacement: \"Top\",\n\t\t\t\tmodal: true,\n\t\t\t\ticon: \"sap-icon://citizen-connect\",\n\t\t\t\ttitle: \"Rating feedback\",\n\t\t\t\tcontentWidth: \"450px\",\n\t\t\t\tcontent: oRatingPopoverContent,\n\n\t\t\t\t//buttons\n\t\t\t\tbeginButton:\n\n\t\t\t\t//send feedback\n\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\ttype: sap.m.ButtonType.Emphasized,\n\t\t\t\t\ttext: \"Send\",\n\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t//get rading feedback provided\n\t\t\t\t\t\tvar sRatingFeedback = sap.ui.getCore().byId(\"tareaRatingFeedback\").getValue();\n\n\t\t\t\t\t\t//view is now busy\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", true);\n\n\t\t\t\t\t\t//adopt rating feedback\n\t\t\t\t\t\tthis._oODataModel.setProperty(this.oRatingPopover.getBindingContext(\"Registration\").getPath() + \"/RatingFeedback\",\n\t\t\t\t\t\t\tsRatingFeedback);\n\n\t\t\t\t\t\t//submit changes to this point\n\t\t\t\t\t\tthis._oODataModel.submitChanges({\n\n\t\t\t\t\t\t\t//successfully submitted changes\n\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t//view is no longer busy\n\t\t\t\t\t\t\t\tthis._oViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\t\t\t\t}.bind(this)\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//close rating dialog\n\t\t\t\t\t\tthis.oRatingPopover.close();\n\n\t\t\t\t\t}.bind(this)\n\n\t\t\t\t}),\n\n\t\t\t\t//event handler for dialog destroy\n\t\t\t\tafterClose: function() {\n\n\t\t\t\t\t//destroy error dialog UI control\n\t\t\t\t\tthis.oRatingPopover.destroy();\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t\t//add view dependant\n\t\t\tthis.getView().addDependent(this.oRatingPopover);\n\n\t\t\t//set rating binding context to rating dialog\n\t\t\tthis.oRatingPopover.setBindingContext(oRatingContext, \"Registration\");\n\n\t\t\t//open dialog\n\t\t\tthis.oRatingPopover.openBy(oEvent.getSource());\n\n\t\t},\n\n\t\t//prepare home view model attributes for display\n\t\tprepareHomeViewModelForDisplay: function(oUserInfo) {\n\n\t\t\t//prepare view model for cobrowse mode\n\t\t\tthis.adoptComponentAttributes(\"Cobrowse\", this._oViewModel);\n\n\t\t\t//update my account tile\n\t\t\tthis._oViewModel.setProperty(\"/myAccountTileBusy\", false);\n\n\t\t\t//update person list tile\n\t\t\tthis._oViewModel.setProperty(\"/personListTileNumber\", oUserInfo.PersonCount);\n\t\t\tthis._oViewModel.setProperty(\"/personListTileBusy\", false);\n\n\t\t\t//update organisation list tile\n\t\t\tthis._oViewModel.setProperty(\"/organisationListTileNumber\", oUserInfo.OrganisationCount);\n\t\t\tthis._oViewModel.setProperty(\"/organisationListTileBusy\", false);\n\n\t\t\t//update supplier list tile\n\t\t\tthis._oViewModel.setProperty(\"/supplierListTileNumber\", oUserInfo.SupplierCount);\n\t\t\tthis._oViewModel.setProperty(\"/supplierListTileBusy\", false);\n\n\t\t\t//update service list tile\n\t\t\tthis._oViewModel.setProperty(\"/serviceListTileNumber\", oUserInfo.ServiceCount);\n\t\t\tthis._oViewModel.setProperty(\"/serviceListTileBusy\", false);\n\n\t\t\t//update notification list tile\n\t\t\tthis._oViewModel.setProperty(\"/notificationListTileNumber\", oUserInfo.NotificationCount);\n\t\t\tthis._oViewModel.setProperty(\"/notificationListTileBusy\", false);\n\n\t\t\t//update draft list tile\n\t\t\tthis._oViewModel.setProperty(\"/draftsTileNumber\", oUserInfo.DraftCount);\n\t\t\tthis._oViewModel.setProperty(\"/draftsTileBusy\", false);\n\n\t\t\t//update application rating \n\t\t\tthis._oViewModel.setProperty(\"/ratingValue\", Number(oUserInfo.RatingValue));\n\n\t\t\t//set attribute for last user context update\n\t\t\tthis._oViewModel.setProperty(\"/lastUserContextUpdate\", oUserInfo.LastUpdate);\n\n\t\t\t//enable support menu\n\t\t\tthis._oViewModel.setProperty(\"/mbtnSupportEnabled\", true);\n\n\t\t\t//render notifications of priority for home screen\n\t\t\tthis.renderNotifications();\n\n\t\t},\n\n\t\t//close window currently rendering this application\n\t\tcloseWindow: function() {\n\n\t\t\t//close current window\n\t\t\twindow.close();\n\n\t\t},\n\n\t\t//handle support menu item press\n\t\tonPressSupportMenuItem: function(oEvent) {\n\n\t\t\t//get selected menu item\n\t\t\tvar oSupportMenuItem = oEvent.getParameter(\"item\");\n\n\t\t\t//refresh user data from ERP backend\n\t\t\tif (/mitemSupportRefreshAll/.test(oSupportMenuItem.getId())) {\n\n\t\t\t\t//refresh user data from ERP\n\t\t\t\tthis.refreshUserDataFromERP();\n\n\t\t\t}\n\n\t\t\t//show all drafts \t\t\t\n\t\t\tif (/mitemSupportShowDraftsAll/.test(oSupportMenuItem.getId())) {\n\n\t\t\t\t//navigate to drafts view in support mode\n\t\t\t\tthis.getRouter().navTo(\"Drafts\", {\n\t\t\t\t\tshowAll: true\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\t//notify user\n\t\trenderNotifications: function() {\n\n\t\t\t//where notifications are available at this moment\n\t\t\tthis._oODataModel.read(\"/NotificatnSet\", {\n\n\t\t\t\t//success handler: notifications received from the backend\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//for successfully read notifications\n\t\t\t\t\tif (Array.isArray(oData.results)) {\n\n\t\t\t\t\t\t//for each notification returned from backend\n\t\t\t\t\t\toData.results.forEach(function(oNotification) {\n\n\t\t\t\t\t\t\t//render all entity independent notifications with 'Home' priority on home view\n\t\t\t\t\t\t\tif (oNotification && !oNotification.PersonID && !oNotification.OrganisationID &&\n\t\t\t\t\t\t\t\t!oNotification.SupplierID && !oNotification.oServiceID &&\n\t\t\t\t\t\t\t\toNotification.NotificationPriority === \"Home\") {\n\t\t\t\t\t\t\t\tthis.sendStripMessage(oNotification.NotificationText, oNotification.NotificationSeverity);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this)\n\n\t\t\t});\n\n\t\t},\n\n\t\t//display the one person\n\t\tdisplayTheOnePerson: function(oBindingContext) {\n\n\t\t\t//get person attributes \n\t\t\tvar oPerson = oBindingContext.getObject();\n\n\t\t\t//Navigate to the one person\n\t\t\tthis.getRouter().navTo(\"Person\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tPersonID: oPerson.PersonID\n\t\t\t});\n\n\t\t},\n\n\t\t//display the one supplier\n\t\tdisplayTheOneSupplier: function(oBindingContext) {\n\n\t\t\t//get supplier attributes \n\t\t\tvar oSupplier = oBindingContext.getObject();\n\n\t\t\t//navigate to the supplier person details view \n\t\t\tif (oSupplier.PersonID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierPerson\", {\n\t\t\t\t\tmode: \"update\",\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//navigate to the supplier organisation details view \n\t\t\tif (oSupplier.OrganisationID) {\n\t\t\t\tthis.getRouter().navTo(\"SupplierOrganisation\", {\n\t\t\t\t\tmode: \"update\",\n\t\t\t\t\tSupplierID: oSupplier.SupplierID\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t//display the one organisation\n\t\tdisplayTheOneOrganisation: function(oBindingContext) {\n\n\t\t\t//get organisation attributes \n\t\t\tvar oOrganisation = oBindingContext.getObject();\n\n\t\t\t//Navigate to organisation details \n\t\t\tthis.getRouter().navTo(\"Organisation\", {\n\t\t\t\tOrganisationID: oOrganisation.OrganisationID\n\t\t\t});\n\n\t\t}\n\n\t});\n\n});",
		"capetown/gov/registration/fragment/service/ServiceList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabServiceList\" itemPress=\"onPressServiceListItem\" \n\t\titems=\"{ path: 'Registration>/ServiceSet', filters: [{ path: 'EntityStatusID', operator: 'BT', value1: '1', value2: '4' }], factory: '.createServiceListItem' }\"\n\t\tnoDataText=\"{viewModel>/tableNoDataText}\" backgroundDesign=\"Solid\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelServiceTypeIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelServiceRegisteredForColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelEntityStatusColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Services\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Label id=\"labelServiceType\" required=\"true\" text=\"Service type\" labelFor=\"cboxServiceTypes\"/>\n\t\t\t\t<ComboBox id=\"cboxServiceTypes\" items=\"{ path: 'Registration>/ServiceTypeSet' }\" change=\"onCBoxServiceTypesChange\"\n\t\t\t\t\tselectionChange=\"onCBoxServiceTypesChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t<items>\n\t\t\t\t\t\t<core:ListItem key=\"{Registration>ServiceTypeID}\" text=\"{Registration>ServiceTypeText}\"/>\n\t\t\t\t\t</items>\n\t\t\t\t</ComboBox>\n\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForServiceType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t<Button id=\"btnServiceAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressServiceAddButton\" enabled=\"false\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/util/uuid.js": "//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);",
		"capetown/gov/registration/util/SupplierUtils.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\"\n], function(JSONModel) {\n\t\"use strict\";\n\n\t//Local data declaration\n\tvar oBankSetModel;\n\tvar oDocumentTypeSetModel;\n\n\t//return object with attributes and functions\n\treturn {\n\n\t\t//retrieve document type set and construct model\n\t\tretrieveDocumentTypeSetModel: function(oComponent) {\n\n\t\t\t//set models: OData model\n\t\t\tthis._oODataModel = oComponent.getModel(\"Registration\");\n\n\t\t\t//make available view model for document input control\n\t\t\tthis._oODataModel.read(\"/DocumentTypeSet\", {\n\n\t\t\t\t//document type configuration retrieved from server\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//adopt server model data into client model\n\t\t\t\t\tvar oJSONModel = new sap.ui.model.json.JSONModel({\n\t\t\t\t\t\t\"DocumentTypeSet\": oData.results\n\t\t\t\t\t});\n\n\t\t\t\t\t//make client model available for list binding\n\t\t\t\t\toDocumentTypeSetModel = oJSONModel;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t},\n\n\t\t//get document type set model\n\t\tgetDocumentTypeSetModel: function(oComponent) {\n\n\t\t\t//retrieve dodument type set model where applicable\n\t\t\tif (!oDocumentTypeSetModel) {\n\t\t\t\tthis.retrieveDocumentTypeSetModel(oComponent);\n\t\t\t}\n\n\t\t\t//return model containing document type set\n\t\t\treturn oDocumentTypeSetModel;\n\n\t\t},\n\n\t\t//retrieve bank model \n\t\tretrieveBankSetModel: function(oComponent) {\n\n\t\t\t//set models: OData model\n\t\t\tthis._oODataModel = oComponent.getModel(\"Registration\");\n\n\t\t\t//make available view model for document input control\n\t\t\tthis._oODataModel.read(\"/BankSet\", {\n\n\t\t\t\t//url parameters\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"$expand\": \"toBankBranches\"\n\t\t\t\t},\n\n\t\t\t\t//document type configuration retrieved from server\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//adopt server model data into client model\n\t\t\t\t\tvar oJSONModel = new sap.ui.model.json.JSONModel({\n\t\t\t\t\t\t\"BankSet\": oData.results\n\t\t\t\t\t});\n\n\t\t\t\t\t//make client model available for list binding\n\t\t\t\t\toBankSetModel = oJSONModel;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t},\n\n\t\t//get bank model\n\t\tgetBankSetModel: function(oComponent) {\n\n\t\t\t//retrieve bank set model where applicable\n\t\t\tif (!oBankSetModel) {\n\t\t\t\tthis.retrieveBankSetModel(oComponent);\n\t\t\t}\n\n\t\t\t//return model containing bank set\n\t\t\treturn oBankSetModel;\n\n\t\t},\n\n\t\t//get default bank branch ID\n\t\tgetDefaultBankBranchID: function(sBankID) {\n\n\t\t\t//get bank model\n\t\t\tvar sDefaultBankBranchID;\n\n\t\t\t//get default branch for this bank\n\t\t\toBankSetModel.oData.BankSet.forEach(function(oBank) {\n\t\t\t\tif(oBank.BankID === sBankID && oBank.BankID !== \"Other\"){\n\t\t\t\t\toBank.toBankBranches.results.forEach(function(oBankBranch){ \n\t\t\t\t\t\tif(oBankBranch.isDefault === true){\n\t\t\t\t\t\t\tsDefaultBankBranchID = oBankBranch.BankBranchID;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t//feedback to caller\n\t\t\treturn sDefaultBankBranchID;\n\n\t\t}\n\n\t};\n\n});",
		"capetown/gov/registration/fragment/service/ServiceAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formServiceAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label class=\"sapUiLargeMarginEnd\" required=\"true\" text=\"{i18n>labelServiceType}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Select id=\"selServiceTypes\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ServiceTypeSet', filters: [{path: 'ServiceTypeScope', operator: 'EQ', value1: '4'}, {path: 'ServiceTypeScope', operator: 'EQ', value1: '42'}] }\"\n\t\t\t\t\t\t\t\tforceSelection=\"false\" change=\"onSelServiceTypeChange\" width=\"50%\" selectedKey=\"{Registration>ServiceTypeID}\"\n\t\t\t\t\t\t\t\tenabled=\"{viewModel>/selServiceTypesEnabled}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ServiceTypeID}\" text=\"{Registration>ServiceTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/util/DocumentRequestUtils.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\"\n], function(JSONModel) {\n\t\"use strict\";\n\n\t//Local data declaration\n\tvar oDocumentRequestsModel;\n\tvar oDocumentRequestDialog;\n\n\t//return object with attributes and functions\n\treturn {\n\n\t\t//retrieve document request type and construct model\n\t\tsetDocumentRequestsModel: function(oController, sFilterArgument, bDialog) {\n\n\t\t\t//local data declaration\n\t\t\tvar that = this;\n\n\t\t\t//set dialog to busy where open\n\t\t\tif (oDocumentRequestDialog) {\n\t\t\t\toDocumentRequestDialog.setBusy(true);\n\t\t\t}\n\n\t\t\t//get OData model\n\t\t\tvar oODataModel = oController.getOwnerComponent().getModel(\"Registration\");\n\n\t\t\t//get document requests\n\t\t\toODataModel.read(\"/DocumentRequestSet\", {\n\n\t\t\t\t//filter by argument provided\n\t\t\t\tfilters: [new sap.ui.model.Filter({\n\t\t\t\t\tpath: sFilterArgument,\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: oController.getView().getBindingContext(\"Registration\").getProperty(sFilterArgument)\n\t\t\t\t})],\n\n\t\t\t\t//url parameters: expand to document that might have been loaded\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"$expand\": \"toDocument\"\n\t\t\t\t},\n\n\t\t\t\t//document type configuration retrieved from server\n\t\t\t\tsuccess: function(oData) {\n\n\t\t\t\t\t//for each document request\n\t\t\t\t\tvar aDocumentRequestSet = [];\n\t\t\t\t\toData.results.forEach(function(oResult) {\n\n\t\t\t\t\t\t//construct document request model entity\n\t\t\t\t\t\tvar oDocumentRequest = {};\n\t\t\t\t\t\toDocumentRequest.DocumentTypeID = oResult.DocumentTypeID;\n\t\t\t\t\t\tvar sDocumentTypeTextPath = \"/\" + oODataModel.createKey(\"DocumentTypeSet\", {\n\t\t\t\t\t\t\tDocumentTypeID: oDocumentRequest.DocumentTypeID\n\t\t\t\t\t\t}) + \"/DocumentTypeText\"; //URI returned by createKey is not uri encoded in version UI5 version 1.38\n\t\t\t\t\t\tsDocumentTypeTextPath = sDocumentTypeTextPath.replace(/:/, \"%3A\"); //fix as encodeURIComponent not suitable\n\t\t\t\t\t\toDocumentRequest.DocumentTypeText = oODataModel.getProperty(sDocumentTypeTextPath);\n\t\t\t\t\t\toDocumentRequest.DocumentRequestID = oResult.DocumentRequestID;\n\t\t\t\t\t\toDocumentRequest.SupplierID = oResult.SupplierID;\n\n\t\t\t\t\t\t//identify whether a document for this request was already loaded\n\t\t\t\t\t\tif (oResult.toDocument && oResult.toDocument.DocumentID) {\n\t\t\t\t\t\t\toDocumentRequest.Uploaded = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toDocumentRequest.Uploaded = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//keep track of document request entities without uploaded document\n\t\t\t\t\t\tif (!oDocumentRequest.Uploaded) {\n\t\t\t\t\t\t\taDocumentRequestSet.push(oDocumentRequest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\t//set document requests model on managed object \n\t\t\t\t\toDocumentRequestsModel = new sap.ui.model.json.JSONModel({\n\t\t\t\t\t\t\"DocumentRequestSet\": aDocumentRequestSet\n\t\t\t\t\t});\n\n\t\t\t\t\t//update document request dialog where currently open\n\t\t\t\t\tif (oDocumentRequestDialog) {\n\t\t\t\t\t\toDocumentRequestDialog.setBusy(false);\n\t\t\t\t\t\toDocumentRequestDialog.setModel(oDocumentRequestsModel, \"DocumentRequestsModel\");\n\t\t\t\t\t}\n\n\t\t\t\t\t//invoke dialog where applicable\n\t\t\t\t\tif (bDialog) {\n\n\t\t\t\t\t\t//invoke document request dialog to upload substantiating documentation\n\t\t\t\t\t\tthat.invokeDocumentRequestDialog(oController, \"SupplierID\");\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t},\n\n\t\t//get document request model\n\t\tgetDocumentRequestsModel: function() {\n\n\t\t\t//return document type set model\n\t\t\treturn oDocumentRequestsModel;\n\n\t\t},\n\n\t\t//has open document requests\n\t\thasOpenDocumentRequests: function() {\n\n\t\t\t//document request document type model available\n\t\t\tif (oDocumentRequestsModel) {\n\n\t\t\t\t//get all document requests not yet responded to\n\t\t\t\tvar aOpenDocumentRequests = oDocumentRequestsModel.getData().DocumentRequestSet.filter(function(oDocumentRequest) {\n\t\t\t\t\tif (!oDocumentRequest.Uploaded) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//feedback to caller\n\t\t\t\tif (aOpenDocumentRequests.length > 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t//retrieve document requests and construct model\n\t\tinvokeDocumentRequestDialog: function(oController, sFilterArgument) {\n\n\t\t\t//retrieve document request model where applicable\n\t\t\tif (!oDocumentRequestsModel) {\n\n\t\t\t\t//set document request model with dialog\n\t\t\t\tthis.setDocumentRequestsModel(oController, sFilterArgument, true);\n\n\t\t\t\t//no further processing at this time\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t//prepare user dialog to load requested documents\n\t\t\tif (this.hasOpenDocumentRequests()) {\n\n\t\t\t\t//construct document request dialog content\n\t\t\t\tvar oDocumentRequestDialogContent = sap.ui.xmlfragment(\"capetown.gov.registration.fragment.reuse.DocumentRequest\", oController);\n\n\t\t\t\t//construct document request dialog instance\t\t\t\n\t\t\t\toDocumentRequestDialog = new sap.m.Dialog({\n\t\t\t\t\ticon: \"sap-icon://message-warning\",\n\t\t\t\t\ttype: sap.m.DialogType.Standard,\n\t\t\t\t\tstate: sap.ui.core.ValueState.Success,\n\t\t\t\t\ttitle: oController._oResourceBundle.getText(\"titleUploadSubstantiatingDocument\"),\n\t\t\t\t\tcontentWidth: \"850px\",\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tcontent: oDocumentRequestDialogContent,\n\n\t\t\t\t\t//buttons\n\t\t\t\t\tbuttons: [\n\n\t\t\t\t\t\t//close this error dialog\n\t\t\t\t\t\tnew sap.m.Button({\n\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\ttext: \"Close\",\n\t\t\t\t\t\t\tpress: function() {\n\n\t\t\t\t\t\t\t\t//close script error dialog dialog\n\t\t\t\t\t\t\t\toDocumentRequestDialog.close();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t})\n\n\t\t\t\t\t],\n\n\t\t\t\t\t//event handler for dialog before open\n\t\t\t\t\tbeforeOpen: function(oEvent) {\n\n\t\t\t\t\t},\n\n\t\t\t\t\t//event handler for dialog destroy\n\t\t\t\t\tafterClose: function() {\n\n\t\t\t\t\t\t//destroy error dialog UI control\n\t\t\t\t\t\toDocumentRequestDialog.destroy();\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t//set binding context for on document request dialog\n\t\t\t\toDocumentRequestDialog.setBindingContext(oController.getView().getBindingContext(\"Registration\"), \"Registration\");\n\n\t\t\t\t//set document type model on document request dialog\n\t\t\t\toDocumentRequestDialog.setModel(oDocumentRequestsModel, \"DocumentRequestsModel\");\n\n\t\t\t\t//open dialog\n\t\t\t\toDocumentRequestDialog.open();\n\n\t\t\t}\n\n\t\t},\n\t\t\n\t\t//refresh document request model without invoking dialog\n\t\trefreshDocumentRequestModel: function(oController, sFilterArgument){\n\n\t\t\t//reset document requests model without dialog \n\t\t\tthis.setDocumentRequestsModel(oController, sFilterArgument, false);\n\t\t\t\n\t\t},\n\n\t\t//refresh document requests model and invoke dialog\n\t\trefreshAndInvokeDocumentRequestDialog: function(oController, sFilterArgument) {\n\n\t\t\t//reset document requests model with dialog \n\t\t\tthis.setDocumentRequestsModel(oController, sFilterArgument, true);\n\n\t\t}\n\n\t};\n\n});",
		"capetown/gov/registration/fragment/service/ServiceDraftList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabServiceDraftList\" itemPress=\"onDraftServiceListItemPress\"\n\t\titems=\"{ path: 'Registration>/ServiceSet', filters: [{path: 'EntityStatusID', operator: 'EQ', value1: '0'}], factory: '.createServiceListItem' }\"\n\t\tnoDataText=\"No entries\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelServiceTypeIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelServiceRegisteredForColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelEntityStatusColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Service drafts\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\t/*Chrome 55 introduced PointerEvent support which disabled the touch\n\tevent simulation for SAPUI5. This feature broke the sap.m controls.\n\tFor the time being the device support disables the pointer event\n\tdetection for Chrome 55+. Current bBackend version and CDN version of\n\tthe UI5 resources have differing defaults for Device.support.pointer*/\n\tif (Device.browser.name === \"cr\" && Device.browser.version >= 55) {\n\t\tDevice.support.pointer = false;\n\t}\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n\n});",
		"capetown/gov/registration/fragment/service/ServiceScopePopoverWithoutServiceType.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\">\n\t<ResponsivePopover title=\"Add service\" class=\"sapUiPopupWithPadding\" placement=\"Bottom\" showHeader=\"true\" width=\"600px\">\n\t\t<content>\n\t\t\t<sap.ui.layout.form:Form editable=\"true\">\n\t\t\t\t<sap.ui.layout.form:layout>\n\t\t\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t\t\t</sap.ui.layout.form:layout>\n\t\t\t\t<sap.ui.layout.form:formContainers>\n\t\t\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t\t<SegmentedButton selectedKey=\"Organisation\" width=\"400px\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<SegmentedButtonItem icon=\"sap-icon://person-placeholder\" text=\"for Sole Proprietor\" key=\"Person\" press=\"onPressPersonServiceAddButton\"/>\n\t\t\t\t\t\t\t\t\t\t\t<SegmentedButtonItem icon=\"sap-icon://building\" text=\"for Organisation\" key=\"Organisation\" press=\"onPressOrganisationServiceAddButton\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</SegmentedButton>\n\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://message-warning\" press=\"hintForServiceCreateForPersonOrOrganisation\" class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"Take note\" color=\"Critical\" size=\"30px\"/>\n\t\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t\t\t</sap.ui.layout.form:formContainers>\n\t\t\t</sap.ui.layout.form:Form>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/Rating.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanS=\"4\" labelSpanM=\"4\" labelSpanL=\"4\"\n\t\t\t\tbackgroundDesign=\"Transparent\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"true\">\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<MessageStrip id=\"msRatingMessageStrip\" showCloseButton=\"false\" showIcon=\"true\" text=\"{i18n>messageAppreciateYourFeedback}\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemRatingFeedback\" visible=\"true\">\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<TextArea id=\"tareaRatingFeedback\" class=\"sapUiLargeMarginEnd\" placeholder=\"{i18n>inputPlaceHolderRatingFeedback}\"\n\t\t\t\t\t\t\tvalue=\"{Registration>RatingFeedback}\" growing=\"true\" height=\"125px\" editable=\"true\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierOrganisationAttributesTabBar.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<IconTabBar class=\"sapUiMediumMarginBottom\">\n\t\t<items>\n\t\t\t<IconTabFilter text=\"Attributes\" icon=\"sap-icon://building\">\n\t\t\t\t<content>\n\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierOrganisationAttributes\" type=\"XML\"/>\n\t\t\t\t</content>\n\t\t\t</IconTabFilter>\n\t\t\t<IconTabFilter text=\"B-BBEE\" icon=\"sap-icon://survey\">\n\t\t\t\t<content>\n\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t</content>\n\t\t\t</IconTabFilter>\n\t\t</items>\n\t</IconTabBar>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/service/ServiceResponsibilities.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formServiceResponsibilities\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabServiceResponsibilities\" itemPress=\"onPressServiceResponsibilityListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableResponsibilities}\" updateStarted=\"setBusyTableResponsibilities\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableServiceResponsibilities\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toResponsibilities', factory: '.createServiceResponsibilityListItem' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Responsibilities\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelPersonRole\" required=\"true\" text=\"Role\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxServicePersonRoles\" items=\"{ path: 'Registration>/RoleSet', filters: [{path: 'RoleScope', operator: 'Contains', value1: '4'}] }\" \n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxServicePersonRoleChange\" selectionChange=\"onCBoxServicePersonRoleChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>RoleID}\" text=\"{Registration>RoleText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForRoleType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" id=\"btnServiceResponsibilityAdd\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressAddResponsibilityButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Role\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Name\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Surname\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"ID type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"ID number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\">\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feEditServiceResponsibilitiesLink\" visible=\"false\">\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Link text=\"Edit\" id=\"linkEditServiceResponsibilites\" press=\"onPressServiceResponsibilitiesLink\" wrapping=\"true\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/NotificationList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabNotificationList\" itemPress=\"onPressNotificationListItem\"\n\t\titems=\"{ path: 'Registration>/NotificatnSet', factory: '.createNotificationListItem' }\"\n\t\tnoDataText=\"{viewModel>/tableNoDataText}\" backgroundDesign=\"Solid\" mode=\"MultiSelect\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<columns>\n\t\t\t<Column width=\"10%\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelNotificationTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"15%\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelNotificationForEntityNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"10%\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelNotificationSeverityColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"40%\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelNotificationMessageColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelNotifiedAtColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Notifications\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button id=\"btnSelectedNotificationsDelete\" text=\"Delete\" icon=\"sap-icon://sys-cancel\" press=\"onPressSelectedNotificationsDeleteButton\" tooltip=\"Delete notifications\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierOrganisationDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierDocuments\" class=\"sapUiMediumMarginBottom\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucSupplierDocUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\" maximumFileSize=\"10\"\n\t\t\t\t\t\t\t\tmaximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg,application/pdf,application/msword\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onSupplierDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelOrganisationDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierDocumentTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'DocumentInputControl>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxDocTypeSelectedItem}\" change=\"onCBoxSupplierDocumentTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxSupplierDocumentTypesChange\" width=\"350px\" class=\"cctDropDownInNonEditableForm\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{DocumentInputControl>DocumentTypeID}\" text=\"{DocumentInputControl>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierDeclarations.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierDeclarations\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierDeclarations\" itemPress=\"onPressSupplierDeclarationListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableSupplierDeclarations}\" updateStarted=\"setBusyTableSupplierDeclarations\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierDeclarations\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toDeclarations', factory: '.createSupplierDeclarationListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Declarations\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelSupplierDeclarationType\" required=\"true\" text=\"Declaration type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierDeclarationTypes\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/DeclarationTypeSet', filters: [{path: 'DeclarationTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxSupplierDeclarationTypeSelectedItem}\" change=\"onCBoxSupplierDeclarationTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxSupplierDeclarationTypesChange\" width=\"300px\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>DeclarationTypeID}\" text=\"{Registration>DeclarationTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnSupplierDeclarationAdd\" press=\"onPressSupplierDeclarationAddButton\"\n\t\t\t\t\t\t\t\t\t\t\tenabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Declaration type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Time of last update\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Expiry date\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierOrganisationAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>VendorID}? true : false }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelVendorID}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputVendorID\" placeholder=\"{i18n>inputPlaceHolderVendorID}\" value=\"{Registration>VendorID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tmaxLength=\"10\" liveChange=\"onSupplierAttributesLiveChange\" enabled=\"false\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelTradingAsName}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputTradingAsName\" placeholder=\"{i18n>inputPlaceHolderTradingAsName}\" value=\"{Registration>TradingAsName}\" width=\"35%\"\n\t\t\t\t\t\t\t\tmaxLength=\"80\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelCSDNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputCSDNumber\" placeholder=\"{i18n>inputPlaceHolderCSDNumber}\" value=\"{Registration>CSDNumber}\" width=\"30%\" maxLength=\"11\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Industry keys\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<MultiComboBox id=\"mCBoxSupplierIndustries\" items=\"{ path: 'Registration>/IndustrySet', sorter: { path: 'IndustryText' } }\"\n\t\t\t\t\t\t\t\t\tselectedKeys=\"{viewModel>/aIndustryKeys}\" width=\"330px\" selectionFinish=\"onSupplierAttributesLiveChange\">\n\t\t\t\t\t\t\t\t\t<core:Item key=\"{Registration>IndustryID}\" text=\"{Registration>IndustryText}\"/>\n\t\t\t\t\t\t\t\t</MultiComboBox>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"onPressHintForIndustryKey\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Community supplier\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchIsCommunitySupplier\" state=\"{ path: 'Registration>isCommunitySupplier' }\" type=\"Default\" customTextOn=\"Yes\"\n\t\t\t\t\t\t\t\tcustomTextOff=\"No\" change=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSubCouncil\" required=\"{Registration>isCommunitySupplier}\" text=\"Subcouncil\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxSubCouncil\" items=\"{Registration>/SubCouncilSet}\" width=\"20%\" selectedKey=\"{Registration>SubCouncilID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>SubCouncilID}\" text=\"{Registration>SubCouncilText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemWard\"\n\t\t\t\t\t\tvisible=\"{= ${Registration>SubCouncilID} !== undefined &amp;&amp; ${Registration>SubCouncilID} !== '' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelWard\" required=\"{Registration>isCommunitySupplier}\" text=\"Ward\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxWard\" items=\"{path: 'Registration>/WardSet'}\" width=\"20%\" selectedKey=\"{Registration>WardID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>WardID}\" text=\"{Registration>WardText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelIncomeTaxNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputIncomeTaxNumber\" placeholder=\"{i18n>inputPlaceHolderIncomeTaxNumber}\" value=\"{Registration>IncomeTaxNbr}\" width=\"25%\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\" maxLength=\"15\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelSARSTaxCompliancePIN}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputSARSTaxCompliancePIN\" placeholder=\"{i18n>inputPlaceHolderSARSTaxCompliancePIN}\" value=\"{Registration>SARSTaxCompliancePIN}\"\n\t\t\t\t\t\t\t\twidth=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelVATRegistrationNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputVATRegistrationNumber\" value=\"{Registration>VATRegistrationNbr}\" width=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierPersonAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>VendorID}? true : false }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelVendorID}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputVendorID\" placeholder=\"{i18n>inputPlaceHolderVendorID}\" value=\"{Registration>VendorID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tmaxLength=\"10\" liveChange=\"onSupplierAttributesLiveChange\" enabled=\"false\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelTradingAsName}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputTradingAsName\" placeholder=\"{i18n>inputPlaceHolderTradingAsName}\" value=\"{Registration>TradingAsName}\" width=\"35%\"\n\t\t\t\t\t\t\t\tmaxLength=\"80\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelCSDNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputCSDNumber\" placeholder=\"{i18n>inputPlaceHolderCSDNumber}\" value=\"{Registration>CSDNumber}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Industry keys\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<MultiComboBox id=\"mCBoxSupplierIndustries\" items=\"{ path: 'Registration>/IndustrySet', sorter: { path: 'IndustryText' } }\"\n\t\t\t\t\t\t\t\t\tselectedKeys=\"{viewModel>/aIndustryKeys}\" width=\"350px\" selectionFinish=\"onSupplierAttributesLiveChange\">\n\t\t\t\t\t\t\t\t\t<core:Item key=\"{Registration>IndustryID}\" text=\"{Registration>IndustryText}\"/>\n\t\t\t\t\t\t\t\t</MultiComboBox>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"onPressHintForIndustryKey\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Community supplier\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchIsCommunitySupplier\" state=\"{ path: 'Registration>isCommunitySupplier' }\" type=\"Default\" customTextOn=\"Yes\"\n\t\t\t\t\t\t\t\tcustomTextOff=\"No\" change=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSubCouncil\" required=\"{Registration>isCommunitySupplier}\" text=\"Subcouncil\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxSubCouncil\" items=\"{Registration>/SubCouncilSet}\" width=\"20%\" selectedKey=\"{Registration>SubCouncilID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>SubCouncilID}\" text=\"{Registration>SubCouncilText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemWard\"\n\t\t\t\t\t\tvisible=\"{= ${Registration>SubCouncilID} !== undefined &amp;&amp; ${Registration>SubCouncilID} !== '' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelWard\" required=\"{Registration>isCommunitySupplier}\" text=\"Ward\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxWard\" items=\"{path: 'Registration>/WardSet'}\" width=\"20%\" selectedKey=\"{Registration>WardID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>WardID}\" text=\"{Registration>WardText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelIncomeTaxNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputIncomeTaxNumber\" placeholder=\"{i18n>inputPlaceHolderIncomeTaxNumber}\" value=\"{Registration>IncomeTaxNbr}\" width=\"25%\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\" maxLength=\"15\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelSARSTaxCompliancePIN}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputSARSTaxCompliancePIN\" placeholder=\"{i18n>inputPlaceHolderSARSTaxCompliancePIN}\" value=\"{Registration>SARSTaxCompliancePIN}\"\n\t\t\t\t\t\t\t\twidth=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelVATRegistrationNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputVATRegistrationNumber\" value=\"{Registration>VATRegistrationNbr}\" width=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierScopePopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\">\n\t<ResponsivePopover id=\"popSupplierScope\" title=\"Add supplier\" class=\"sapUiPopupWithPadding\" placement=\"Bottom\" showHeader=\"true\" width=\"600px\">\n\t\t<content>\n\t\t\t<sap.ui.layout.form:Form>\n\t\t\t\t<sap.ui.layout.form:layout>\n\t\t\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t\t\t</sap.ui.layout.form:layout>\n\t\t\t\t<sap.ui.layout.form:formContainers>\n\t\t\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t\t\t<SegmentedButton selectedKey=\"Organisation\" width=\"350px\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<SegmentedButtonItem icon=\"sap-icon://person-placeholder\" text=\"Sole Proprietor\" key=\"Person\" press=\"onPressSupplierPersonAddButton\"/>\n\t\t\t\t\t\t\t\t\t\t<SegmentedButtonItem icon=\"sap-icon://building\" text=\"Organisation\" key=\"Organisation\" press=\"onPressSupplierOrganisationAddButton\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t</SegmentedButton>\n\t\t\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t\t\t</sap.ui.layout.form:formContainers>\n\t\t\t</sap.ui.layout.form:Form>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierListNoDelete.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabSupplierList\" itemPress=\"onPressSupplierListItem\"\n\t\titems=\"{ path: 'Registration>/SupplierSet', parameters : { expand : 'toOrganisation,toPerson' }, filters: [{ path: 'EntityStatusID', operator: 'BT', value1: '0', value2: '4' }, { path: 'EntityStatusID', operator: 'EQ', value1: '6'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/Name} : ${Registration>toPerson/Name} + ' ' + ${Registration>toPerson/Surname} }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>TradingAsName}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/CompanyRegNbr} : 'Not applicable' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/BusinessPartnerID} : ${Registration>toPerson/BusinessPartnerID} }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${path: 'Registration>toOrganisation/LegalEntityType', formatter:'.formatLegalEntityType'} : 'Sole proprietor' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelEntityNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelSupplierTradingAsNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Suppliers\"/>\n\t\t\t\t<OverflowToolbarButton id=\"btnSupplierListRefresh\" type=\"Transparent\" icon=\"sap-icon://refresh\" press=\"onPressSupplierListRefreshButton\"\n\t\t\t\t\tenabled=\"true\" visible=\"{viewModel>/btnSupplierListRefreshVisible}\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"Enter search criteria...\" search=\"onSupplierSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressSupplierAddButton\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierPersonContacts.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierContacts\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierContacts\" itemPress=\"onPressSupplierContactListItem\" busy=\"{viewModel>/busyTableSupplierContacts}\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierContacts\" items=\"{ path: 'Registration>toContacts' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Contacts\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelContactType\" required=\"true\" text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierContactTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ContactTypeSet', filters: [{path: 'ContactTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxSupplierContactTypesChange\" selectionChange=\"onCBoxSupplierContactTypesChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ContactTypeID}\" text=\"{Registration>ContactTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnSupplierContactAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressSupplierContactAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>ContactTypeID', formatter: '.formatContactTypeID'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>ContactName}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>PhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>FaxNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>MobilePhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressSupplierContactDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact name\"/> \n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"eMail address\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Fax number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Mobile phone\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierBankAccounts.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierBankAccounts\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierBankAccounts\" itemPress=\"onPressBankAccountListItem\" busy=\"{viewModel>/busyTableBankAccounts}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableBankAccounts}\" updateStarted=\"setBusyTableBankAccounts\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierBankAccounts\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toBankAccounts', factory: '.createBankAccountListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Bank accounts\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelBankAccountPurpose\" required=\"true\" text=\"Account purpose\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxBankAccountPurpose\" items=\"{ path: 'Registration>/BankAccountPurposeSet', filters: [{path: 'BankAccountPurposeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxBankAccountPurposeSelectedItem}\" change=\"onCBoxBankAccountPurposeChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxBankAccountPurposeChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BankAccountPurposeID}\" text=\"{Registration>BankAccountPurposeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnBankAccountAdd\" press=\"onPressBankAccountAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Purpose\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Bank name\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Branch code\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Account type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Account number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Account holder\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierCertificates.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierCertificates\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierCertificates\" itemPress=\"onPressSupplierCertificateListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableCertificates}\" updateStarted=\"setBusyTableCertificates\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierCertificates\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toCertificates', factory: '.createSupplierCertificateListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Certificates\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelCertificateType\" required=\"true\" text=\"Certificate type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierCertificateTypes\" items=\"{ path: 'Registration>/CertificateTypeSet', filters: [{path: 'CertificateTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxCertificateTypeSelectedItem}\" change=\"onCBoxSupplierCertificateTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxSupplierCertificateTypesChange\" width=\"300px\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>CertificateTypeID}\" text=\"{Registration>CertificateTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnSupplierCertificateAdd\" press=\"onPressSupplierCertificateAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Certificate type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Certificate number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Expiry date\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Attribute(s)\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierPersonDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierDocuments\" class=\"sapUiMediumMarginBottom\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucSupplierDocUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\" maximumFileSize=\"10\"\n\t\t\t\t\t\t\t\tmaximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg,application/pdf,application/msword\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onSupplierDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelPersonDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierDocumentTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'DocumentInputControl>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxDocTypeSelectedItem}\" change=\"onCBoxSupplierDocumentTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxSupplierDocumentTypesChange\" width=\"300px\" class=\"cctDropDownInNonEditableForm\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{DocumentInputControl>DocumentTypeID}\" text=\"{DocumentInputControl>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierDataAccuracyDeclaration.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierDataAccuracyDeclaration\" class=\"sapUiMediumMarginTop sapUiMediumMarginBottom\"\n\t\tvisible=\"{= ${Registration>SupplierID} !== null &amp;&amp; ${Registration>SupplierID} !== undefined &amp;&amp; ${Registration>SupplierID} !== '' }\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<core:HTML sanitizeContent=\"true\"\n\t\t\t\t\t\t\t\tcontent='&lt;div class=&quot;content&quot;&gt;&lt;div&gt;Press the button to verify details of the supplier for which you are taking action. &lt;/div&gt;Confirm you have verified and updated where required by checking the box.&lt;/div&gt;'></core:HTML>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Button type=\"Emphasized\" text=\"Update details\" press=\"onPressSupplierUpdateDetailsButton\" width=\"150px\" class=\"sapUiSmallMarginTop\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<CheckBox select=\"onSelectSupplierDataAccuracyDeclarationCheckBox\" selected=\"{viewModel>/chkSupplierDataAccuracyDeclarationSelected}\"\n\t\t\t\t\t\t\t\ttext=\"I have verified and updated details where required\" enabled=\"{viewModel>/chkSupplierDataAccuracyDeclarationEnabled}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierPersonAttributesTabBar.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<IconTabBar class=\"sapUiMediumMarginBottom\">\n\t\t<items>\n\t\t\t<IconTabFilter text=\"Attributes\" icon=\"sap-icon://person-placeholder\">\n\t\t\t\t<content>\n\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierPersonAttributes\" type=\"XML\"/>\n\t\t\t\t</content>\n\t\t\t</IconTabFilter>\n\t\t\t<IconTabFilter text=\"B-BBEE\" icon=\"sap-icon://survey\">\n\t\t\t\t<content>\n\t\t\t\t\t<core:Fragment fragmentName=\"capetown.gov.registration.fragment.supplier.SupplierBEEClassification\" type=\"XML\"/>\n\t\t\t\t</content>\n\t\t\t</IconTabFilter>\n\t\t</items>\n\t</IconTabBar>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierDraftList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabSupplierDraftList\" itemPress=\"onPressDraftSupplierListItem\"\n\t\titems=\"{ path: 'Registration>/SupplierSet', parameters : { expand : 'toOrganisation,toPerson' }, filters: [{ path: 'EntityStatusID', operator: 'EQ', value1: '0'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"0\"\n\t\t\t\t\t\ttext=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/Name} : ${Registration>toPerson/Name} + ' ' + ${Registration>toPerson/Surname} }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>TradingAsName}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/CompanyRegNbr} : 'Not applicable' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\"\n\t\t\t\t\t\ttext=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/BusinessPartnerID} : ${Registration>toPerson/BusinessPartnerID} }\"/>\n\t\t\t\t\t<Text maxLines=\"1\"\n\t\t\t\t\t\ttext=\"{= ${Registration>OrganisationID} ? ${path: 'Registration>toOrganisation/LegalEntityType', formatter:'.formatLegalEntityType'} : 'Sole proprietor' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressSupplierDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelEntityNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelSupplierTradingAsNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Supplier drafts\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onSupplierSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressSupplierAddButton\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierOrganisationContacts.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierContacts\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierContacts\" itemPress=\"onPressSupplierContactListItem\" busy=\"{viewModel>/busyTableSupplierContacts}\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierContacts\" items=\"{ path: 'Registration>toContacts' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Contacts\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelContactType\" required=\"true\" text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierContactTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ContactTypeSet', filters: [{path: 'ContactTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxSupplierContactTypesChange\" selectionChange=\"onCBoxSupplierContactTypesChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ContactTypeID}\" text=\"{Registration>ContactTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnSupplierContactAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressSupplierContactAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>ContactTypeID', formatter: '.formatContactTypeID'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>ContactName}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>PhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>FaxNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>MobilePhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressSupplierContactDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact name\"/> \n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"eMail address\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Fax number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Mobile phone\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationServiceDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formServiceDocuments\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglServiceDocuments\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer id=\"fcServiceDocuments\">\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feServiceDocuments\">\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucServiceDocumentUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\"\n\t\t\t\t\t\t\t\tmaximumFileSize=\"10\" maximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onServiceDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelServiceDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxServiceDocumentTypes\" items=\"{ path: 'Registration>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '4'}, {path: 'DocumentTypeScope', operator: 'EQ', value1: '43'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxDocTypeSelectedItem}\" change=\"onServiceDocumentTypeLiveChange\" selectionChange=\"onCBoxServiceDocumentTypesChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>DocumentTypeID}\" text=\"{Registration>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feEditServiceDocumentsLink\" visible=\"false\">\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Link text=\"Edit\" id=\"linkEditServiceDocuments\" press=\"onPressServiceDocumentsLink\" wrapping=\"true\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelTradingAsName}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputTradingAsName\" placeholder=\"{i18n>inputPlaceHolderTradingAsName}\" value=\"{Registration>TradingAsName}\" width=\"35%\"\n\t\t\t\t\t\t\t\tmaxLength=\"80\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelCSDNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputCSDNumber\" placeholder=\"{i18n>inputPlaceHolderCSDNumber}\" value=\"{Registration>CSDNumber}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Industry keys\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<MultiComboBox id=\"mCBoxSupplierIndustries\" items=\"{ path: 'Registration>/IndustrySet', sorter: { path: 'IndustryText' } }\"\n\t\t\t\t\t\t\t\tselectedKeys=\"{viewModel>/aIndustryKeys}\" width=\"350px\" selectionFinish=\"onSupplierAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<core:Item key=\"{Registration>IndustryID}\" text=\"{Registration>IndustryText}\"/>\n\t\t\t\t\t\t\t</MultiComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Community supplier\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchIsCommunitySupplier\" state=\"{ path: 'Registration>isCommunitySupplier' }\" type=\"Default\" customTextOn=\"Yes\"\n\t\t\t\t\t\t\t\tcustomTextOff=\"No\" change=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSubCouncil\" required=\"{Registration>isCommunitySupplier}\" text=\"Subcouncil\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxSubCouncil\" items=\"{Registration>/SubCouncilSet}\" width=\"20%\" selectedKey=\"{Registration>SubCouncilID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>SubCouncilID}\" text=\"{Registration>SubCouncilText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemWard\"\n\t\t\t\t\t\tvisible=\"{= ${Registration>SubCouncilID} !== undefined &amp;&amp; ${Registration>SubCouncilID} !== '' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelWard\" required=\"{Registration>isCommunitySupplier}\" text=\"Ward\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxWard\" items=\"{path: 'Registration>/WardSet'}\" width=\"20%\" selectedKey=\"{Registration>WardID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onSupplierAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>WardID}\" text=\"{Registration>WardText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelIncomeTaxNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputIncomeTaxNumber\" placeholder=\"{i18n>inputPlaceHolderIncomeTaxNumber}\" value=\"{Registration>IncomeTaxNbr}\" width=\"25%\"\n\t\t\t\t\t\t\t\tliveChange=\"onSupplierAttributesLiveChange\" maxLength=\"15\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelSARSTaxCompliancePIN}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputSARSTaxCompliancePIN\" placeholder=\"{i18n>inputPlaceHolderSARSTaxCompliancePIN}\" value=\"{Registration>SARSTaxCompliancePIN}\"\n\t\t\t\t\t\t\t\twidth=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"{i18n>labelVATRegistrationNumber}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputVATRegistrationNumber\" value=\"{Registration>VATRegistrationNbr}\" width=\"25%\" liveChange=\"onSupplierAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabOrganisationList\" itemPress=\"onPressOrganisationListItem\"\n\t\titems=\"{ path: 'Registration>/OrganisationSet', filters: [{ path: 'EntityStatusID', operator: 'BT', value1: '1', value2: '4' }, { path: 'EntityStatusID', operator: 'EQ', value1: '6'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" press=\"onPressOrganisationListItem\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>Name}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>RelationshipTypeID', formatter:'.formatRelationshipTypeID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>CompanyRegNbr}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>BusinessPartnerID}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LegalEntityType', formatter:'.formatLegalEntityType' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LastActionTimeStamp', formatter:'.formatLastActionTimeStamp' }\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressOrganisationDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"75px\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Organisations\"/>\n\t\t\t\t<OverflowToolbarButton id=\"btnOrganisationListRefresh\" type=\"Transparent\" icon=\"sap-icon://refresh\"\n\t\t\t\t\tpress=\"onPressOrganisationListRefreshButton\" enabled=\"true\" visible=\"{viewModel>/btnOrganisationListRefreshVisible}\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onOrganisationSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" text=\"Sort\" icon=\"sap-icon://sort\" press=\"onPressOrganisationListSort\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" rext=\"Add\" press=\"onPressOrganisationAddButton\" visible=\"false\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabSupplierList\" itemPress=\"onPressSupplierListItem\"\n\t\titems=\"{ path: 'Registration>/SupplierSet', parameters : { expand : 'toOrganisation,toPerson' }, filters: [ { path: 'EntityStatusID', operator: 'BT', value1: '1', value2: '4' }, { path: 'EntityStatusID', operator: 'EQ', value1: '6'} ] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>TradingAsName}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/CompanyRegNbr} : 'Not applicable' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${Registration>toOrganisation/BusinessPartnerID} : ${Registration>toPerson/BusinessPartnerID} }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>VendorID}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>OrganisationID} ? ${path: 'Registration>toOrganisation/LegalEntityType', formatter:'.formatLegalEntityType'} : 'Sole proprietor' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LastActionTimeStamp', formatter:'.formatLastActionTimeStamp' }\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressSupplierDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelSupplierTradingAsNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelVendorIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"75px\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Suppliers\"/>\n\t\t\t\t<OverflowToolbarButton id=\"btnSupplierListRefresh\" type=\"Transparent\" icon=\"sap-icon://refresh\" press=\"onPressSupplierListRefreshButton\"\n\t\t\t\t\tenabled=\"true\" visible=\"{viewModel>/btnSupplierListRefreshVisible}\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onSupplierSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" text=\"Sort\" icon=\"sap-icon://sort\" press=\"onPressSupplierListSort\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressSupplierAddButton\" visible=\"false\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierAddresses.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierAddresses\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabSupplierAddresses\" itemPress=\"onPressSupplierAddressListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableAddresses}\" updateStarted=\"setBusyTableAddresses\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableSupplierAddresses\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toAddresses', factory: '.createSupplierAddressListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Addresses\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelAddressType\" required=\"true\" text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxSupplierAddressTypes\" items=\"{ path: 'Registration>/AddressTypeSet', filters: [{path: 'AddressTypeScope', operator: 'EQ', value1: '5'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxAddressTypeSelectedItem}\" change=\"onCBoxSupplierAddressTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxSupplierAddressTypesChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>AddressTypeID}\" text=\"{Registration>AddressTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForAddressType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnSupplierAddressAdd\" press=\"onPressSupplierAddressAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address category\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Location\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Postal code\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"City\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Region\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Country\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationDocuments\" class=\"sapUiMediumMarginBottom\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglOrganisationDocs\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucOrganisationDocUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\"\n\t\t\t\t\t\t\t\tmaximumFileSize=\"10\" maximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg,application/pdf,application/msword\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onOrganisationDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelOrganisationDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationDocumentTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '3'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxOrganisationDocumentTypesChange\" width=\"300px\" class=\"cctDropDownInNonEditableForm\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>DocumentTypeID}\" text=\"{Registration>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationServices.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationServices\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabOrganisationServicesList\" itemPress=\"onPressOrganisationServiceListItem\" items=\"{ path: 'Registration>toServices' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\" class=\"sapUiMediumMarginBottom\">\n\t\t\t\t\t\t\t\t<customData>\n\t\t\t\t\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t\t\t\t</customData>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>ServiceTypeID', formatter:'.formatServiceTypeID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>OrganisationID', formatter:'.formatOrganisationID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>LastActionID', formatter:'.formatActionID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>LastActionTimeStamp', type: 'sap.ui.model.type.Date', formatOptions: { style: 'full'} }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressOrganisationServiceDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Registered services\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelServiceType\" required=\"true\" text=\"Service type\" visible=\"{viewModel>/cboxOrganisationServiceTypesVisible}\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationServiceTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ServiceTypeSet', filters: [{path: 'ServiceTypeScope', operator: 'EQ', value1: '4'}, {path: 'ServiceTypeScope', operator: 'EQ', value1: '43'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxOrganisationServiceTypesChange\" selectionChange=\"onCBoxOrganisationServiceTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{viewModel>/cboxOrganisationServiceTypesVisible}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ServiceTypeID}\" text=\"{Registration>ServiceTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon id=\"iconHintForServiceType\" src=\"sap-icon://sys-help\" press=\"hintForServiceType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\" visible=\"{viewModel>/cboxOrganisationServiceTypesVisible}\"/>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnOrganisationServiceAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressOrganisationServiceAddButton\"\n\t\t\t\t\t\t\t\t\t\t\tenabled=\"false\" visible=\"{viewModel>/cboxOrganisationServiceTypesVisible}\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelServiceTypeIDColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelOrganisationIDColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelEntityStatusColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelLastActionColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/supplier/SupplierBEEClassification.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formSupplierBEEClassification\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEEClassificationType\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"B-BBEE classification type\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxBEEClassificationType\" items=\"{Registration>/BEEClassificationTypeSet}\" width=\"25%\"\n\t\t\t\t\t\t\t\tselectedKey=\"{Registration>BEEClassificationTypeID}\" selectionChange=\"onBEEClassificationAttributesLiveChange\" change=\"onBEEClassificationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BEEClassificationTypeID}\" text=\"{Registration>BEEClassificationTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEELevel\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"B-BBEE level\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxBEELevel\" items=\"{Registration>/BEEClassificationLevelSet}\" width=\"30%\"\n\t\t\t\t\t\t\t\tvisible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\" selectedKey=\"{Registration>BEEClassificationLevelID}\"\n\t\t\t\t\t\t\t\tselectionChange=\"onBEEClassificationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BEEClassificationLevelID}\" text=\"{Registration>BEEClassificationLevelText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBOwnPercentage\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Black ownership\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputBOwnPercentage\" maxLength=\"5\" type=\"sap.m.InputType.Number\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\"\n\t\t\t\t\t\t\t\tvalue=\"{path: 'Registration>BOwnPercentage', type: 'sap.ui.model.type.Number', formatOptions: {maximum: '100'} }\" liveChange=\"onBEEClassificationAttributesLiveChange\" description=\"%\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2 S4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBWOwnPercentage\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Black women ownership\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputBWOwnPercentage\" maxLength=\"5\" type=\"sap.m.InputType.Number\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\"\n\t\t\t\t\t\t\t\tvalue=\"{ path: 'Registration>BWOwnPercentage', type: 'sap.ui.model.type.Number', formatOptions: {maximum: '100'} }\" liveChange=\"onBEEClassificationAttributesLiveChange\" description=\"%\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2 S4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEEClassifExpiryDate\" visible=\"{= ${Registration>BEEClassificationTypeID} !== 'N' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"B-BBEE certificate expiry\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<DatePicker id=\"inputBEEClassifExpiryDate\" placeholder=\"Enter a date\" dateValue=\"{Registration>CertificateExpiryDate}\"\n\t\t\t\t\t\t\t\tchange=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2 S4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEEVerifierType\" visible=\"{= ${Registration>BEEClassificationTypeID} === 'EME' || ${Registration>BEEClassificationTypeID} === 'QSE'}\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Verifier type\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxBEEVerifierType\" items=\"{Registration>/BEEVerifierTypeSet}\" width=\"30%\"\n\t\t\t\t\t\t\t\tselectedKey=\"{Registration>BEEVerifierTypeID}\" selectionChange=\"onBEEClassificationAttributesLiveChange\" change=\"onBEEClassificationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BEEVerifierTypeID}\" text=\"{Registration>BEEVerifierTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEEVerifierRegistrationNbr\" visible=\"{= ${Registration>BEEClassificationTypeID} === 'EME' &amp;&amp; ${Registration>BEEVerifierTypeID} === 'EME VERIFIER' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Verifier registration number\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputBEEVerifierRegistrationNbr\" placeholder=\"{i18n>inputPlaceHolderBEEVerifierRegistrationNbr}\"\n\t\t\t\t\t\t\t\tvalue=\"{Registration>VerifierRegNbr}\" liveChange=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEEVerifierName\" visible=\"{= ${Registration>BEEClassificationTypeID} === 'EME' &amp;&amp; ${Registration>BEEVerifierTypeID} === 'EME VERIFIER' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Verifier name\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputBEEVerifierName\" placeholder=\"{i18n>inputPlaceHolderBEEVerifierName}\"\n\t\t\t\t\t\t\t\tvalue=\"{Registration>VerifierName}\" liveChange=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEECertificateNumber\" visible=\"{= ${Registration>BEEClassificationTypeID} === 'GEN' || (${Registration>BEEClassificationTypeID} === 'QSE' &amp;&amp; ${Registration>BEEVerifierTypeID} === 'EME VERIFIER') }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"B-BBEE certificate number\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputBEECertificateNumber\" placeholder=\"{i18n>inputPlaceHolderBEECertificateNumber}\" width=\"30%\"\n\t\t\t\t\t\t\t\tvalue=\"{Registration>CertificateNumber}\" liveChange=\"onBEEClassificationAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBEECertificateAgency\" visible=\"{= ${Registration>BEEClassificationTypeID} === 'GEN' || (${Registration>BEEClassificationTypeID} === 'QSE' &amp;&amp; ${Registration>BEEVerifierTypeID} === 'EME VERIFIER') }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"B-BBEE certificate agency\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxBEECertificateAgency\" items=\"{ path: 'Registration>/CertificateAgencySet', filters: [{path: 'CertificateTypeID', operator: 'EQ', value1: 'BEE'}] }\" width=\"30%\"\n\t\t\t\t\t\t\t\tselectedKey=\"{Registration>CertificateAgency}\" selectionChange=\"onBEEClassificationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>CertificateAgencyID}\" text=\"{Registration>CertificateAgencyText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Min. 51% youth\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchBEEHasQuotaYouth\" state=\"{Registration>hasQuotaYouth}\"\n\t\t\t\t\t\t\t\ttype=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\" change=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Min. 51% military veterans\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchBEEHasQuotaMilitaryVeteran\" state=\"{Registration>hasQuotaMilitaryVeteran}\"\n\t\t\t\t\t\t\t\ttype=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\" change=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Min. 51% underdeveloped community or township\" class=\"cctWrappedLabelText\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchBEEHasQuotaTownship\" state=\"{Registration>hasQuotaTownship}\"\n\t\t\t\t\t\t\t\ttype=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\" change=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"false\" text=\"Min. 51% cooperative\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Switch id=\"switchBEEHasQuotaCooperative\" state=\"{Registration>hasQuotaCooperative}\"\n\t\t\t\t\t\t\t\ttype=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\" change=\"onBEEClassificationAttributesLiveChange\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L3 M3 S5\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationDataAccuracyDeclaration.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationDataAccuracyDeclaration\" class=\"sapUiMediumMarginTop sapUiMediumMarginBottom\"\n\t\tvisible=\"{= ${Registration>OrganisationID} !== null &amp;&amp; ${Registration>OrganisationID} !== undefined &amp;&amp; ${Registration>OrganisationID} !== '' }\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<core:HTML sanitizeContent=\"true\"\n\t\t\t\t\t\t\t\tcontent='&lt;div class=&quot;content&quot;&gt;&lt;div&gt;Press the button to verify details of the organisation for which you are taking action. &lt;/div&gt;Confirm you have verified and updated where required by checking the box.&lt;/div&gt;'></core:HTML>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Button type=\"Emphasized\" text=\"Update details\" press=\"onPressOrganisationUpdateDetailsButton\" width=\"150px\" class=\"sapUiSmallMarginTop\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<CheckBox select=\"onSelectOrganisationDataAccuracyDeclarationCheckBox\"\n\t\t\t\t\t\t\t\tselected=\"{viewModel>/chkOrganisationDataAccuracyDeclarationSelected}\" text=\"I have verified and updated details where required\"\n\t\t\t\t\t\t\t\tenabled=\"{viewModel>/chkOrganisationDataAccuracyDeclarationEnabled}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Legal name\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputOrganisationName\" placeholder=\"{i18n>inputPlaceHolderOrganisationName}\" value=\"{Registration>Name}\" width=\"50%\"\n\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\" maxLength=\"80\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label busy=\"false\" id=\"labelOrganisationType\" required=\"true\" text=\"Organisation type\" textAlign=\"Left\" textDirection=\"Inherit\"\n\t\t\t\t\t\t\t\twidth=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationType\" items=\"{Registration>/RelationshipTypeSet}\" selectedKey=\"{Registration>RelationshipTypeID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tchange=\"onOrganisationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>RelationshipTypeID}\" text=\"{Registration>RelationshipTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label busy=\"false\" required=\"true\" text=\"Legal entity type\" textAlign=\"Left\" textDirection=\"Inherit\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxLegalEntityType\" items=\"{Registration>/LegalEntityTypeSet}\" selectedKey=\"{Registration>LegalEntityType}\" width=\"30%\"\n\t\t\t\t\t\t\t\tchange=\"onOrganisationAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>LegalEntityTypeID}\" text=\"{Registration>LegalEntityTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelCompanyRegNbrInput\" required=\"true\" text=\"{i18n>labelCompanyRegNbrInput}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputCompanyRegNbr\" placeholder=\"{i18n>inputPlaceHolderCompanyRegNbr}\" value=\"{Registration>CompanyRegNbr}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelBusinessPartnerIDInput\" required=\"false\" text=\"{i18n>labelBusinessPartnerIDInput}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input id=\"inputOrganisationBusinessPartnerID\" value=\"{Registration>BusinessPartnerID}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBusinessPartner\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationDraftList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabOrganisationDraftList\" itemPress=\"onDraftOrganisationListItemPress\"\n\t\titems=\"{ path: 'Registration>/OrganisationSet', filters: [{ path: 'EntityStatusID', operator: 'EQ', value1: '0'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>Name}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>RelationshipTypeID', formatter:'.formatRelationshipTypeID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>CompanyRegNbr}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>BusinessPartnerID}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LegalEntityType', formatter:'.formatLegalEntityType' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressOrganisationDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Organisation drafts\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" id=\"__field0\" search=\"onOrganisationSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressOrganisationAddButton\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationAddresses.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationAddresses\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabOrganisationAddresses\" itemPress=\"onPressOrganisationAddressListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableResponsibilities}\" updateStarted=\"setBusyTableResponsibilities\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableOrganisationAddresses\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toAddresses', factory: '.createOrganisationAddressListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Addresses\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelAddressType\" required=\"true\" text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationAddressTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/AddressTypeSet', filters: [{path: 'AddressTypeScope', operator: 'EQ', value1: '3'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxAddressTypeSelectedItem}\" change=\"onCBoxOrganisationAddressTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxOrganisationAddressTypesChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>AddressTypeID}\" text=\"{Registration>AddressTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForAddressType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnOrganisationAddressAdd\" press=\"onPressOrganisationAddressAddButton\"\n\t\t\t\t\t\t\t\t\t\t\tenabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address category\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Location\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Postal code\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"City\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Region\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Country\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationListNoDelete.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabOrganisationList\" itemPress=\"onPressOrganisationListItem\"\n\t\titems=\"{ path: 'Registration>/OrganisationSet', filters: [{ path: 'EntityStatusID', operator: 'BT', value1: '0', value2: '4' }, { path: 'EntityStatusID', operator: 'EQ', value1: '6'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" mode=\"SingleSelectMaster\" backgroundDesign=\"Solid\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" press=\"onPressOrganisationListItem\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>Name}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>RelationshipTypeID', formatter:'.formatRelationshipTypeID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>CompanyRegNbr}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>BusinessPartnerID}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LegalEntityType', formatter:'.formatLegalEntityType' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelOrganisationTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelCompanyRegNbrColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelBusinessPartnerIDColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLegalEntityTypeColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"Organisations\"/>\n\t\t\t\t<OverflowToolbarButton id=\"btnOrganisationListRefresh\" type=\"Transparent\" icon=\"sap-icon://refresh\"\n\t\t\t\t\tpress=\"onPressOrganisationListRefreshButton\" enabled=\"true\" visible=\"{viewModel>/btnOrganisationListRefreshVisible}\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onOrganisationSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressOrganisationAddButton\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/Error.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanS=\"4\" labelSpanM=\"4\" labelSpanL=\"4\"\n\t\t\t\tbackgroundDesign=\"Transparent\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Text text=\"{Error>/message}\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Link text=\"Show details\" class=\"sapUiTinyMarginBottom\" press=\"toggleErrorDetails\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemErrorMessageDetails\" visible=\"false\">\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<TextArea id=\"tareaErrorDetails\" value=\"{Error>/messageDetails}\" growing=\"true\" width=\"385px\" height=\"100%\" editable=\"false\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/IntroDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\">\n\t<Dialog id=\"diaIntro\" title=\"Welcome to City of Cape Town eServices registration\" class=\"sapUiContentPadding\">\n\t\t<content>\n\t\t\t<sap.ui.layout.form:Form editable=\"true\">\n\t\t\t\t<sap.ui.layout.form:layout>\n\t\t\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanM=\"3\"/>\n\t\t\t\t</sap.ui.layout.form:layout>\n\t\t\t\t<sap.ui.layout.form:formContainers>\n\t\t\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t\t<Carousel class=\"sapUiContentPadding\" loop=\"true\" width=\"700px\" hight=\"400px\">\n\t\t\t\t\t\t\t\t\t<pages>\n\t\t\t\t\t\t\t\t\t\t<Image src=\"image/Intro1.png\" alt=\"Service activation tiles intro\"/>\n\t\t\t\t\t\t\t\t\t\t<Image src=\"image/Intro2.png\" alt=\"Data maintenance tiles intro\"/>\n\t\t\t\t\t\t\t\t\t\t<Image src=\"image/Intro3.png\" alt=\"Drafts tile intro\"/>\n\t\t\t\t\t\t\t\t\t</pages>\n\t\t\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t\t\t</sap.ui.layout.form:formContainers>\n\t\t\t</sap.ui.layout.form:Form>\n\t\t</content>\n\t\t<endButton>\n\t\t\t<Button text=\"Close\" type=\"Emphasized\" press=\"onPressCloseIntroDialogButton\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationResponsibilities.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationResponsibilities\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabOrganisationResponsibilities\" itemPress=\"onPressOrganisationResponsibilityListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableResponsibilities}\" updateFinished=\"onUpdateFinishedTableOrganisationResponsibilities\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toResponsibilities', filters: [{ path: 'RoleID', operator: 'BT', value1: '01', value2: '03'}], factory: '.createOrganisationResponsibilityListItem' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Responsibilities\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelPersonRole\" required=\"true\" text=\"Role\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxPersonRoles\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/RoleSet', filters: [{path: 'RoleScope', operator: 'EQ', value1: '3'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onPersonRoleLiveChange\" selectionChange=\"onCBoxPersonRoleChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>RoleID}\" text=\"{Registration>RoleText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForRoleType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" id=\"btnOrganisationResponsibilityAdd\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressAddResponsibilityButton\"\n\t\t\t\t\t\t\t\t\t\t\tenabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Role\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Name\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Surname\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"ID type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"ID number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationContacts.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formOrganisationContacts\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabOrganisationContacts\" itemPress=\"onPressOrganisationContactListItem\" busy=\"{viewModel>/busyTableOrganisationContacts}\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTableOrganisationContacts\" items=\"{ path: 'Registration>toContacts' }\"\n\t\t\t\t\t\t\t\tnoDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Contacts\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelContactType\" required=\"true\" text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationContactTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ContactTypeSet', filters: [{path: 'ContactTypeScope', operator: 'EQ', value1: '3'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxOrganisationContactTypesChange\" selectionChange=\"onCBoxOrganisationContactTypesChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ContactTypeID}\" text=\"{Registration>ContactTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnOrganisationContactAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressContactAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>ContactTypeID', formatter: '.formatContactTypeID'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>ContactName}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>PhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>FaxNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>MobilePhoneNumber}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressOrganisationContactDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Contact name\"/> \n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"eMail address\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Fax number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Mobile phone\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonDocuments\" class=\"sapUiMediumMarginBottom\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucPersonDocUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\"\n\t\t\t\t\t\t\t\tmaximumFileSize=\"10\" maximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg,application/pdf,application/msword\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"false\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onPersonDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelPersonDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxPersonDocumentTypes\" items=\"{ path: 'Registration>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '2'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxDocTypeSelectedItem}\" selectionChange=\"onCBoxPersonDocumentTypesChange\" width=\"300px\" class=\"cctDropDownInNonEditableForm\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>DocumentTypeID}\" text=\"{Registration>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns=\"sap.m\">\n\t<Table id=\"tabPersonList\" itemPress=\"onPersonListItemPress\"\n\t\titems=\"{ path: 'Registration>/PersonSet', filters: [{path: 'EntityStatusID', operator: 'BT', value1: '1', value2: '4'}, { path: 'EntityStatusID', operator: 'BT', value1: '6', value2: '7'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" busy=\"{viewModel>/busyTablePeople}\" backgroundDesign=\"Solid\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>Name}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>Surname}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{path: 'Registration>IDType', formatter: '.formatIDType'}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>IDNumber}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path: 'Registration>LastActionTimeStamp', formatter:'.formatLastActionTimeStamp' }\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressPersonDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelPersonNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelPersonSurnameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"ID type\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"ID Number\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"eMail address\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column width=\"75px\">\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"People\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onPersonSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" text=\"Sort\" icon=\"sap-icon://sort\" press=\"onPressPersonListSort\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressPersonAddButton\" visible=\"false\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonDataPrivacyDeclaration.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonDataPrivcyDeclaration\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglPersonDataPrivacyDeclaration\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer id=\"fcPersonDataPrivacyDeclaration\">\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<core:HTML sanitizeContent=\"true\"\n\t\t\t\t\t\t\t\tcontent='&lt;div class=&quot;content&quot;&gt;&lt;div&gt;We endeavour to ensure that the data you submit to us remains confidential and is used only for the purposes stated in the data privacy document. Please confirm that you accept our data privacy statement below. The data privacy statement is displayed in a new window. If the display of additional windows is currently suppressed by a pop-up blocker, you must first de-activate this setting.&lt;/div&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.capetown.gov.za/General/Privacy&quot;&gt;Data privacy statement&lt;/a&gt;&lt;/div&gt;'>\n\t\t\t\t\t\t\t</core:HTML>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<CheckBox select=\"onPersonDataPrivacyDeclarationCheckBoxSelect\" selected=\"{viewModel&gt;/privacyDeclarationAccepted}\" text=\"I have read and accept the privacy statement\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feEditPersonDataPrivacyDeclarationLink\" visible=\"false\">\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t    <Link text=\"Edit\" id=\"linkEditPersonDataPrivacyDeclaration\" press=\"onPressPersonDataPrivacyDeclarationLink\" wrapping=\"true\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonResponsibilities.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonResponsibilities\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabPersonResponsibilities\" itemPress=\"onPressPersonResponsibilityListItem\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toResponsibilities', factory: '.createPersonResponsibilityListItem' }\" noDataText=\"No entries\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Responsibilities\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Role\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Organisation\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Registration number\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Organisation type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Legal entity type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/organisation/OrganisationAttributesForCreate.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<HBox class=\"sapUiLargeMarginBegin sapUiSmallMarginBottom\">\n\t\t<Label required=\"true\" labelFor=\"switchisAdopted\" text=\"{viewModel>/labelSwitchIsAdopted}\" width=\"100%\" class=\"sapUiSmallMarginTop\"/>\n\t\t<Switch id=\"switchisAdopted\" state=\"{Registration>isAdopted}\" type=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\"\n\t\t\tclass=\"sapUiSmallMarginBegin\"/>\n\t\t<core:Icon src=\"sap-icon://message-warning\" press=\"hintForAdoptBusinessPartner\" class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\"\n\t\t\ttooltip=\"Take note\" color=\"Critical\" size=\"30px\"/>\n\t</HBox>\n\t<sap.ui.layout.form:Form id=\"formOrganisationAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Legal name\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputOrganisationName\" placeholder=\"{i18n>inputPlaceHolderOrganisationName}\" value=\"{Registration>Name}\" width=\"50%\"\n\t\t\t\t\t\t\t\tmaxLength=\"80\" liveChange=\"onOrganisationAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label busy=\"false\" id=\"labelOrganisationType\" required=\"true\" text=\"Organisation type\" textAlign=\"Left\" textDirection=\"Inherit\"\n\t\t\t\t\t\t\t\twidth=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxOrganisationType\" items=\"{Registration>/RelationshipTypeSet}\" selectedKey=\"{Registration>RelationshipTypeID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tchange=\"onOrganisationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>RelationshipTypeID}\" text=\"{Registration>RelationshipTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label busy=\"false\" required=\"true\" text=\"Legal entity type\" textAlign=\"Left\" textDirection=\"Inherit\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxLegalEntityType\" items=\"{Registration>/LegalEntityTypeSet}\" selectedKey=\"{Registration>LegalEntityType}\" width=\"30%\"\n\t\t\t\t\t\t\t\tchange=\"onOrganisationAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>LegalEntityTypeID}\" text=\"{Registration>LegalEntityTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelCompanyRegNbrInput\" required=\"true\" text=\"{i18n>labelCompanyRegNbrInput}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputCompanyRegNbr\" placeholder=\"{i18n>inputPlaceHolderCompanyRegNbr}\" value=\"{Registration>CompanyRegNbr}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>isAdopted} &amp;&amp; !${viewModel>/isVisibleAlternateOrganisationIDInput} }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelBusinessPartnerIDInput\" required=\"true\" text=\"{viewModel>/labelBusinessPartnerIDInput}\" width=\"100%\"\n\t\t\t\t\t\t\t\tclass=\"cctWrappedLabelText\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input id=\"inputOrganisationBusinessPartnerID\" value=\"{Registration>BusinessPartnerID}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBusinessPartner\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>isAdopted} &amp;&amp; ${viewModel>/isVisibleSupplierOrganisationIDInput} }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSupplierOrganisationIDInput\" required=\"true\" text=\"{viewModel>/labelBusinessPartnerIDInput}\" width=\"100%\"\n\t\t\t\t\t\t\t\tclass=\"cctWrappedLabelText\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input id=\"inputSupplierOrganisationID\" value=\"{Registration>BusinessPartnerID}\" width=\"100%\"\n\t\t\t\t\t\t\t\t\tliveChange=\"onOrganisationAttributesLiveChange\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBusinessPartner\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonUser.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonUser\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglPersonUser\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer id=\"fcPersonUser\">\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelChosenUserID}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input liveChange=\"onPersonUserLiveChange\" value=\"{Registration>chosenUserID}\" placeholder=\"{i18n>inputPlaceHolderChosenUserID}\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://message-warning\" press=\"hintForChosenUserID\" class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" tooltip=\"Take note\"\n\t\t\t\t\t\t\t\t\tcolor=\"Critical\" size=\"30px\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"e-mail\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input fieldWidth=\"50%\" id=\"inputEMail\" liveChange=\"onPersonUserLiveChange\" placeholder=\"{i18n>inputPlaceholderEMailAddress}\" type=\"Email\"\n\t\t\t\t\t\t\t\tvalue=\"{Registration>eMailAddress}\" width=\"40%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"{i18n>labelRepeatEmail}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputRepeatEMail\" liveChange=\"onPersonUserLiveChange\" value=\"{viewModel>/repeatEMail}\" width=\"40%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feEditPersonUserLink\" visible=\"false\">\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Link text=\"Edit\" id=\"linkEditPersonUser\" press=\"onPressPersonUserLink\" wrapping=\"true\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\"\n\t\tshowIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonServices.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonServices\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabPersonServicesList\" itemPress=\"onPressPersonServiceListItem\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toServices', filters: [ { path: 'EntityStatusID', operator: 'EQ', value1: '1'}, { path: 'EntityStatusID', operator: 'EQ', value1: '2'}] }\"\n\t\t\t\t\t\t\t\tnoDataText=\"{viewModel>/sPersonServicesNoDataText}\" class=\"sapUiMediumMarginBottom\">\n\t\t\t\t\t\t\t\t<customData>\n\t\t\t\t\t\t\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t\t\t\t\t\t\t</customData>\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Registered services\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label required=\"true\" text=\"Service type\" visible=\"{viewModel>/cboxPersonServiceTypesVisible}\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxPersonServiceTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/ServiceTypeSet', filters: [{path: 'ServiceTypeScope', operator: 'EQ', value1: '4'}, {path: 'ServiceTypeScope', operator: 'EQ', value1: '42'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxPersonServiceTypesChange\" selectionChange=\"onCBoxPersonServiceTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tvisible=\"{viewModel>/cboxPersonServiceTypesVisible}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>ServiceTypeID}\" text=\"{Registration>ServiceTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<Button id=\"btnPersonServiceAdd\" type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressPersonServiceAddButton\"\n\t\t\t\t\t\t\t\t\t\t\tenabled=\"false\" visible=\"{viewModel>/cboxPersonServiceTypesVisible}\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>ServiceTypeID', formatter:'.formatServiceTypeID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>PersonID', formatter:'.formatPersonID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>EntityStatusID', formatter:'.formatEntityStatusID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>LastActionID', formatter:'.formatActionID' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text maxLines=\"0\" text=\"{ path: 'Registration>LastActionTimeStamp', type: 'sap.ui.model.type.Date', formatOptions: { style: 'full'} }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressPersonServiceDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelServiceTypeIDColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelPersonIDColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelEntityStatusColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelLastActionColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"{i18n>labelLastActionTimeStampColumn}\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonAttributes.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglPersonAttributes\" adjustLabelSpan=\"true\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelPersonTitle\" required=\"true\" text=\"Title\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxAdministratorTitle\" items=\"{Registration>/TitleSet}\" selectedKey=\"{Registration>TitleID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>TitleID}\" text=\"{Registration>TitleText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelNameInput\" required=\"true\" text=\"Name\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputPersonName\" placeholder=\"{i18n>inputPlaceHolderName}\" value=\"{Registration>Name}\" width=\"30%\" maxLength=\"40\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSurnameInput\" required=\"true\" text=\"{i18n>labelSurnameInput}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputSurname\" placeholder=\"{i18n>inputPlaceHolderSurname}\" value=\"{Registration>Surname}\" width=\"30%\" maxLength=\"40\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelPersonPhoneNumberInput\" required=\"true\" text=\"Phone number\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<List id=\"listPersonCommunication\" showSeparators=\"None\" items=\"{ path: 'Comms>/items', factory: '.createCommsListItem' }\"\n\t\t\t\t\t\t\t\tshowNoData=\"false\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4 S4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://add\" text=\"Add\" press=\"onPressAddCommunicationItemButton\" type=\"Transparent\" width=\"30px\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L1 M1 S1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Resident type\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<RadioButtonGroup id=\"rbGrpIdentityType\" columns=\"2\" width=\"100%\">\n\t\t\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t\t\t<RadioButton id=\"rbSANational\" text=\"South African permanent resident\" select=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\t\tselected=\"{= ${Registration>IDType} === '000001' || ${Registration>IDType} === '' }\" enabled=\"{= !${path: 'Registration>isValidated'} }\"/>\n\t\t\t\t\t\t\t\t\t<RadioButton id=\"rbForeignNational\" text=\"Foreign national\" select=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\t\tselected=\"{= ${Registration>IDType} === '000004' }\" enabled=\"{= !${path: 'Registration>isValidated'} }\"/>\n\t\t\t\t\t\t\t\t</buttons>\n\t\t\t\t\t\t\t</RadioButtonGroup>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Identification type\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxIdentificationType\" items=\"{Registration>/IDTypeSet}\" selectedKey=\"{Registration>IDType}\" width=\"25%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>IDTypeID}\" text=\"{Registration>IDTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Identification number\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputIDNumber\" placeholder=\"{i18n>inputPlaceHolderIDNumber}\" value=\"{Registration>IDNumber}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>IDType} === '000004' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Country of issue\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxIDCountryOfIssue\" items=\"{Registration>/CountrySet}\" selectedKey=\"{Registration>IDCountryOfIssue}\" width=\"40%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>CountryID}\" text=\"{Registration>CountryText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelPersonBusinessPartnerIDInput\" required=\"false\" text=\"{i18n>labelBusinessPartnerIDInput}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input id=\"inputPersonBusinessPartnerID\" value=\"{Registration>BusinessPartnerID}\" liveChange=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\tchange=\"onPersonBusinessPartnerIDChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://message-warning\" press=\"hintForAdoptBusinessPartner\" class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\"\n\t\t\t\t\t\t\t\t\ttooltip=\"Take note\" color=\"Critical\" size=\"30px\" visible=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBusinessPartner\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\"\n\t\tshowIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonSelectPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popPersonSelect\" title=\"Add new responsibility\" class=\"sapUiContentPadding\" placement=\"Bottom\"\n\t\tinitialFocus=\"selPersonOption\" contentWidth=\"50%\">\n\t\t<content>\n\t\t\t<Table id=\"tabPersonSelectPopover\" noDataText=\"No entries. Click + to add\" title=\"Select Person\" search=\"onPressPersonSelectDialogSearch\"\n\t\t\t\titems=\"{ path : 'Registration>/PersonSet', filters: [{path: 'EntityStatusID', operator: 'BT', value1: '0', value2: '4'}, { path: 'EntityStatusID', operator: 'BT', value1: '6', value2: '7'}], sorter : { path : 'Name', descending : false } }\">\n\t\t\t\t<ColumnListItem type=\"Active\">\n\t\t\t\t\t<cells>\n\t\t\t\t\t\t<ObjectIdentifier title=\"{Registration>Name} {Registration>Surname}\"/>\n\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>IDNumber}\"/>\n\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{= ${Registration>PhoneNumber}? ${Registration>PhoneNumber} : ${Registration>MobilePhoneNumber} }\"/>\n\t\t\t\t\t\t<Text maxLines=\"1\" text=\"{ path : 'Registration>EntityStatusID', formatter : '.formatEntityStatusID' }\"/>\n\t\t\t\t\t</cells>\n\t\t\t\t</ColumnListItem>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column width=\"12em\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Text text=\"Name\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Text text=\"ID number\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Text text=\"eMail address\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Text text=\"Phone number\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Text text=\"Status\"/>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t<Title text=\"People\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onPressPersonSelectDialogSearch\" liveChange=\"\"/>\n\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressPersonSelectDialogAddPersonButton\"/>\n\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t</Table>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonAttributesForCreate.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<HBox class=\"sapUiLargeMarginBegin sapUiSmallMarginBottom\">\n\t\t<Label required=\"true\" labelFor=\"switchisAdopted\" text=\"{i18n>labelSwitchPersonIsAdopted}\" width=\"100%\"\n\t\t\tclass=\"sapUiSmallMarginTop\"/>\n\t\t<Switch id=\"switchisAdopted\" state=\"{Registration>isAdopted}\" type=\"Default\" customTextOn=\"Yes\" customTextOff=\"No\" class=\"sapUiSmallMarginBegin\"/>\n\t\t<core:Icon src=\"sap-icon://message-warning\" press=\"hintForAdoptBusinessPartner\" class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" tooltip=\"Take note\"\n\t\t\tcolor=\"Critical\" size=\"30px\"/>\n\t</HBox>\n\t<sap.ui.layout.form:Form id=\"formPersonAttributes\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglPersonAttributes\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label busy=\"false\" id=\"labelPersonTitle\" required=\"true\" text=\"Title\" textAlign=\"Left\" textDirection=\"Inherit\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxAdministratorTitle\" items=\"{Registration>/TitleSet}\" selectedKey=\"{Registration>TitleID}\" width=\"20%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>TitleID}\" text=\"{Registration>TitleText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelNameInput\" required=\"true\" text=\"Name\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputPersonName\" placeholder=\"{i18n>inputPlaceHolderName}\" value=\"{Registration>Name}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelSurnameInput\" required=\"true\" text=\"{i18n>labelSurnameInput}\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputSurname\" placeholder=\"{i18n>inputPlaceHolderSurname}\" value=\"{Registration>Surname}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= !${Registration>isAdopted} }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelPersonPhoneNumberInput\" required=\"true\" text=\"Phone number\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<List id=\"listPersonCommunication\" showSeparators=\"None\" items=\"{ path: 'Comms>/items', factory: '.createCommsListItem' }\"\n\t\t\t\t\t\t\t\tshowNoData=\"false\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4 S4\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<Button icon=\"sap-icon://add\" text=\"Add\" press=\"onPressAddCommunicationItemButton\" type=\"Transparent\" width=\"30px\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L1 M1 S1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Resident type\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<RadioButtonGroup columns=\"2\" width=\"100%\">\n\t\t\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t\t\t<RadioButton id=\"rbSANational\" text=\"South African permanent resident\" select=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\t\tselected=\"{= ${Registration>IDType} === '000001' || ${Registration>IDType} === '' }\"\n\t\t\t\t\t\t\t\t\t\tenabled=\"{= !${path: 'Registration>isValidated'} }\"/>\n\t\t\t\t\t\t\t\t\t<RadioButton id=\"rbForeignNational\" text=\"Foreign national\" select=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\t\tselected=\"{= ${Registration>IDType} === '000004' }\" enabled=\"{= !${path: 'Registration>isValidated'} }\"/>\n\t\t\t\t\t\t\t\t</buttons>\n\t\t\t\t\t\t\t</RadioButtonGroup>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Identification type\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxIdentificationType\" items=\"{Registration>/IDTypeSet}\" selectedKey=\"{Registration>IDType}\" width=\"25%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>IDTypeID}\" text=\"{Registration>IDTypeText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Identification number\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Input id=\"inputIDNumber\" placeholder=\"{i18n>inputPlaceHolderIDNumber}\" value=\"{Registration>IDNumber}\" width=\"30%\"\n\t\t\t\t\t\t\t\tliveChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${Registration>IDType} === '000004' }\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label required=\"true\" text=\"Country of issue\" width=\"100%\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<ComboBox id=\"cboxIDCountryOfIssue\" items=\"{Registration>/CountrySet}\" selectedKey=\"{Registration>IDCountryOfIssue}\" width=\"40%\"\n\t\t\t\t\t\t\t\tselectionChange=\"onPersonAttributesLiveChange\" enabled=\"{= !${path: 'Registration>isValidated' } }\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>CountryID}\" text=\"{Registration>CountryText}\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{Registration>isAdopted}\">\n\t\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t\t<Label id=\"labelPersonBusinessPartnerIDInput\" required=\"true\" text=\"{i18n>labelBusinessPartnerIDInput}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Input id=\"inputPersonBusinessPartnerID\" value=\"{Registration>BusinessPartnerID}\" width=\"100%\" liveChange=\"onPersonAttributesLiveChange\"\n\t\t\t\t\t\t\t\t\tenabled=\"{= !${path: 'Registration>isValidated' } }\"/>\n\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBusinessPartner\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonAddresses.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonAddresses\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Table id=\"tabPersonAddresses\" itemPress=\"onPressPersonAddressListItem\" busy=\"{viewModel>/busyTableResponsibilities}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{viewModel>/busyDelayTableResponsibilities}\" updateStarted=\"setBusyTableResponsibilities\"\n\t\t\t\t\t\t\t\tupdateFinished=\"onUpdateFinishedTablePersonAddresses\"\n\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>toAddresses', factory: '.createPersonAddressListItem' }\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Addresses\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelAddressType\" required=\"true\" text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxPersonAddressTypes\" items=\"{ path: 'Registration>/AddressTypeSet', filters: [{path: 'AddressTypeScope', operator: 'EQ', value1: '2'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxAddressTypeSelectedItem}\" change=\"onCBoxPersonAddressTypesChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxPersonAddressTypesChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>AddressTypeID}\" text=\"{Registration>AddressTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForAddressType\" class=\"sapUiTinyMarginBegin\" tooltip=\"Help\" color=\"#2B65EC\"/>\n\t\t\t\t\t\t\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" id=\"btnPersonAddressAdd\" press=\"onPressPersonAddressAddButton\" enabled=\"false\"/>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address type\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Address category\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Location\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Postal code\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"City\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Region\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Country\"/>\n\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonServiceDocuments.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formServiceDocuments\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout id=\"rglServiceDocuments\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer id=\"fcServiceDocuments\">\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement id=\"feServiceDocuments\">\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<UploadCollection change=\"onUploadCollectionChange\" fileDeleted=\"onDocumentDeleted\" fileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\"\n\t\t\t\t\t\t\t\tid=\"ucServiceDocumentUploadCollection\" items=\"{ path: 'Registration>toDocuments', factory: '.createUploadCollectionItem' }\"\n\t\t\t\t\t\t\t\tmaximumFileSize=\"10\" maximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg\" multiple=\"true\"\n\t\t\t\t\t\t\t\tsameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\t\tuploadComplete=\"onServiceDocumentUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t<Label id=\"labelServiceDocumentTypes\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxServiceDocumentTypes\" placeholder=\"{i18n>pholderSelectEntry}\"\n\t\t\t\t\t\t\t\t\t\t\titems=\"{ path: 'Registration>/DocumentTypeSet', filters: [{path: 'DocumentTypeScope', operator: 'EQ', value1: '4'}, {path: 'DocumentTypeScope', operator: 'EQ', value1: '42'}] }\"\n\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"{viewModel>/cboxDocTypeSelectedItem}\" change=\"onServiceDocumentTypeLiveChange\"\n\t\t\t\t\t\t\t\t\t\t\tselectionChange=\"onCBoxServiceDocumentTypesChange\">\n\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>DocumentTypeID}\" text=\"{Registration>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonDraftList.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<Table id=\"tabPersonDraftList\" itemPress=\"onDraftPersonListItemPress\"\n\t\titems=\"{ path: 'Registration>/PersonSet', filters: [{ path: 'EntityStatusID', operator: 'EQ', value1: '0'}] }\"\n\t\tnoDataText=\"No entries. Click + to add\" busy=\"{viewModel>/busyTablePeople}\" backgroundDesign=\"Solid\" class=\"sapUiMediumMarginBottom\">\n\t\t<customData>\n\t\t\t<core:CustomData key=\"sap-ui-fastnavgroup\" value=\"true\" writeToDom=\"true\"/>\n\t\t</customData>\n\t\t<items>\n\t\t\t<ColumnListItem counter=\"0\" type=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>Name}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>Surname}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{path: 'Registration>IDType', formatter: '.formatIDType'}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>IDNumber}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>eMailAddress}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{Registration>PhoneNumber}\"/>\n\t\t\t\t\t<Text maxLines=\"0\" text=\"{path: 'Registration>EntityStatusID', formatter: '.formatEntityStatusID'}\"/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://sys-cancel\" press=\"onPressPersonDeleteButton\" tooltip=\"Delete\" color=\"#E42217\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t\t<columns>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelPersonNameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"{i18n>labelPersonSurnameColumn}\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"ID type\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"ID Number\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"eMail address\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Phone number\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column>\n\t\t\t\t<header>\n\t\t\t\t\t<Label text=\"Status\"/>\n\t\t\t\t</header>\n\t\t\t</Column>\n\t\t\t<Column vAlign=\"Middle\" width=\"20px\"></Column>\n\t\t</columns>\n\t\t<headerToolbar>\n\t\t\t<OverflowToolbar>\n\t\t\t\t<Title text=\"People drafts\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<SearchField width=\"auto\" placeholder=\"{i18n>pholderEnterSearchCriteria}\" search=\"onPersonSearch\" liveChange=\"\"/>\n\t\t\t\t<Button type=\"Transparent\" icon=\"sap-icon://add\" text=\"Add\" press=\"onPressPersonAddButton\"/>\n\t\t\t</OverflowToolbar>\n\t\t</headerToolbar>\n\t</Table>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintAdoptBusinessPartnerPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popHintBusinessPartnerID\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Right\">\n\t\t<content>\n\t\t\t<Image src=\"image/HintAdoptBusinessPartner.png\" alt=\"Hint for adopting a business partner number\"/>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/person/PersonDataAccuracyDeclaration.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formPersonDataAccuracyDeclaration\" class=\"sapUiMediumMarginBottom\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:formElements>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<core:HTML sanitizeContent=\"true\"\n\t\t\t\t\t\t\t\tcontent='&lt;div class=&quot;content&quot;&gt;&lt;div&gt;Press the button to verify your details before taking action. &lt;/div&gt;&lt;div&gt;Confirm you have verified and updated where required by checking the box.&lt;/div&gt;'>\n\t\t\t\t\t\t\t</core:HTML>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<Button type=\"Emphasized\" text=\"Update my details\" press=\"onPressPersonUpdateDetailsButton\" width=\"150px\" class=\"sapUiSmallMarginTop\">\n\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t\t<CheckBox select=\"onSelectPersonDataAccuracyDeclarationCheckBox\" selected=\"{viewModel>/chkPersonDataAccuracyDeclarationSelected}\"\n\t\t\t\t\t\t\t\ttext=\"I have verified and updated my details where required\" enabled=\"{viewModel>/chkPersonDataAccuracyDeclarationEnabled}\"/>\n\t\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t</sap.ui.layout.form:formElements>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintServiceCreateForPersonOrOrganisation.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popHintBusinessPartnerID\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Bottom\">\n\t\t<content>\n\t\t\t<Image src=\"image/HintServiceCreateForPersonOrOrganisation.png\" alt=\"Hint for creating a service for person or organisation\"/>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/ContactDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"popContact\" title=\"{viewModel>/popContactFormTitle}\" class=\"sapUiContentPadding\" placement=\"Bottom\" contentWidth=\"650px\">\n\t\t<content>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Contact\" type=\"XML\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Cancel\" press=\"onPressContactCancelButton\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"Confirm\" type=\"Emphasized\" press=\"onPressContactConfirmButton\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/AddressDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"popAddress\" title=\"{viewModel>/popAddressFormTitle}\" class=\"sapUiContentPadding\" placement=\"Bottom\" contentWidth=\"650px\">\n\t\t<content>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Address\" type=\"XML\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Cancel\" press=\"onPressAddressCancelButton\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"Confirm\" type=\"Emphasized\" press=\"onPressAddressConfirmButton\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/Certificate.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formCertificate\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanM=\"3\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Certificate number\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputCertificateNumber\" liveChange=\"onCertificateAttributesLiveChange\" width=\"200px\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Certificate expiry\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<DatePicker id=\"dpickCertificateExpiryDate\" placeholder=\"Enter a date\"\n\t\t\t\t\t\t\tchange=\"onCertificateAttributesLiveChange\" width=\"40%\">\n\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintWithCarouselPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popHintWithCarousel\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Left\">\n\t\t<content>\n\t\t\t<VBox width=\"100%\" height=\"100%\" direction=\"Row\" justifyContent=\"Center\" fitContainer=\"false\">\n\t\t\t\t<Carousel id=\"carouselHint\" class=\"sapUiContentPadding\" loop=\"true\" width=\"550px\" heigth=\"500px\">\n\t\t\t\t</Carousel>\n\t\t\t</VBox>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/CertificateDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"popCertificate\" title=\"{viewModel>/popCertificateFormTitle}\" class=\"sapUiContentPadding\" placement=\"Bottom\" contentWidth=\"650px\">\n\t\t<content>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Certificate\" type=\"XML\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Cancel\" press=\"onPressCertificateCancelButton\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"Confirm\" type=\"Emphasized\" press=\"onPressCertificateConfirmButton\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/BankAccount.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formBankAccount\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanM=\"3\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Account location\" width=\"100%\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxBankAccountIDTypes\" items=\"{Registration>/BankAccountIDTypeSet}\" width=\"50%\"\n\t\t\t\t\t\t\tselectionChange=\"onBankAccountAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BankAccountIDTypeID}\" text=\"{Registration>BankAccountIDTypeText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBankAccountType\" visible=\"{= ${Registration>BankAccountIDTypeID} !== 'IBAN' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Account type\" width=\"100%\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxBankAccountTypes\" items=\"{Registration>/BankAccountTypeSet}\" width=\"40%\" change=\"onBankAccountAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>BankAccountTypeID}\" text=\"{Registration>BankAccountTypeText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBank\" visible=\"{= ${Registration>BankAccountIDTypeID} !== 'IBAN' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Bank\" width=\"100%\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxBanks\" items=\"{BankInputControl>/BankSet}\" width=\"50%\" selectionChange=\"onBankAccountAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{BankInputControl>BankID}\" text=\"{BankInputControl>BankText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBankBranchCode\" visible=\"{= ${Registration>BankAccountIDTypeID} !== 'IBAN' }\"\n\t\t\t\t\tenabled=\"{= ${BankInputControl>BankID} === 'Other' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Branch code\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t<Input id=\"inputBankBranchCode\" type=\"sap.m.InputType.Number\" maxLength=\"6\" liveChange=\"onBankAccountAttributesLiveChange\" width=\"100px\"/>\n\t\t\t\t\t\t\t<core:Icon src=\"sap-icon://sys-help\" press=\"hintForBankBranchCode\" class=\"sapUiSmallMarginTop sapUiTinyMarginBegin\" tooltip=\"Help\"\n\t\t\t\t\t\t\t\tcolor=\"#2B65EC\"/>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBankAccountNumber\" visible=\"{= ${Registration>BankAccountIDTypeID} !== 'IBAN' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Account number\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputBankAccountNumber\" type=\"sap.m.InputType.Number\" width=\"50%\" liveChange=\"onBankAccountAttributesLiveChange\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement id=\"felemBankAccountHolderName\" visible=\"{= ${Registration>BankAccountIDTypeID} !== 'IBAN' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Account holder\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputBankAccountHolderName\" width=\"50%\" liveChange=\"onBankAccountAttributesLiveChange\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/Cobrowse.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<Toolbar visible=\"{viewModel>/userInCobrowse}\">\n\t\t<ToolbarSpacer/>\n\t\t<MessageStrip id=\"msCobrowsingMessageStrip\" showCloseButton=\"false\" showIcon=\"true\"\n\t\t\ttext=\"{= ${i18n>messageCobrowsingForUser} + ' ' + ${viewModel>/cobrowseUserID} + ' ' + ${viewModel>/cobrowseUserDescription} }\" type=\"Warning\"></MessageStrip>\n\t\t<ToolbarSpacer/>\n\t</Toolbar>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/DeclarationPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popDeclaration\" title=\"{viewModel>/popDeclarationFormTitle}\" class=\"sapUiContentPadding\" placement=\"Bottom\" contentWidth=\"530px\">\n\t\t<content>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.Declaration\" type=\"XML\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Confirm\" press=\"onPressDeclarationConfirmButton\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button press=\"hintForDeclarationForm\" type=\"Transparent\" icon=\"sap-icon://sys-help\" tooltip=\"Help\"/>\n\t\t</endButton>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintChosenUserIDPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popChosenUserID\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Right\">\n\t\t<content>\n\t\t\t<Image src=\"image/HintChosenUserID.png\" alt=\"Hint for setting chosen user ID\"/>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/RegistrationConfirmation.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.layout=\"sap.ui.layout\"\n\txmlns=\"sap.m\">\n\t<VBox width=\"100%\" class=\"sapUiLargeMarginTopBottom\" direction=\"Row\" justifyContent=\"Center\">\n\t\t<items>\n\t\t\t<core:HTML id=\"htmlRegistrationConfirmation\" sanitizeContent=\"true\"\n\t\t\t\tcontent=\"&lt;div&gt;&lt;p&gt;&lt;b&gt;Your registration request has been submitted.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;Your reference is sReferenceID.&lt;/i&gt;&lt;/p&gt;&lt;/div&gt;\"/>\n\t\t</items>\n\t</VBox>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/Address.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formAddress\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanS=\"4\" labelSpanM=\"4\" labelSpanL=\"4\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Category\" width=\"100%\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxAddressCategory\" items=\"{Registration>/AddressCategorySet}\" width=\"50%\" selectionChange=\"onAddressAttributesLiveChange\"\n\t\t\t\t\t\t\tselectedKey=\"{viewModel>/selectedAddressCategoryID}\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>AddressCategoryID}\" text=\"{Registration>AddressCategoryText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/selectedAddressCategoryID} === 'Street' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"House number/ Street\" width=\"100%\" textAlign=\"Left\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputAddressHouseNumber\" liveChange=\"onAddressAttributesLiveChange\">\n\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L2 M2 S2\"/>\n\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t<Input id=\"inputAddressStreetName\" liveChange=\"onAddressAttributesLiveChange\">\n\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L4 M4 S4\"/>\n\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/selectedAddressCategoryID} === 'Street' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"false\" text=\"Building, Floor, Flat\" width=\"100%\" textAlign=\"Left\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputBuildingFloorFlat\" liveChange=\"onAddressAttributesLiveChange\">\n\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t<sap.ui.layout:GridData span=\"L6 M6 S6\"/>\n\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/selectedAddressCategoryID} !== 'Street' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"PO Box Number\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputAddressPOBoxNumber\" width=\"100px\" liveChange=\"onAddressAttributesLiveChange\" type=\"Number\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"City\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputAddressCity\" width=\"50%\" liveChange=\"onAddressAttributesLiveChange\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/selectedAddressCategoryID} === 'Street' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Postal code\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputAddressPostalCode\" width=\"100px\" liveChange=\"onAddressAttributesLiveChange\" type=\"Number\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/selectedAddressCategoryID} !== 'Street' }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"PO Box postal code\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputAddressPOBoxPostalCode\" width=\"100px\" liveChange=\"onAddressAttributesLiveChange\" type=\"Number\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement visible=\"{= ${viewModel>/felemAddressRegionsVisible} }\">\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Region\" width=\"100%\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxAddressRegions\" items=\"{Registration>/RegionSet}\" width=\"50%\" change=\"onAddressAttributesLiveChange\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>RegionID}\" text=\"{Registration>RegionText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Country\" width=\"100%\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<ComboBox id=\"cboxAddressCountries\" items=\"{Registration>/CountrySet}\" width=\"40%\" change=\"onAddressAttributesLiveChange\" selectionChange=\"onAddressAttributesLiveChange\"\n\t\t\t\t\t\t\tenabled=\"{viewModel>/cboxAddressCountriesEnabled}\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Registration>CountryID}\" text=\"{Registration>CountryText}\"/>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/Declaration.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns:sap.ui.unified=\"sap.ui.unified\" xmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formDeclaration\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Image src=\"image/DeclarationApp.png\" press=\"openSupplierDeclaration\" alt=\"Click to fill in your declaration\"\n\t\t\t\t\t\t\tclass=\"sapUiMediumMarginBegin\" width=\"450px\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields></sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/DocumentRequest.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns:sap.ui.unified=\"sap.ui.unified\" xmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formDocumentLoader\" editable=\"false\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanM=\"3\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<UploadCollection change=\"onDocumentRequestUploadCollectionChange\" fileDeleted=\"onDocumentRequestDeleted\"\n\t\t\t\t\t\t\tfileType=\"jpg,png,bmp,pdf,docx,doc,png,gif,txt\" id=\"ucDocumentRequestUploadCollection\"\n\t\t\t\t\t\t\titems=\"{ path: 'Registration>toDocuments', filters: [ { path: 'DocumentRequestID', operator: 'NE', value1: 'null' } ], factory: '.createUploadCollectionItem' }\"\n\t\t\t\t\t\t\tmaximumFileSize=\"10\" maximumFilenameLength=\"60\" mimeType=\"text/plain,text/xml,image/png,image/jpeg,application/pdf,application/msword\"\n\t\t\t\t\t\t\tmultiple=\"true\" sameFilenameAllowed=\"true\" typeMissmatch=\"onUploadFileTypeMismatch\" filenameLengthExceed=\"onUploadFileNameLengthExceed\"\n\t\t\t\t\t\t\tuploadComplete=\"onDocumentRequestUploadComplete\" uploadEnabled=\"false\" uploadUrl=\"../\" noDataText=\"No entries. Click + to add\">\n\t\t\t\t\t\t\t<toolbar>\n\t\t\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t\t\t<Title text=\"Documents\"/>\n\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t<Label id=\"labelDocumentRequests\" required=\"true\" text=\"Document type\"/>\n\t\t\t\t\t\t\t\t\t<ComboBox id=\"cboxDocumentRequests\" items=\"{ path: 'DocumentRequestsModel>/DocumentRequestSet' }\" width=\"300px\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onCBoxDocumentRequestsChange\" selectionChange=\"onCBoxDocumentRequestsChange\" class=\"cctDropDownInNonEditableForm\" placeholder=\"{i18n>pholderSelectEntry}\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{DocumentRequestsModel>DocumentTypeID}\" text=\"{DocumentRequestsModel>DocumentTypeText}\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>\n\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t</toolbar>\n\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:fields></sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintDeclarationFormPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popHintDeclaration\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Top\">\n\t\t<content>\n\t\t\t<Image src=\"image/HintDeclarationForm.png\" alt=\"Declaration hint\"/>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/Contact.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:sap.ui.layout=\"sap.ui.layout\" xmlns:sap.ui.layout.form=\"sap.ui.layout.form\"\n\txmlns=\"sap.m\">\n\t<sap.ui.layout.form:Form id=\"formContact\" editable=\"true\">\n\t\t<sap.ui.layout.form:layout>\n\t\t\t<sap.ui.layout.form:ResponsiveGridLayout singleContainerFullSize=\"true\" adjustLabelSpan=\"true\" labelSpanM=\"3\"/>\n\t\t</sap.ui.layout.form:layout>\n\t\t<sap.ui.layout.form:formContainers>\n\t\t\t<sap.ui.layout.form:FormContainer>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"Contact name\" textAlign=\"Left\" textDirection=\"Inherit\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputContactName\" placeholder=\"Enter a name for this contact\" liveChange=\"onContactAttributesLiveChange\" width=\"50%\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"true\" text=\"e-mail address\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputContactEMailAddress\" placeholder=\"Enter e-mail account for this contact\" liveChange=\"onContactAttributesLiveChange\"\n\t\t\t\t\t\t\twidth=\"60%\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"{viewModel>/inputContactPhoneNumberRequired}\" text=\"Phone number\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputContactPhoneNumber\" placeholder=\"Enter a landline phone number\" liveChange=\"onContactAttributesLiveChange\" width=\"50%\" required=\"{viewModel>inputContactMobileNumberRequired}\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"false\" text=\"Fax number\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputContactFaxNumber\" placeholder=\"Enter a fax number\" liveChange=\"onContactAttributesLiveChange\" width=\"50%\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t\t<sap.ui.layout.form:FormElement>\n\t\t\t\t\t<sap.ui.layout.form:label>\n\t\t\t\t\t\t<Label required=\"{viewModel>/inputContactMobileNumberRequired}\" text=\"Mobile number\"/>\n\t\t\t\t\t</sap.ui.layout.form:label>\n\t\t\t\t\t<sap.ui.layout.form:fields>\n\t\t\t\t\t\t<Input id=\"inputContactMobileNumber\" placeholder=\"Enter a mobile phone number\" liveChange=\"onContactAttributesLiveChange\" width=\"50%\"/>\n\t\t\t\t\t</sap.ui.layout.form:fields>\n\t\t\t\t</sap.ui.layout.form:FormElement>\n\t\t\t</sap.ui.layout.form:FormContainer>\n\t\t</sap.ui.layout.form:formContainers>\n\t</sap.ui.layout.form:Form>\n\t<MessageStrip class=\"sapUiSmallMarginBeginEnd sapUiMediumMarginTopBottom\" type=\"Information\" text=\"{i18n>messageRequiredInput}\" showIcon=\"true\"/>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/HintBusinessPartnerIDPopover.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ResponsivePopover id=\"popHintBusinessPartnerID\" showHeader=\"false\" class=\"sapUiContentPadding\" placement=\"Right\">\n\t\t<content>\n\t\t\t<Image src=\"image/HintBusinessPartnerID.png\" alt=\"Business partner ID hint\"/>\n\t\t</content>\n\t</ResponsivePopover>\n</core:FragmentDefinition>",
		"capetown/gov/registration/fragment/reuse/BankAccountDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"popBankAccount\" title=\"{viewModel>/popBankAccountFormTitle}\" class=\"sapUiContentPadding\" placement=\"Bottom\" contentWidth=\"650px\">\n\t\t<content>\n\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"capetown.gov.registration.fragment.reuse.BankAccount\" type=\"XML\"/>\n\t\t</content>\n\t\t<beginButton>\n\t\t\t<Button text=\"Cancel\" press=\"onPressBankAccountCancelButton\"/>\n\t\t</beginButton>\n\t\t<endButton>\n\t\t\t<Button text=\"Confirm\" type=\"Emphasized\" press=\"onPressBankAccountConfirmButton\"/>\n\t\t</endButton>\n\t</Dialog>\n</core:FragmentDefinition>"
	}
});